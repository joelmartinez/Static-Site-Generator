<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.2" created="2013-07-23 10:08" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>CodeCube.NET</title>
	<link>http://codecube.net</link>
	<description>Joel Martinez' weblog</description>
	<pubDate>Tue, 23 Jul 2013 10:08:20 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://codecube.net</wp:base_site_url>
	<wp:base_blog_url>http://codecube.net</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>joelmartinez@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Joel Martinez]]></wp:author_display_name><wp:author_first_name><![CDATA[Joel]]></wp:author_first_name><wp:author_last_name><![CDATA[Martinez]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.5.2</generator>

	<item>
		<title>Site Moved!</title>
		<link>http://codecube.net/2007/08/site-moved/</link>
		<pubDate>Wed, 29 Aug 2007 01:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=3</guid>
		<description></description>
		<contentencoded><![CDATA[I'm still stuck with the dreadful default blog template ... but at least I'm over now.  Now I can kick my previous host to the curb]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2007-08-28 18:00:00</wp:post_date>
		<wp:post_date_gmt>2007-08-29 01:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>site-moved</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>Younowwhatitis@ea.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.speedbagforum.com</wp:comment_author_url>
			<wp:comment_author_IP>72.189.5.190</wp:comment_author_IP>
			<wp:comment_date>2007-08-28 18:23:38</wp:comment_date>
			<wp:comment_date_gmt>2007-08-29 01:23:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Welcome to the PHP/MySql powered dark side ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RSS Link</title>
		<link>http://codecube.net/2007/08/rss-link/</link>
		<pubDate>Wed, 29 Aug 2007 14:32:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=4</guid>
		<description></description>
		<contentencoded><![CDATA[To those of you who may have already been subscribed to my RSS previously, I'm going to (hopefully soon) make it so the previous link won't break.  So don't delete the link just yet :-P  although, the new RSS link would also work, so if you just want to re-subscribe, that too is cool.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2007-08-29 07:32:17</wp:post_date>
		<wp:post_date_gmt>2007-08-29 14:32:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rss-link</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Further Updates</title>
		<link>http://codecube.net/2007/08/further-updates/</link>
		<pubDate>Thu, 30 Aug 2007 04:24:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=5</guid>
		<description></description>
		<contentencoded><![CDATA[Slowly working on the site as I have time (as if).  After a lifetime of dealing with IIS, I'm not finding myself having to acquaint myself with Apache.  Particularly, I'm trying to figure out how to use mod_rewrite.  The first thing I'm trying to accomplish is to rewrite the URL for the RSS feed so that the old link will still work.  After that, I'll get the link to some of the downloads that people are looking for back up (like some of the XNA things I've written).  After that, I'm conjuring up a scheme to use the mod_rewrite stuff so that all the old links from my previous CMS work.

Again, as I have time :-P]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2007-08-29 21:24:47</wp:post_date>
		<wp:post_date_gmt>2007-08-30 04:24:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>further-updates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>97.100.24.219</wp:comment_author_IP>
			<wp:comment_date>2007-08-30 21:22:31</wp:comment_date>
			<wp:comment_date_gmt>2007-08-31 04:22:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[heh, nope ... microsoft4lyfe]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>RSS link back up</title>
		<link>http://codecube.net/2007/08/rss-link-back-up/</link>
		<pubDate>Fri, 31 Aug 2007 02:43:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=6</guid>
		<description></description>
		<contentencoded><![CDATA[Ok, with the wonders of .htaccess, the old RSS link is back up and running.  So those of you who were signed up with the old URL should simply continue to see updates :-)

<a href="http://codecube.net/rss.aspx">http://codecube.net/rss.aspx</a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2007-08-30 19:43:38</wp:post_date>
		<wp:post_date_gmt>2007-08-31 02:43:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rss-link-back-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>XNA Video Library</title>
		<link>http://codecube.net/2007/08/xna-video-library/</link>
		<pubDate>Fri, 31 Aug 2007 02:34:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=7</guid>
		<description></description>
		<contentencoded><![CDATA[For those of you looking for the XNA Video library, you can find it here:

<a href="http://scurvybones.com/downloads/Scurvy.Media.Video.zip">http://scurvybones.com/downloads/Scurvy.Media.Video.zip</a>

It is the latest version, but does not include the  360 version of the libs.  I've got some great changes half-implemented that will make the video playback work even better.   Stay tuned for more :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2007-08-30 21:34:56</wp:post_date>
		<wp:post_date_gmt>2007-08-31 02:34:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-video-library</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trackballs, 3D Modelling</title>
		<link>http://codecube.net/2007/08/trackballs-3d-modelling/</link>
		<pubDate>Fri, 31 Aug 2007 11:51:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=8</guid>
		<description></description>
		<contentencoded><![CDATA[I'm finally thinking about upgrading my mizzouse from the aging logitech trackball I've been using.  It only has two buttons so it's not usable for any sort of 3d modelling ... anyone out there in intarweb-land have any suggestions for trackball suitable for game development?]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2007-08-31 06:51:47</wp:post_date>
		<wp:post_date_gmt>2007-08-31 11:51:47</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>trackballs-3d-modelling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using Windows Live Writer</title>
		<link>http://codecube.net/2007/09/using-windows-live-writer/</link>
		<pubDate>Sun, 02 Sep 2007 18:40:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://cc.scurvybones.com/?p=9</guid>
		<description></description>
		<contentencoded><![CDATA[While it was kind of painful to leave behind my custom developed blog engine, that had served me well and faithfully for 6 or 7 years ... it's nice to be using modern "Technology" like wordpress.  It's nice to download windows live writer and simply point it at my URL and then have this really nice publishing system.

Also nice ... no more security holes for <a href="http://george.tsiokos.com/">George</a> to exploit ;-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2007-09-02 11:40:33</wp:post_date>
		<wp:post_date_gmt>2007-09-02 18:40:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>using-windows-live-writer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>71.53.250.208</wp:comment_author_IP>
			<wp:comment_date>2007-09-02 23:26:16</wp:comment_date>
			<wp:comment_date_gmt>2007-09-03 04:26:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unfortunately, I'm no longer admin of codecube.net: 'OR 1=1' doesn't work anymore :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Collaborative Multiplayer Game</title>
		<link>http://codecube.net/2007/09/collaborative-multiplayer-game/</link>
		<pubDate>Mon, 03 Sep 2007 06:00:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=10</guid>
		<description></description>
		<contentencoded><![CDATA[With the Xbox Live APIs being exposed in XNA 2.0, one must start to think about how to use them.  One idea I had that would most certainly never be green-lit by a risk averse publisher is for what would best be described as a party game with a focus on team collaboration.

Since the XBox Live APIs are going to let you have a mixture of local and network players in a given game session, the idea is to have multiple XBoxes (at least two) taking part.  One team of four would be on one xbox, while the opposing team is on the other.
<h2>Team Collaboration</h2>
Ever since I played Battlefield 1942, I've been enamored with multiplayer collaboration.  The fact that it is possible for a well organized team in that game to mount a calculated assault and totally own the enemy is very exciting.  Of course, notice I said "it is possible" ... I've never actually been in an online game where there was any level of organization :-P

This is why I'd like to develop something where the collaboration must occur with people physically on the same box ... kinda like when the power rangers form up the megazord and they're all in the same "room" (does each one control a limb or something? :-P ).  Or perhaps how everyone has a role on the bridge of the enterprise.

Obviously, none of this gibberish that I've written has much depth ... these are all just ideas that I'd love to explore.  I don't expect it to have mass appeal, because you'd have to have a fairly large group to play it (8 at least) physically in the same location.  But that's the great thing about XNA ... one can create things that don't have all of these expectations of ROI.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2007-09-03 01:00:36</wp:post_date>
		<wp:post_date_gmt>2007-09-03 06:00:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>collaborative-multiplayer-game</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EA Skate.  Awesome!</title>
		<link>http://codecube.net/2007/09/ea-skate-awesome/</link>
		<pubDate>Tue, 04 Sep 2007 02:32:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=11</guid>
		<description></description>
		<contentencoded><![CDATA[Those of you who know me know that I love skateboarding.  Even though I've been lame the last few years and let life and everything else get in the way to where I don't skate ... the fire still burns :-)

I remember another game called Thrasher from back when Tony Hawk first came out.  At the time, I really liked Thrasher better because it was a bit slower paced ... a bit more realistic.  And it had this cool feature where the skater would go ragdoll any time you messed up a trick.  Very fun game.  But I guess Tony Hawk won that battle.

It's the age old battle between an "Arcadey" game vs. a more proper simulation.  Of course, there will be people that can't stand one or the other.  I for one say that there is room in the pantheon of games for both ... let's just hope that dividing the market like that keeps enough customers to continue funding both games :-)

EA Skate. captures the feeling of skating very well ... something that bothered me about Tony Hawk was that you could never truly reproduce real-life tricks like doing a trick on a pyramid from one bank to the other.  Because the characters would ollie so high, they'd just completely go over the pyramid (a fatty to flatty, as it were :-P ).  The physics in EA Skate actually accounts for the surface that you're going to land on and changes the skater's direction accordingly.  The result is very realistic, and looks awesome.

I'll definitely be picking this up when it comes out ... and hopefully once my workload @ work dies down a bit, I expect to actually start skating again.

<em>Random tidbit: Rob, the guy who runs </em><a href="http://www.skateparkoftampa.com" title="http://www.skateparkoftampa.com"><em>http://www.skateparkoftampa.com</em></a><em> (the best skatepark in the world), is totally a .NET geek :-)</em>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2007-09-03 21:32:24</wp:post_date>
		<wp:post_date_gmt>2007-09-04 02:32:24</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ea-skate-awesome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>XSI Mod Tool</title>
		<link>http://codecube.net/2007/09/xsi-mod-tool/</link>
		<pubDate>Wed, 05 Sep 2007 03:32:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=12</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://www.softimage.com/products/modtool/">Well done</a>, if Microsoft's plan of indoctrinating new game developers "when they're young" (so to speak) works out, these guys are positioned to really take advantage of that.  By choosing to ally themselves with XNA, these guys will just naturally choose to license the full XSI tool when they go pro.

Smart. Real Smart.

I plan on taking a look at this when I get a bit more time ... hopefully it's as easy to use as Wings3D.  And it apparently has animation support too :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2007-09-04 22:32:24</wp:post_date>
		<wp:post_date_gmt>2007-09-05 03:32:24</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xsi-mod-tool</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA Video Announcement ... coming soon</title>
		<link>http://codecube.net/2007/09/xna-video-announcement-coming-soon/</link>
		<pubDate>Tue, 04 Sep 2007 22:09:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=13</guid>
		<description></description>
		<contentencoded><![CDATA[In case anyone is reading ... stay tuned for an announcement about my XNA Video library in the next day or two :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2007-09-04 17:09:14</wp:post_date>
		<wp:post_date_gmt>2007-09-04 22:09:14</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-video-announcement-coming-soon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[jbriguet]]></wp:comment_author>
			<wp:comment_author_email>jbriguet@free.fr</wp:comment_author_email>
			<wp:comment_author_url>http://www.jbriguet.com/</wp:comment_author_url>
			<wp:comment_author_IP>84.6.17.175</wp:comment_author_IP>
			<wp:comment_date>2007-09-04 19:20:32</wp:comment_date>
			<wp:comment_date_gmt>2007-09-05 00:20:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, i'm using it, and it's actually perfect for my needs (a bit buggy sometimes when building, but, hey, it's free, and runs perfectly)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Ziggy]]></wp:comment_author>
			<wp:comment_author_email>ziggyware@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ziggyware.com</wp:comment_author_url>
			<wp:comment_author_IP>64.56.9.179</wp:comment_author_IP>
			<wp:comment_date>2007-09-05 14:41:56</wp:comment_date>
			<wp:comment_date_gmt>2007-09-05 19:41:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Everyone reads codecube ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Scurvy Media is now Open Source</title>
		<link>http://codecube.net/2007/09/scurvy-media-is-now-open-source/</link>
		<pubDate>Sat, 08 Sep 2007 15:08:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=14</guid>
		<description></description>
		<contentencoded><![CDATA[So this may or may not be exciting for you faithful readers, but I've decided to release my little project out into the world as open source.

The project is called Scurvy Media, and can be found on CodePlex:
<a href="http://www.codeplex.com/ScurvyMedia">http://www.codeplex.com/ScurvyMedia</a>

Why did I call it Scurvy Media when it only contains the Video playing library?  Well, I actually have a pretty big interest in both Audio and Video media.  I would like eventually for this library to encompass a lot of the ideas I have in that field.
<h3>What's Included</h3>
<ol>
	<li>Content Pipeline assembly:
<ol>
	<li>AVI importer
Lets you import AVI videos.  the importer architecture is such that you could create importers for additional types of videos.</li>
	<li>In-memory processor
Memory will be loaded fully into memory when you load the video.</li>
	<li>Streaming processor
Video will be streamed from disk at runtime.</li>
</ol>
</li>
	<li>Runtime assembly
<ol>
	<li>Video class
very simple runtime class that has a Play method, and properties such as Loop and IsPlaying.</li>
	<li>video content manager.
If you're using the streaming processor, you have to use this custom content manager because of the way the file stream must be handled.</li>
</ol>
</li>
</ol>
I'll be talking about some of the limitations soon, which is what's driving the current development.  Hopefully this project will grow to provide lots of media related functionality to the XNA community :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2007-09-08 10:08:13</wp:post_date>
		<wp:post_date_gmt>2007-09-08 15:08:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-is-now-open-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[brainzizi]]></wp:comment_author>
			<wp:comment_author_email>nope@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.0.90.80</wp:comment_author_IP>
			<wp:comment_date>2007-09-25 13:14:18</wp:comment_date>
			<wp:comment_date_gmt>2007-09-25 18:14:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ok, am I doing something wrong or are build times with scurvy media EXTREMLY long... and i have just 1 file that needs to be processed by the avi importer...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>97.100.24.219</wp:comment_author_IP>
			<wp:comment_date>2007-09-29 08:03:06</wp:comment_date>
			<wp:comment_date_gmt>2007-09-29 13:03:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes, build times are a problem right now (though, you'd need to defined "EXTREMELY" to see whether it's out of the ordinary or not) ... the pipeline component is currently being revamped for better performance and memory consumption.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Happy Talk like a Pirate Day</title>
		<link>http://codecube.net/2007/09/happy-talk-like-a-pirate-day/</link>
		<pubDate>Wed, 19 Sep 2007 13:31:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=15</guid>
		<description></description>
		<contentencoded><![CDATA[you scurvy dogs ;-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2007-09-19 08:31:57</wp:post_date>
		<wp:post_date_gmt>2007-09-19 13:31:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>happy-talk-like-a-pirate-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>.NET Source Code to be Released</title>
		<link>http://codecube.net/2007/10/net-source-code-released/</link>
		<pubDate>Wed, 03 Oct 2007 22:28:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=16</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx" title="http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx">http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx</a>

Wow.  While this is awesome and all, I wonder how many hours of productivity will be lost, collectively speaking.  Think about it, some winforms control starts acting funny ... not doing what you expect.  I guarantee that tons of people are going to be debugging into the .NET framework libs to see if the bug is in there.  And I can almost certainly guarantee that Microsoft's code is less buggy than yours ;-)

This is definitely an interesting move, but probably not as exciting as most people think it is ... because really, any time you spend stepping through their code, is time wasted.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2007-10-03 17:28:49</wp:post_date>
		<wp:post_date_gmt>2007-10-03 22:28:49</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>net-source-code-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Björn Graf]]></wp:comment_author>
			<wp:comment_author_email>bg@b-cage.net</wp:comment_author_email>
			<wp:comment_author_url>http://bxnaa.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.131.200.206</wp:comment_author_IP>
			<wp:comment_date>2007-10-03 18:01:30</wp:comment_date>
			<wp:comment_date_gmt>2007-10-03 23:01:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Released? The announcement you link to talks about releasing the code later this year (2008). No wonder their code is less buggy than yours if you pay less attention to the details ;)

But seriously, I expect most of the basic WinForm controls be light wrappers for the Win32 ones, only higher level stuff, e.g. DataGrid and friends would be in System.WinFroms. WPF/System.Windows, on the other hand, will be interesting - even though that a lot of the actual drawing and behavior happens in Whatever.Presentation.dll...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>97.100.24.219</wp:comment_author_IP>
			<wp:comment_date>2007-10-04 20:30:53</wp:comment_date>
			<wp:comment_date_gmt>2007-10-05 01:30:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ahh, of course ... title updated]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>VS Color Scheme</title>
		<link>http://codecube.net/2007/10/vs-color-scheme/</link>
		<pubDate>Wed, 17 Oct 2007 00:48:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=17</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://flatredball.com">Vic</a> pointed me to a color scheme that you can just import into Visual Studio:
<a href="http://www.winterdom.com/weblog/2007/10/13/RagnarokAVS2005ColorScheme.aspx">http://www.winterdom.com/weblog/2007/10/13/RagnarokAVS2005ColorScheme.aspx</a>

I really like it ... having a dark background with light text is a good color scheme if you tend to work in low light.  I used to do it more often and it caused a lot less eye strain.

If you end up importing it, just make sure you bring the font-size a bit down, I don't know if the person who made that color scheme had a tiny monitor or what :-P]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2007-10-16 19:48:02</wp:post_date>
		<wp:post_date_gmt>2007-10-17 00:48:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vs-color-scheme</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Comments Disabled</title>
		<link>http://codecube.net/2007/10/comments-disabled/</link>
		<pubDate>Mon, 29 Oct 2007 13:50:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=18</guid>
		<description></description>
		<contentencoded><![CDATA[Man ... how lame is the internet.  I've had to disable comments because of spam ... laaaaaammmmeeeee]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2007-10-29 08:50:58</wp:post_date>
		<wp:post_date_gmt>2007-10-29 13:50:58</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>comments-disabled</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Scurvy Media v0.5.2007.1104</title>
		<link>http://codecube.net/2007/11/scurvy-media-v0520071104/</link>
		<pubDate>Sun, 04 Nov 2007 10:44:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=19</guid>
		<description></description>
		<contentencoded><![CDATA[I decided to make an "official" binary only release which can be found <a href="https://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=ScurvyMedia&amp;ReleaseId=8148" target="_blank">here</a>.  Technically, the only new feature that wasn't there before is a slightly more informative exception that gets thrown if you try to load a streaming video without the VideoContentManager.

Hopefully this will encourage library use, and potentially some feedback/bug reports now that you don't have to compile the code before using it :-)

If you're curious about the format of the build number, I've found from recent experience at work, that having an informational build number can be quite useful.  this is basically the format:
<em>&lt;major&gt;.&lt;minor&gt;.&lt;yyyy&gt;.&lt;mmdd&gt;</em>

The only reason it's not major.minor.revision.timestamp is because there is <a href="http://blogs.msdn.com/msbuild/archive/2007/01/03/fixing-invalid-version-number-problems-with-the-assemblyinfotask.aspx" target="_blank">a bug</a> in msbuild.

On, and also ... I've also checked in a new branch of the code.  This is where I'll hack n' slash the pipeline code to support larger videos.  The problem of course is that currently, the importer will load the whole thing into video, which, on a large video would starve your computer of memory.  It will ideally just load the right kind of importer content type, and only read each frame at "write time" so that only one frame at a time would need to be in memory (or whatever the GC deems appropriate.

Slowly but surely, I'm working on this ... by hook or by crook ;-)

<em>ps. now that I've had to disable comments, if you have feedback on this lib, just hit up the </em><a href="http://www.codeplex.com/ScurvyMedia/Thread/List.aspx" target="_blank"><em>discussion forums</em></a><em> on the scurvy media codeplex site.</em>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2007-11-04 05:44:30</wp:post_date>
		<wp:post_date_gmt>2007-11-04 10:44:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-v0520071104</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>XNA Game Studio 2.0 Beta</title>
		<link>http://codecube.net/2007/11/xna-game-studio-20-beta/</link>
		<pubDate>Tue, 20 Nov 2007 15:08:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=20</guid>
		<description></description>
		<contentencoded><![CDATA[<p>In case you hadn't heard already:<br><a title="http://creators.xna.com/beta/betahome.aspx" href="http://creators.xna.com/beta/betahome.aspx">http://creators.xna.com/beta/betahome.aspx</a></p> <p>Definitely looking forward to checking out the new "Net Rumble" starter kit ... which showcases some of the new multiplayer APIs.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2007-11-20 10:08:17</wp:post_date>
		<wp:post_date_gmt>2007-11-20 15:08:17</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-game-studio-20-beta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scurvy.Media upgraded to XNA 2.0 beta</title>
		<link>http://codecube.net/2007/11/scurvymedia-upgraded-to-xna-20-beta/</link>
		<pubDate>Sun, 25 Nov 2007 05:57:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=21</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I've checked in the initial check-in of the upgrade project to the following location in the <a href="http://codeplex.com/scurvymedia" target="_blank">codeplex repository</a>:<br>$/Branches/2.0 Upgrade</p> <p>I have to admit that I am loving the fact that I can now use the integrated source control in the big boy version of VS.&nbsp; Since XNA 2.0 has handy new parameterized processors, I figure I'll just do my planned refactors to the pipeline in 2.0.</p> <p>I don't have a binary release on this one yet, but stay tuned :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2007-11-25 00:57:10</wp:post_date>
		<wp:post_date_gmt>2007-11-25 05:57:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvymedia-upgraded-to-xna-20-beta</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Scurvy Media v.next</title>
		<link>http://codecube.net/2007/11/scurvy-media-vnext/</link>
		<pubDate>Mon, 26 Nov 2007 12:00:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=22</guid>
		<description></description>
		<contentencoded><![CDATA[The next version is coming along nicely now :-) I just checked in some good work around the pipeline refactor.  things are much simpler now, and will be much more memory friendly ... which will allow you to use larger videos.
<ol>
	<li>The pipeline API is much simpler now.  It will be much easier to extend in the future.  I have an interface (IVideoContent) which the importer will return.  This IVideoContent will be responsible for actually doing the work of loading the frame data for the content writer to write to disk.Particularly of interest is the fact that IVideoContent.Frames property returns an IEnumerable&lt;Texture2DContent&gt;.  Using the <a href="http://msdn2.microsoft.com/en-us/library/9k7k7cf0(VS.80).aspx" target="_blank">yield keyword</a> allows the writer to do it's work one frame/texture at a time ... and then it's free for the garbage collector to collect.</li>
	<li>There will be no need for a custom processor ... the pipeline will just use the pass through processor.</li>
	<li>In-memory vs Streaming will simply be a parameter on the importer.
<em>note: haven't tested this yet, but you may not be able to parameterize an importer (if I'm reading the docs right).  If that's the case, then point 1 is moot, and I'll simply have a processor that will let you choose options like in-mem vs streaming, and some other things like image formats.</em></li>
	<li>Runtime API won't be affected.  as of yet, I don't have any plans on changing that API, so code that you've already written won't have to change.</li>
</ol>
So far, all the feedback I've gotten (aside from memory issues with large videos) has been positive.  Haven't gotten any bug reports, which leads me to believe that things are, at least, stable :-)  This is good, and makes me think that I need to put a priority on reaching a feature complete state.

The only major feature I can think of that's missing is audio ... so I'm thinking that this is what I will work on next after this version is out the door.  However, if you have any requests, or ideas on what you'd like to see in the next version pipe up in the <a href="http://www.codeplex.com/Thread/List.aspx?ProjectName=ScurvyMedia" target="_blank">discussion forums</a>.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2007-11-26 07:00:33</wp:post_date>
		<wp:post_date_gmt>2007-11-26 12:00:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-vnext</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Next build of Scurvy.Media almost done</title>
		<link>http://codecube.net/2007/12/next-build-of-scurvymedia-almost-done/</link>
		<pubDate>Sun, 02 Dec 2007 04:30:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=23</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I fleshed out the content writer and reader in my latest checkin to <a href="http://www.codeplex.com/ScurvyMedia/SourceControl/ListDownloadableCommits.aspx" target="_blank">codeplex</a>.&nbsp; I'm almost done, there's just a little bit of work left to do on the reader, then time for testing, and a bit of re-organization of namespaces and types.&nbsp; I anticipate having it ready in another coding session or two.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2007-12-01 23:30:54</wp:post_date>
		<wp:post_date_gmt>2007-12-02 04:30:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>next-build-of-scurvymedia-almost-done</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DBP 2.0 is around the corner</title>
		<link>http://codecube.net/2007/12/dbp-20-is-around-the-corner/</link>
		<pubDate>Wed, 05 Dec 2007 18:53:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=24</guid>
		<description></description>
		<contentencoded><![CDATA[<p>The last one resulted in a huge number of pretty awesome games.&nbsp; I noticed that as a result of that contest, the topics on the XNA forums became very deep and technical.&nbsp; And the games that resulted were pretty awesome:<br><a title="http://www.dreambuildplay.com" href="http://www.dreambuildplay.com">http://www.dreambuildplay.com</a></p> <p>Can't wait to see what comes out of this one :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2007-12-05 13:53:02</wp:post_date>
		<wp:post_date_gmt>2007-12-05 18:53:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>dbp-20-is-around-the-corner</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DBP 2.0 Challenge Announced</title>
		<link>http://codecube.net/2007/12/dbp-20-challenge-announced/</link>
		<pubDate>Sun, 09 Dec 2007 02:14:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=25</guid>
		<description></description>
		<contentencoded><![CDATA[<p>From the DBP Site:</p> <blockquote> <p><b>artificial intelligence</b> <i>noun</i>: the capability of a machine to <br>perform functions that are normally associated with human intelligence, such as reasoning and optimization through experience <br>[Abbreviation : AI] <br><br>Push the limits of Artificial Intelligence while building a game with XNA<br>Game Studio 2.0. Create a new and innovative use of Artificial <br>Intelligence in a game and you could win the opportunity to <br>interview for at an internship with Microsoft Research, Rare Ltd <br>or Lionhead Studios. Review the Official Rules for more details.</p></blockquote> <p>Just as a thought exercise, I went to the <a href="http://en.wikipedia.org/wiki/Game_ai#History" target="_blank">Wikipedia entry for Game AI</a>.&nbsp; I made a (very) rough list of AI concepts in the order in which that wiki entry introduces them in.</p> <ul> <li>enemy movement based on stored patterns.</li> <li>enemy movement based on hash of human input for more randomization</li> <li>different personalities for enemies (chase, evade, random, cut off @ pass)</li> <li>Tunable AI for user controllable experience</li> <li>Pathfinding</li> <li>FSM for many actors</li> <li>Neural Network</li> <li>Evaluation of player action</li> <li>Environmental awareness (cover, getting dead mate's weapons)</li> <li>AI Team cooperation</li> <li>Information Suppression (no cheating)</li></ul> <p>It seems to me that either you're going to be "pushing the limits of AI", or you'll be "creating a new and innovating use of AI".&nbsp; Unfortunately, I know that I won't have time to participate in this contest. However, I urge all you would-be participants to look at the list above and ask yourself if you're going to try to come up with a new technique altogether, or simply a creative composition of the above to come up with something new and fresh.</p> <p>Good Luck!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2007-12-08 21:14:38</wp:post_date>
		<wp:post_date_gmt>2007-12-09 02:14:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>dbp-20-challenge-announced</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scurvy Media: AVI file must be writable</title>
		<link>http://codecube.net/2008/01/scurvy-media-avi-file-must-be-writable/</link>
		<pubDate>Sun, 13 Jan 2008 03:45:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=26</guid>
		<description></description>
		<contentencoded><![CDATA[<p>hmm, interesting ... just figured out that in the latest build (not released, just in source control) of the scurvy media library, any input AVI must not be readonly.&nbsp; Not the worst bug in the world, but a bug nonetheless.</p> <p>I created a bug item:</p> <p><a title="http://www.codeplex.com/ScurvyMedia/WorkItem/View.aspx?WorkItemId=3245" href="http://www.codeplex.com/ScurvyMedia/WorkItem/View.aspx?WorkItemId=3245">http://www.codeplex.com/ScurvyMedia/WorkItem/View.aspx?WorkItemId=3245</a></p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2008-01-12 22:45:43</wp:post_date>
		<wp:post_date_gmt>2008-01-13 03:45:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-avi-file-must-be-writable</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Scurvy Media finally works in XNA 2.0</title>
		<link>http://codecube.net/2008/01/scurvy-media-finally-works-in-xna-20/</link>
		<pubDate>Sat, 19 Jan 2008 17:50:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=27</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Finally! the <a href="http://www.codeplex.com/ScurvyMedia" target="_blank">scurvy media</a> video-to-texture library finally works in xna 2.0.&nbsp; I checked in the changes that show off the new features like the video processor that lets you choose between streaming and in-memory playback mode (in the Branches folder).&nbsp; </p> <p>thanks for all the feedback that I've gotten so far, and for everyone's patience :-) I do this on my spare time, so it's pretty satisfying when I finally get somewhere.&nbsp; </p> <p>Now that I finally got it to work, I still need to clean up the code a little bit and merge the branch back into mainline.&nbsp; Once I do that, I'll put together a binary release.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2008-01-19 12:50:12</wp:post_date>
		<wp:post_date_gmt>2008-01-19 17:50:12</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-finally-works-in-xna-20</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Scurvy Media: InvalidOperationException</title>
		<link>http://codecube.net/2008/01/scurvy-media-invalidoperationexception/</link>
		<pubDate>Sat, 19 Jan 2008 18:00:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=28</guid>
		<description></description>
		<contentencoded><![CDATA[<p>If you receive this error when calling the update method on the Video class:</p> <blockquote> <p>The operation was aborted. You may not modify a resource that has been set on a device, or after it has been used within a tiling bracket.</p></blockquote> <p>Then this thread might offer some insight into how to avoid it:<br><a title="http://forums.xna.com/thread/35536.aspx" href="http://forums.xna.com/thread/35536.aspx">http://forums.xna.com/thread/35536.aspx</a></p> <p>I got around it by putting this line of code to null out the texture on the video card before the update method gets called on the Video class in the sample project:</p> <p><strong>GraphicsDevice.Textures[0] = null; </strong><br>vid.Update();</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-01-19 13:00:07</wp:post_date>
		<wp:post_date_gmt>2008-01-19 18:00:07</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-invalidoperationexception</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Scurvy Media v0.6.2008.0120 Released</title>
		<link>http://codecube.net/2008/01/scurvy-media-v0620080120-released/</link>
		<pubDate>Mon, 21 Jan 2008 18:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=29</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://www.codeplex.com/ScurvyMedia" title="http://www.codeplex.com/ScurvyMedia">http://www.codeplex.com/ScurvyMedia</a>

The binary release now supports GS 2.0, and sports a cleaned up pipeline architecture that has a better memory footprint, and a cleaner extensibility model.

Next on the list is audio integration and perhaps a few bugfixes.

Please note: currently, the release is only for x86, I haven't tested the code on the 360 quite yet.  More on that soon.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2008-01-21 08:00:00</wp:post_date>
		<wp:post_date_gmt>2008-01-21 18:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-v0620080120-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Sample Video Project</title>
		<link>http://codecube.net/2008/01/sample-video-project/</link>
		<pubDate>Tue, 22 Jan 2008 19:07:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=30</guid>
		<description></description>
		<contentencoded><![CDATA[<p>If you haven't already seen it, the Scurvy.Media source code contains a sample project.&nbsp; It's not very complex, just a simple example of how to use the API to display a short video using the SpriteBatch.</p> <p><a title="http://www.codeplex.com/ScurvyMedia/SourceControl/ListDownloadableCommits.aspx" href="http://www.codeplex.com/ScurvyMedia/SourceControl/ListDownloadableCommits.aspx">http://www.codeplex.com/ScurvyMedia/SourceControl/ListDownloadableCommits.aspx</a></p> <p>Since you can download the whole repository from the link above, I didn't bother to make a source code release.&nbsp; But if you download the latest commit, you'll see the VideoSample project.</p> <p>Enjoy! :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-01-22 09:07:50</wp:post_date>
		<wp:post_date_gmt>2008-01-22 19:07:50</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sample-video-project</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>bug posted on XNA&#039;s Connect site</title>
		<link>http://codecube.net/2008/01/bug-posted-on-xnas-connect-site/</link>
		<pubDate>Wed, 23 Jan 2008 14:33:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=31</guid>
		<description></description>
		<contentencoded><![CDATA[<p>despite the refactoring of the scurvy media pipeline architecture, trying to add large videos will result in an out of memory exception.&nbsp; This is because under the covers, they're using a MemoryStream ... so even though *I'm* not using a lot of memory ... they still are.</p> <p><a title="https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=323222&amp;SiteID=226" href="https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=323222&amp;SiteID=226">https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=323222&amp;SiteID=226</a></p> <p>I filed the above bug report ... and I admit even in that bug report that my pipeline could just avoid writing so much data :-P and I am planning on improving that ... as soon as I can figure out how to write and then set the data texture data using dxt1 compression.</p> <p>But I figured I'd file the bug report anyways as there could be some other reason to write lots of data to .xnb</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2008-01-23 04:33:28</wp:post_date>
		<wp:post_date_gmt>2008-01-23 14:33:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bug-posted-on-xnas-connect-site</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>The Difficulties of Audio</title>
		<link>http://codecube.net/2008/01/the-difficulties-of-audio/</link>
		<pubDate>Thu, 24 Jan 2008 14:01:08 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=32</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So now that I'm looking @ the next features for Scurvy Media ... the issue of Audio comes up.&nbsp; Currently, if you add a video to play in your XNA project, it will be silent.&nbsp; Now, the problem is that the "audio pipeline" is completely separated from the content pipeline.&nbsp; </p> <p>Even though technically speaking, the XACT project is added and processed by the content pipeline ... the audio is still gated by the requirement of wave forms being added to the XACT UI.&nbsp; Thus, being able to add audio items programmatically is an issue.</p> <p>I toyed around with the possibility of extracting the .wav and programmatically creating an xact project from the video importer ... but comments on the forums suggested that having more than one AudioEngine instance wouldn't be smart.&nbsp; So it looks like in the meantime, I'll have to simply provide a separate tool to extract the audio from the .avi, and then an API to sync up the audio playing with the video.</p> <p>If anyone has any ideas, they'd be very welcome :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2008-01-24 04:01:08</wp:post_date>
		<wp:post_date_gmt>2008-01-24 14:01:08</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-difficulties-of-audio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>XNA/XACT Pre-Mortem</title>
		<link>http://codecube.net/2008/01/xnaxact-pre-mortem/</link>
		<pubDate>Thu, 24 Jan 2008 08:43:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=33</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Hehe ... poking around on the internet, I actually came across an old post of mine on the old XNA forums from when they were on the MSDN forums.</p> <p>I believe I had posted this on my blog previously as well, however, since I changed blog engines this post has been lost to the ages, so I figured I'd reprint it since it's still good info.</p> <blockquote> <p>After reading this very useful <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1059623&amp;SiteID=1">post-mortem</a> and working with <b>XNA</b> and XACT for a bit, I decided to do a bit of a pre-mortem to share what I've learned so far. <ul> <li>You should only have <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1150632&amp;SiteID=1">one instance of AudioEngine</a>. You can have as many sound and <b>wave</b> banks loaded into the same engine as the hardware will support, but the only restriction is that they all share the same global settings data. This leads me to deduce that the best practice is to have one XACT project for your entire title. <li><a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1183082&amp;SiteID=1&amp;mode=1">XACT is already multithreaded</a>. Apparently, the heavy lifting of playing audio on Xbox happens on hardware thread 4 (the second thread of core #2). Calling AudioEngine.Update on a different thread is not likely to bring any performance gains unless you "have millions of crazy curves and variables and things". <li>Despite my initial confusion, <b>XNA</b> does in fact support <a href="http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1134068&amp;SiteID=1"><b>streaming</b> <b>wave</b> banks</a>. All you have to do is designate the <b>wave</b> <b>bank's</b> <em>Type</em> property as <strong><b>Streaming</b></strong>, then call the WaveBank class constructor that takes the offset and packetsize arguments.<br>The main issue I have with this is that it is not documented very well. They try to provide guidance on what to set the packetsize argument to, but the guidance is for <b>streaming</b> from a DVD (something <b>XNA</b> doesn't support quite yet). The documentation should also provide guidance for a title running from the HDD.<br>Also, it's important to note that you must call Update at least once and check the Isprepared property to make sure it's true before attempting to play any sound that uses one of those waves. Thankfully, this is documented in the <b>streaming</b> constructor topic, but I think there should be a "how to" article on how to stream audio. <li>According to <a href="http://msdn2.microsoft.com/en-us/library/bb172319.aspx">the docs</a>, XACT supports in-game auditioning using a special development-only API. I have not seen that these APIs are available in <b>XNA</b> ... this would be a pretty cool feature :-)<br>The toolchain in <em>Superman Returns: The Videogame</em> had a very similar feature where the console would run a tcp/ip server that would change audio properties at run-time. The tool running on the audio designer's PC would then send messages when its knobs and switches were manipulated. I wrote the piece that ran on the PC (using C#, winforms, and .NET Remoting) ... based on the feedback I got from the audio guys, this really helped them nail the audio mix. So I would love to see similar functionality be available to <b>XNA</b> titles in development.</li></ul>All in all, I think <b>XNA</b> and XACT does a pretty good job of leading people into a <a href="http://blogs.msdn.com/brada/archive/2003/10/02/50420.aspx">Pit of Success</a>. I've still got a lot to learn, but I'm really enjoying audio programming so far. Hopefully that will be reflected in my <a href="http://dreambuildplay.com">Dream.Build.Play</a> entry.</blockquote> <p>Sadly, my dream.build.play entry never got to see the light of day.&nbsp; It was going to be an audio only game in the spirit of "<a href="http://www.studiohunty.com/itp/" target="_blank">In The Pit</a>".&nbsp; Perhaps someday it will still see the light of day ... no pun intended ;-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2008-01-24 03:43:57</wp:post_date>
		<wp:post_date_gmt>2008-01-24 08:43:57</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xnaxact-pre-mortem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ain&#039;t life grand</title>
		<link>http://codecube.net/2008/02/aint-life-grand/</link>
		<pubDate>Mon, 18 Feb 2008 06:53:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=34</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Recent happenings:</p> <ul> <li>I've joined Twitter to see what all the hullabaloo was about.</li> <li>Met up with the guys from <a href="http://likemind.us" target="_blank">Likemind.us</a> ... cool bunch.&nbsp; Turns out the guy that runs those meetups, <a href="http://www.alexrudloff.com/" target="_blank">Alex Rudloff</a>, was one of (or the?) guys that built <a href="http://www.twitterholic.com/" target="_blank">twitterholic</a>.</li> <li>Work is going quite well.</li> <li>Planning on going to the next <a href="http://onetug.org" target="_blank">ONETUG</a> meeting this coming thursday.</li> <li>Have actually rediscovered the joy in coding for fun :-)</li> <li>Work is underway for the next version of <a href="http://www.codeplex.com/ScurvyMedia" target="_blank">ScurvyMedia</a>.&nbsp; The one where you can sync up the audio track to the video.</li></ul> <p>In short ... life is grand :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2008-02-18 01:53:30</wp:post_date>
		<wp:post_date_gmt>2008-02-18 06:53:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>aint-life-grand</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Triumphant Nerds</title>
		<link>http://codecube.net/2008/04/triumphant-nerds/</link>
		<pubDate>Sat, 05 Apr 2008 16:12:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=35</guid>
		<description></description>
		<contentencoded><![CDATA[<p>After watching parts 1 and 2 of the 3 part documentary <em>Triumph of the Nerds</em> (<a title="http://www.pbs.org/nerds/" href="http://www.pbs.org/nerds/">http://www.pbs.org/nerds/</a>), I have to say that I find myself inspired by the fact that, arguably, the entire personal computer revolution began as a result of what is today known as user groups.&nbsp; It makes me extremely proud of the fact that I founded the Orlando .NET User Group (<a href="http://onetug.org">http://onetug.org</a>).</p> <p>Getting a glimpse into the passion and determination of those early pioneers also inspires me to start plugging back into the community.&nbsp; An aspect that I've largely been disconnected from for the past two years due to work and life.&nbsp; </p> <p>It is so important to think of the community as a whole instead of only your own personal ambitions.&nbsp; Who knows what world-changing effort will find it's roots in the central florida developer community.&nbsp; I don't know, but I'd like to say I was there :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2008-04-05 11:12:34</wp:post_date>
		<wp:post_date_gmt>2008-04-05 16:12:34</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>triumphant-nerds</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>XNA Game launcher should show on my gamercard</title>
		<link>http://codecube.net/2008/04/xna-game-launcher-should-show-on-my-gamercard/</link>
		<pubDate>Sun, 13 Apr 2008 14:23:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=36</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I filed a suggestion on XNA's connect site:</p> <p><a title="https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=337992&amp;SiteID=226" href="https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=337992&amp;SiteID=226">https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=337992&amp;SiteID=226</a></p> <blockquote> <p>I think that the launcher should show up on your gamercard. I would be proud to show the fact that I had recently been deploying and developing XNA games to my xbox :-) This could also come with some achievements that obviously only XNA Creators Club members could get, like: </p> <ul> <li>"Deployed an XNA Game"</li> <li>"Used Multithreading"</li> <li>"Used Xbox Live API"</li> <li>"Deployed 100 Different Games"</li> <li>"Had a Game Published"</li> <li>"Peer Reviewed Someone Else's Game"</li> <li>etc.</li></ul></blockquote> <p>What achievements would you be proud to show off as a creator's club member? add feedback/votes to the connect item if you agree :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2008-04-13 09:23:11</wp:post_date>
		<wp:post_date_gmt>2008-04-13 14:23:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-game-launcher-should-show-on-my-gamercard</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>All dressed up, nowhere to go</title>
		<link>http://codecube.net/2008/04/all-dressed-up-nowhere-to-go/</link>
		<pubDate>Tue, 22 Apr 2008 13:26:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=37</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So I'm fairly excited, having just installed <a href="https://www.siege.org/projects/phpMyID/" target="_blank">phpMyID</a>, a simple OpenID provider that I control on my own website, I find myself wanting to find somewhere to log into.&nbsp; Sadly, looks like aside from commenting on random blogger blogs, there's not too many people that accept openid.&nbsp; </p> <p>Wouldn't it be nice if the following accepted openid:</p> <ul> <li>Forums</li> <li>Blog Comments</li> <li>Sites like Digg, Flickr, and Facebook</li></ul> <p>Here's a clue ... if you are even <strong>remotely</strong> involved in building web-based software.&nbsp; <strong>please</strong> be familiar with this: <a title="http://www.dataportability.org/" href="http://www.dataportability.org/">http://www.dataportability.org/</a></p> <p>:-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2008-04-22 08:26:51</wp:post_date>
		<wp:post_date_gmt>2008-04-22 13:26:51</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>all-dressed-up-nowhere-to-go</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>New Version of Scurvy Media</title>
		<link>http://codecube.net/2008/04/new-version-of-scurvy-media/</link>
		<pubDate>Wed, 23 Apr 2008 15:00:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=38</guid>
		<description></description>
		<contentencoded><![CDATA[<p>If all goes well, I should have a new version of <a href="http://www.codeplex.com/ScurvyMedia" target="_blank">scurvy media</a> out sometime this weekend.&nbsp; stay tuned for more details :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2008-04-23 10:00:16</wp:post_date>
		<wp:post_date_gmt>2008-04-23 15:00:16</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>new-version-of-scurvy-media</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>XNA Wiki</title>
		<link>http://codecube.net/2008/04/xna-wiki/</link>
		<pubDate>Thu, 24 Apr 2008 13:35:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=39</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Check out the new <a href="http://www.xnawiki.com" target="_blank">XNA Wiki</a>.&nbsp; I really like the organic nature of wiki's, so hopefully this will take off and become a serious reference for anyone doing anything with XNA.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2008-04-24 08:35:38</wp:post_date>
		<wp:post_date_gmt>2008-04-24 13:35:38</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-wiki</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scurvy Media v0.7.2008.0427 Released!</title>
		<link>http://codecube.net/2008/04/scurvy-media-v0720080427-released/</link>
		<pubDate>Mon, 28 Apr 2008 02:26:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=40</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I'm happy to announce that the next version of Scurvy.Media has finally been released :-) My original plan to support audio in this release was subsumed by some actual requests for the following features/fixes.&nbsp; It's rather exciting to see the library actually being used for some projects and I hope that these items, along with further feedback will propel the project to greater and greater heights.</p> <h2>Download</h2> <p><a title="https://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=ScurvyMedia&amp;ReleaseId=8615" href="https://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=ScurvyMedia&amp;ReleaseId=8615">https://www.codeplex.com/Release/ProjectReleases.aspx?ProjectName=ScurvyMedia&amp;ReleaseId=8615</a></p> <h2>Release Notes</h2> <ul> <li>XBox 360 Project Support!</li> <li>Streaming playback mode is now multithreaded.&nbsp; On xbox, it defaults to Core#2.</li> <li>Texture setting is now double-buffered to avoid <a href="http://blogs.msdn.com/shawnhar/archive/2008/04/15/stalls-part-two-beware-of-setdata.aspx" target="_blank">stalls</a>.</li> <li>Internal video related functionality has been moved to the Scurvy.Media.VideoModel namespace to avoid crowding up the root Media namespace.</li> <li>Fixed InvalidOperationException bug.&nbsp; Description <a href="http://codecube.net/?p=28" target="_blank">here</a>. This was a side-effect of the double buffering feature above :-)</li> <li>Improved runtime allocation profile slightly by removing debug write statements (lots of string allocation).</li></ul> <h2>Known Issues</h2> <ul> <li>Using "In Memory" playback type throws an exception. This will be fixed in a follow up release.</li> <li>Using compression partially garbles the texture playback.&nbsp; There is an active thread on the XNA forums about this <a href="http://forums.xna.com/thread/56940.aspx" target="_blank">here</a>.&nbsp; Once resolved, the content pipeline will be able to support larger videos, and have a smaller disk footprint of the processed XNB file.</li> <li>Importing a large video will still throw an OutOfMemoryException.&nbsp; I have a bug logged on the <a href="https://connect.microsoft.com/feedback/ViewFeedback.aspx?FeedbackID=323222&amp;SiteID=226" target="_blank">XNA Connect site</a>.&nbsp; However, it has been closed with no hint as to whether it was deferred, or solved.&nbsp; If the compression issue noted above is resolved, it will mitigate this issue.</li></ul>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2008-04-27 21:26:43</wp:post_date>
		<wp:post_date_gmt>2008-04-28 02:26:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-v0720080427-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Scurvy Media Logo Contest</title>
		<link>http://codecube.net/2008/04/scurvy-media-logo-contest/</link>
		<pubDate>Mon, 28 Apr 2008 21:05:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=41</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So I'm really interested in finding a really good logo for the <a href="http://codeplex.com/scurvymedia" target="_blank" rel="me">Scurvy.Media</a> library.&nbsp; Ideally, it would work in, or at least be related to the <a href="http://scurvybones.com" target="_blank" rel="me">Scurvy Bones</a> logo:</p> <p><a href="http://codecube.net/bloguploads/ScurvyMediaLogoContest_14582/scurvy_logo_big.png"><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="244" alt="scurvy_logo_big" src="http://codecube.net/bloguploads/ScurvyMediaLogoContest_14582/scurvy_logo_big_thumb.png" width="220" border="0"></a> </p> <p>But that's not a requirement.&nbsp; I won't go into the properties and virtues of a good logo, since if you're the kind of person that could come up with a great logo, you'd know them better than I.&nbsp; Though if I had to give any direction (aside from the scurvy bones logo above), I'd say that I really love farseer's logo:</p> <p><a href="http://codecube.net/bloguploads/ScurvyMediaLogoContest_14582/FarseerPhysicsNoBorder430X260.png"><img style="border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px" height="149" alt="FarseerPhysicsNoBorder430X260" src="http://codecube.net/bloguploads/ScurvyMediaLogoContest_14582/FarseerPhysicsNoBorder430X260_thumb.png" width="244" border="0"></a> </p> <p>It's so simple, and iconic ... and explains exactly what the farseer physics library is all about.</p> <p>What will you win?&nbsp; aside from my undying gratitude ... the winner will be forever recognized (with a link and info on any scurvy media distribution site) as the logo's designer.</p> <p>:-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2008-04-28 16:05:56</wp:post_date>
		<wp:post_date_gmt>2008-04-28 21:05:56</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-media-logo-contest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Minor update checked in</title>
		<link>http://codecube.net/2008/05/minor-update-checked-in/</link>
		<pubDate>Tue, 13 May 2008 04:11:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=42</guid>
		<description></description>
		<contentencoded><![CDATA[<p>checked in a few relatively minor items to the <a href="http://codeplex.com/ScurvyMedia" target="_blank">Scurvy.Media</a> library:</p> <ul> <li>Importer now throws an exception if the .avi file is readonly to avoid any confusion over why the import won't work.</li> <li>Video now has an "End" event that is raised when the video reaches the final frame.&nbsp; This can be used in cases where you need to know when the video has come to an end (like an Intro video).</li> <li>Improved the video streaming code to read fully into the byte array buffer.&nbsp; Before, I was just calling .Read on the stream, which is not guaranteed to read the full amount requested.</li></ul>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2008-05-12 23:11:31</wp:post_date>
		<wp:post_date_gmt>2008-05-13 04:11:31</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>minor-update-checked-in</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Game State Management Designer</title>
		<link>http://codecube.net/2008/05/game-state-management-designer/</link>
		<pubDate>Wed, 14 May 2008 13:13:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=43</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Ahh the power of <a href="http://badcorporatelogo.spaces.live.com/Blog/cns!43EB71B104A2D711!253.entry?wa=wsignin1.0" target="_blank">tooling</a>.&nbsp; Could this be the beginnings of "<em>Microsoft Visual Game Studio 2010: RAD Edition</em>"? :-P</p> <p>But seriously ... I think there's a lot that can be done on the tooling side.&nbsp; For example, it wouldn't be too far-fetched to imagine creating a custom <a href="http://msdn.microsoft.com/en-us/library/ms171840.aspx" target="_blank">UITypeEditor</a> for your content pipeline processors that spin up an XNA Graphics Device and let you edit in real time resources like heightmaps, shaders, or maybe even let you preview model material changes in real-time.</p> <p>Cool Stuff :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2008-05-14 08:13:11</wp:post_date>
		<wp:post_date_gmt>2008-05-14 13:13:11</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>game-state-management-designer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA Development on an iMac?</title>
		<link>http://codecube.net/2008/05/xna-development-on-an-imac/</link>
		<pubDate>Sun, 18 May 2008 19:36:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=44</guid>
		<description></description>
		<contentencoded><![CDATA[<p>A bit of a misleading title to be sure :-P but I have a penchant for appreciating weird distributed setups.&nbsp; I installed the windows RDP client on my wife's new iMac, and am using it to connect to my laptop, which is then used to deploy XNA code to my xbox.</p> <p>Hurray TCP/IP!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2008-05-18 14:36:30</wp:post_date>
		<wp:post_date_gmt>2008-05-18 19:36:30</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-development-on-an-imac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New XNA Site Online</title>
		<link>http://codecube.net/2008/05/new-xna-site-online/</link>
		<pubDate>Tue, 20 May 2008 20:05:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=45</guid>
		<description></description>
		<contentencoded><![CDATA[<p><a href="http://creators.xna.com">http://creators.xna.com</a></p> <p>Now you can submit games (assuming you have a subscription) for the community to play.&nbsp; Can't wait to see what awesome games come of this.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2008-05-20 15:05:37</wp:post_date>
		<wp:post_date_gmt>2008-05-20 20:05:37</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>new-xna-site-online</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scurvy.Media v0.7.2008.0525</title>
		<link>http://codecube.net/2008/05/scurvymedia-v0720080525/</link>
		<pubDate>Mon, 26 May 2008 16:08:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=46</guid>
		<description></description>
		<contentencoded><![CDATA[<ul><li>Fixed the XBox support so that videos that play with the right colors.<li>There are now <b>two</b> different versions of the pipeline assembly (Scurvy.Media.Pipeline.dll). One for each platform. This is because the color information must be manipulated differently when compiling a video for the xbox. </li></ul><p><b>known issue</b>: compiling a video with compression will produce a distorted video. This issue is under investigation, and will ideally be fixed for the next release.</p></p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2008-05-26 11:08:44</wp:post_date>
		<wp:post_date_gmt>2008-05-26 16:08:44</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvymedia-v0720080525</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>I&#039;m @ ]InBetween[, where are you?</title>
		<link>http://codecube.net/2008/06/im-inbetween-where-are-you/</link>
		<pubDate>Sat, 07 Jun 2008 15:00:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=47</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Writing this from the Orange County Convention Center's "OpenSpace".&nbsp; hanging out with the rest of the central florida .NET Geeks:</p> <p><a href="http://www.devfish.net/articles/inbetween/">http://www.devfish.net/articles/inbetween/</a></p> <p>You should at least try to make it before the end of the day so you can get a badge and make it into the after-party at Destiny Nightclub :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2008-06-07 10:00:52</wp:post_date>
		<wp:post_date_gmt>2008-06-07 15:00:52</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>im-inbetween-where-are-you</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>XBox and the Case of the Mysterious Color order</title>
		<link>http://codecube.net/2008/06/xbox-and-the-case-of-the-mysterious-color-order/</link>
		<pubDate>Sat, 07 Jun 2008 17:29:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=48</guid>
		<description></description>
		<contentencoded><![CDATA[I've been meaning to blog about how I finally got the lastest build of <a href="http://www.codeplex.com/ScurvyMedia">Scurvy.Media</a> out the door. Those of you keeping track at home will remember that, though the previous build shipped with XBox platform support, the colors of the videos were unfortunately very "off".

After a large amount of experimentation, and tons of help from the guys over on the #Xna IRC channel, we were finally able to figure out the problem. To explain the solution, I must first explain a tiny bit about the architecture of the Scurvy.Media content pipeline.
<ol>
	<li>Decode each frame of the video as individual textures. The pipeline currently only supports AVI video using the <a href="http://www.codeproject.com/KB/audio-video/avifilewrapper.aspx">AVIFile</a> library from CodeProject.</li>
	<li>Write the contents of each frame sequentially into one large .XNB file through the content writer.</li>
	<li>At runtime, open a stream (and keep it open), and read each texture one at a time in a separate thread.</li>
	<li>use .SetData to set the contents of a texture based on whatever the current Frame is.� Technically speaking, there are two textures at play for the purpose of double buffering ... but that's largely irrelevant to the topic at hand :-)</li>
</ol>
So the confusing part was that the code ran perfectly on windows, but on XBox the colors were all messed up.

Now that I've explained the architecture, I'll explain the solution to one of the issues.� Mainly, it's the fact that the color order on the xbox platform is *different* than it is on windows.� Why that is I don't know, I wasn't able to find very many sources of information on this, but c'est la vie :-)

XBox:
<ul>
	<li>RGBA</li>
</ul>
Windows:
<ul>
	<li>BGRA</li>
</ul>
To get around this problem, I simply had to transpose the color channels as I imported the video when compiling for the xbox platform.
<blockquote>byte[] xpix = new byte[pix.Length];
for (int i = 0; i &lt; pix.Length; i += 4)
{

��� int first = i, second = i + 1, third = i + 2, fourth = i + 3;
��� xpix[first] = pix[third]; //x=red
��� xpix[second] = pix[second]; //x=green
��� xpix[third] = pix[first];//x=blue
��� xpix[fourth] = pix[fourth];//x=alpha�
}

b.SetPixelData(xpix);</blockquote>
the code snippet above takes a byte array that uses four bytes per channel.� And it just puts it into a copy of the byte array.� Technically, I could have used the same array and just rearranged the byte values as I go ... but perhaps that's an improvement for another day.

But Avast! There still be problems on the high waters!

After making that change, the colors were still not right.� What we eventually realized is that I was writing byte data directly from windows (who's x86 architecture is little-endian), to be read from the xbox (who's powerpc architecture is big-endian).

Sooooo ... the answer was this:
<blockquote>byte[] xpix = new byte[pix.Length];
for (int i = 0; i &lt; pix.Length; i += 2)
{

��� int first = i, second = i + 1;
��� xpix[first] = pix[second];
��� xpix[second] = pix[first];
}

output.Write(xpix.Length);
output.Write(xpix);</blockquote>
Right before writing the byte array to disk ... I flip every other byte.� Once I did that, the video was alight with correct coloration :-)

Again, a <strong>huge</strong> thanks to the guys on the #xna IRC channel.� This wouldn't have been possible without them.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2008-06-07 12:29:26</wp:post_date>
		<wp:post_date_gmt>2008-06-07 17:29:26</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xbox-and-the-case-of-the-mysterious-color-order</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA Presentation</title>
		<link>http://codecube.net/2008/06/xna-presentation/</link>
		<pubDate>Wed, 11 Jun 2008 05:22:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=49</guid>
		<description></description>
		<contentencoded><![CDATA[I've mentioned this already to a few close friends, but figured I'd post it here for posterity. I will be giving the presentation at the August <a href="http://www.onetug.org">ONETUG</a> meeting. The topic?
<blockquote>Software development is about constantly learning, and developing your skills. Each new technique, or novel solution to a problem improves your overall effectiveness and value as a software developer/engineer.

XNA Game Studio can help you experience those new techniques and solutions by exposing you to a different world of software engineering problems. If you embrace game development as a hobby, you *will* become a better programmer, and this session will show you how.</blockquote>
I've already got the presentation in development ... pretty excited to finally be talking to the locals about some of the stuff that has had so much of my focus for the past year or two :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>49</wp:post_id>
		<wp:post_date>2008-06-11 00:22:01</wp:post_date>
		<wp:post_date_gmt>2008-06-11 05:22:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why all the XACT hate?</title>
		<link>http://codecube.net/2008/06/why-all-the-xact-hate/</link>
		<pubDate>Tue, 24 Jun 2008 05:27:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=50</guid>
		<description></description>
		<contentencoded><![CDATA[<p>XNA has been out for a few years now, and I still don't understand why people seem to dislike XACT so much.&nbsp; After I started working on some of the audio for an upcoming presentation, I was reminded just how powerful of a tool it is.&nbsp; I mean, I guess I understand the allure of the super simple audio model offered in XNA 3.0.&nbsp; For simple projects it's definitely a lower barrier to entry.&nbsp; </p> <p>But here's one problem I see with it ... I can almost guarantee that very few people will use XACT once 3.0 is released.&nbsp; Considering that I do not see very much community involvement from the XACT team, or any individuals (where are the xact tutorials, where is the xact team blog?), I fear that an atrophying user-base will kill the project for future releases.</p> <p>Much of the feedback I see about XACT seem to mimic a lot of the negative feedback of the content pipeline.&nbsp; Thankfully, the XNA team hasn't given in and allowed runtime loading of content files.&nbsp; The second they enable that is the second that 99% of people move their projects to import/loading everything at runtime (and thus, introducing longer load times into their games).&nbsp; By limiting that choice, I believe they've done the community a favor because at this point, lots of people are very familiar with building custom content pipeline extensions.</p> <p>so I guess what I'm trying to say is, if you're an XNA developer ... fire up XACT, and give it some love :-)</p> <p><em>ps. I suppose this would be an ironic time to announce that once I upgrade Scurvy.Media to 3.0, I'm going to experiment with automatically importing the video's audio stream using the new SoundEffect/Song APIs :-P</em></p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2008-06-24 00:27:46</wp:post_date>
		<wp:post_date_gmt>2008-06-24 05:27:46</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>why-all-the-xact-hate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
	</item>
	<item>
		<title>Socially Aware XBox Live Games</title>
		<link>http://codecube.net/2008/06/socially-aware-xbox-live-games/</link>
		<pubDate>Wed, 25 Jun 2008 14:11:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=51</guid>
		<description></description>
		<contentencoded><![CDATA[<em>What if a network session was more than simply a temporary connection to exchange interactions between two or more geographically distributed participants?</em>

<em>What if every encounter meant that the value of your local "installation" grew by just a little bit?</em>

These are some of the questions I've been asking myself recently after reading an article (which I can't find again for the life of me) that was talking about how the XBox's networking features are so easy to use, that even the most low budget of titles can offer multiplayer.

<a href="http://images.google.com/imgres?imgurl=http://www.dailyventure.com/300x400/rome_coliseum_14.jpg&amp;imgrefurl=http://www.dailyventure.com/journal.php%3Fday%3DColiseum&amp;h=400&amp;w=300&amp;sz=44&amp;hl=en&amp;start=1&amp;sig2=Md4IH3lX76kvlYpSi9DEmQ&amp;um=1&amp;tbnid=02zBFcLtbbO8JM:&amp;tbnh=124&amp;tbnw=93&amp;ei=p69hSNXhJKfuigHtzeC2Aw&amp;prev=/images%3Fq%3Dcoliseum%26um%3D1%26hl%3Den%26safe%3Doff%26client%3Dfirefox-a%26rls%3Dorg.mozilla:en-US:official%26sa%3DG"><img style="margin: 0px 0px 0px 20px" src="http://tbn0.google.com/images?q=tbn:02zBFcLtbbO8JM:http://www.dailyventure.com/300x400/rome_coliseum_14.jpg" alt="" width="93" height="124" align="right" /></a>With barrier to entry being so low, one must begin to question whether maintaining the status quo is the best use of resources.  Most people, when they think of multiplayer, immediately think of the multiplayer arena.  And you can see why ... it's an obvious way of limiting the size of the "world" that the player interacts with (thus limiting computing requirements).  It also lets the game designer avoid other issues such as balancing because you only have to contend with the few players that are in the arena.

Take a few minutes and download the <a href="http://www.youtube.com/watch?v=hwvpIzqvZpE">Battlestar Galactica game on XBox Live Arcade</a> to see this pattern in action.

This prototypical game design pattern is so played out that I am instantly turned off when I'm confronted with it.  What is it about online networked play that instantly drives developers to create competitive matches that pit you against other players.

Why aren't there more co-op games?  one of the things I most enjoyed when I was growing up was playing two player games that I could play at the same time with my brother (<a href="http://www.youtube.com/watch?v=s6rAf6IscDw">Contra</a>, <a href="http://www.youtube.com/watch?v=LoESzEwhHmI">Chip n' Dale</a>, <a href="http://www.youtube.com/watch?v=0gyae4nfOIk">Double Dragon</a>).  It was so much more fun than playing against him.

But even if developers were to make this shift in thinking and produce more co-op modes ... I don't think that's going far enough.

Spore is an upcoming game from visionary designer Will Wright.  It includes a feature that I think perfectly showcases the concept I'm trying to convey here.  When you create a creature in the game, it will be uploaded to a <a href="http://www.spore.com/sporepedia">central server</a>, and automatically distributed to other spore gamers over the internet.

Aside from the various accolades that you can surely find of the game from the various review sites; the reason I find this so fascinating is the idea that just by playing the game the <strong>value</strong> of your game increases.  It does this by gathering content from other players of the game.  Conversely, by merely playing the game, you are increasing the value for other players.

Although you may initially think that something like this is not feasible using the <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=E031C413-43F1-4C9E-92D2-7CDD64864D02&amp;displaylang=en">XBox Live APIs</a> that shipped with XNA Game Studio, I beg to differ.  Although it wouldn't be centralized, I can easily see how a feature like this could be implemented.
<ol>
	<li>First and foremost, your game/toy would have to allow you to "create" something.  This could be a creature, a vehicle, a song.  The possibilities here are really only limited by your imagination and creativity as a game designer.</li>
	<li>Your game could look for a random <a href="http://msdn.microsoft.com/en-us/library/bb975961.aspx#ID2ETB">network session</a> and join it.</li>
	<li>Once connected, your game would exchange whatever it is that your players create.  Again, this could be creatures, weapons, vehicles, whatever makes sense for your title.</li>
	<li>This content could be written to the player's local data storage along with meta-data such as author, date, etc.</li>
	<li>History/Playbook keeps track of players that you've shared with ... this can be used to alert the player of repeat encounters, or even to avoid excessive bandwidth if we recently exchanged content already.</li>
</ol>
This kind of social/decentralized interaction is one that I don't believe has been explored to the fullest extent.  Imagine a game that uses <a href="http://www.gamedev.net/reference/articles/article1175.asp">genetic algorithms</a>, or <a href="http://www.gamedev.net/reference/articles/article771.asp">neural nets</a> to evolve local AI elements.  The player could train and these agents to their local preferences, and then breed them with other player's agents that exibit beneficial qualities :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2008-06-25 09:11:30</wp:post_date>
		<wp:post_date_gmt>2008-06-25 14:11:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>socially-aware-xbox-live-games</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="social-networking"><![CDATA[Social Networking]]></category>
		<category domain="post_tag" nicename="xbox-live"><![CDATA[XBox Live]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[MrLeebo]]></wp:comment_author>
			<wp:comment_author_email>mrleebo@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.preanima.com</wp:comment_author_url>
			<wp:comment_author_IP>69.19.14.17</wp:comment_author_IP>
			<wp:comment_date>2008-11-07 13:26:43</wp:comment_date>
			<wp:comment_date_gmt>2008-11-07 18:26:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Technically there's nothing stopping a game like the mentioned Battlestar Galactica game from sending harmful packets to its own stability. There isn't any way to send messages to anything besides another instance of your own XNA game. For example, it's impossible to write a game that is able to spoof a Halo 3 Multiplayer session, even if you knew all the details about their packet data. Xbox Live just won't let the packets arrive. And the Compact Framework will throw an exception well before it lets you do something so dangerous that it might brick the system. Personally, think a game like this would be a wonderful experiment and a way for its authors to earn some renown (or notoriety) in the community. I'd love to be a part of it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[Trevor]]></wp:comment_author>
			<wp:comment_author_email>tlongino@conceptcreativemarketing.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.conceptcreativemarketing.com</wp:comment_author_url>
			<wp:comment_author_IP>71.53.158.166</wp:comment_author_IP>
			<wp:comment_date>2008-06-25 10:31:08</wp:comment_date>
			<wp:comment_date_gmt>2008-06-25 15:31:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's an interesting idear, sir. I'm not a big fan of online (as you can tell from the fact that I don't have my 360 hooked up to any kind of intertubes) because I generally don't see the need for online play, but you do raise some thought-provoking points. 

As a former tester, though, I do wonder if, given some of the TRC's for the 360, you can even construct a game that will allow that to happen. I suppose that the indie games that MS is letting on their network won't be held to the same standards (Ha! See the pun there? No? TRC..."Standards"? Ah, never mind.) as AAA titles. This does bring me back to the point of wondering about the possible security problems that we discussed last week. I mean, having a game that automatically transmits information across a neural network without verifying what its sending at all seems like a recipe for constructing something like WOW's Corrupted Blood plague. Except, if the code's malicious enough, a "Corrupted Blood" plague that bricks your 360. 

Having unleashed a little shower upon your parade, I still feel the need to point out that it's a good idea, and I'm likely just paranoid. I don't think it's possible to do something like that through the XNA network. But as someone who doesn't understand how to make the little gremlins in the box *work*, I prefer to huddle in my cave and try and placate the frightening computer deities.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Adapting one Content Pipeline to Another</title>
		<link>http://codecube.net/2008/06/adapting-one-content-pipeline-to-another/</link>
		<pubDate>Mon, 30 Jun 2008 13:00:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=52</guid>
		<description></description>
		<contentencoded><![CDATA[A question recently came up in the XNA Forums.  The poster wanted to maintain his own asset pipeline, but still wanted to use the content manager infrastructure.

Regardless of the discussion on whether it makes sense to reproduce the functionality that the XNA Team has built for us, he may have had perfectly valid reasons.  For example, his team/studio might have a database-based content management system.

Thankfully, because of the fantastic design of the content pipeline, this is actually quite simple :-)

Taking a page from the computer scientists:
<a title="http://en.wikipedia.org/wiki/Adapter_pattern" href="http://en.wikipedia.org/wiki/Adapter_pattern">http://en.wikipedia.org/wiki/Adapter_pattern</a>
<blockquote>In <a href="http://en.wikipedia.org/wiki/Computer_programming">computer programming</a>, the adapter <a href="http://en.wikipedia.org/wiki/Design_pattern_%28computer_science%29">design pattern</a> (often referred to as the wrapper pattern or simply a wrapper) 'adapts' one <a href="http://en.wikipedia.org/wiki/Interface_%28computer_science%29">interface</a> for a <a href="http://en.wikipedia.org/wiki/Class_%28computer_science%29">class</a> into one that a client expects. An <em>adapter</em> allows classes to work together that normally could not because of incompatible interfaces by wrapping its own interface around that of an already existing class. The adapter is also <strong>responsible for handling any logic necessary to transform data into a form that is useful for the consumer</strong>. For instance, if multiple boolean values are stored as a single integer but your consumer requires a 'true'/'false', the adapter would be responsible for extracting the appropriate values from the integer value.</blockquote>
Using this pattern, it becomes obvious that the content Importer can serve as the adapter.  Let's use a somewhat trivial example to illustrate.

<a href="http://codecube.net/wp-content/uploads/2008/06/adapter_pipeline.png"><img class="alignright size-full wp-image-53" title="adapter_pipeline" src="http://codecube.net/wp-content/uploads/2008/06/adapter_pipeline.png" alt="Adapter Pipeline" width="212" height="294" /></a>Let's say for a second that our original forum poster has a fairly complex Mesh generation system that stores meta-data in a database.  This data must then be run through some sort of process to generate Mesh information for runtime.

Now, in this model, all artists only interface with the Custom Asset Manager.  They may not even know anything about XNA game studio ... let alone some content pipeline.  But that's ok ... because as described above, all we need is an adapter to <strong>import</strong> data from the custom asset manager into XNA Game Studio.

This content pipeline importer can be linked to a custom extension,  let's say, .db.  The .db file can be nothing more than a text file with a database connection string.  Once the importer reads the text file, it can create whatever NodeContent or MeshContent it needs from the data in the database ... or maybe even <a href="http://creators.xna.com/en-us/sample/custommodelimporter">custom types</a> that suit the data.

The great thing about this approach is that it allows his studio to continue using whatever asset pipeline works for them.  But they still get access to the great features of the XNA Content Pipeline.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2008-06-30 08:00:37</wp:post_date>
		<wp:post_date_gmt>2008-06-30 13:00:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adapting-one-content-pipeline-to-another</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="adapter"><![CDATA[Adapter]]></category>
		<category domain="post_tag" nicename="content-pipeline"><![CDATA[Content Pipeline]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exception Handling in XNA</title>
		<link>http://codecube.net/2008/07/exception-handling-in-xna/</link>
		<pubDate>Mon, 14 Jul 2008 13:00:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=54</guid>
		<description></description>
		<contentencoded><![CDATA[After reading this <a href="http://www.gamedevblog.com/2007/09/manager-in-a--2.html">great article</a> by Jamie Fristrom, I got to thinking about how one should organize their exception handling in an XNA game.  Since there are huge domain differences between an XNA application and a traditional business application, most of the exception handling texts out on the web right now may not offer the best advice.

In the traditional application world, exception handling is all about grace under pressure.  Sure the app has been tested time and again, but surely at some point there will be an unexpected failure somewhere.  Typically this will be with an external resource such as a database, access to a network share, or a web service.  In this case, these external dependencies are well known at design time and developers can code for their eventual failure.

When you start talking about games though, the landscape is usually a little bit different.  There aren't usually as many external dependencies as there are complex subsystems.  Of course, there are the obvious game data storage (ie. file IO), and network subsystems.  But by and large, your main offenders will occur right at home in your own AppDomain.

In a game, your error handling will usually be with the express intent of helping a developer find the source of the bug as quickly as possible.  In a small team, the developer will usually be running the game with the debugger attached, and will be able to make adjustments on the fly.  However, what if you achieve the dream, and all of a sudden find yourself with funding and a team.  Now the situation is more complex ... especially when non-developer QA members enter the picture.

I'm not sure I have the answer (I know, so helpful :-P ).  But I do know that many .NET developers, even those that have been using the tech for years still don't understand how to properly use exceptions.  The biggest issue is often that either no exceptions are thrown/caught at all, or they are thrown far too often.

If your game has any external touch-points such as networking ... then any and all operations on that external resource should have error handling with the assumption that it will fail at some point.

Internal subsystems such as animation libraries, physics engines, and AI modules should also be thought of as a black box resource.  As far as your game is concerned, that call to physicsEngine.Update() could fail with the most obscure <em>rotational flim flam </em>error.  You should structure your error handling to properly report the error to the user/player in a proper fashion such as debug text on the screen, or writing to a log file.  All without affecting the main execution and rendering of the game.

Conversely, the above paragraph assumes that subsystems are properly structured to throw useful exceptions if there is some error state instead of just allowing bad input to cause some unrelated error (NullReferenceExceptions are usually a sign of this).  This can be achieved by input validation ... make sure you are in a valid state before continuing.  Once you have identified invalid input, or an invalid state ... you should throw a custom exception.  Much has been written about this, but is neatly summed up here:
<a title="http://msdn.microsoft.com/en-us/library/ms229064.aspx" href="http://msdn.microsoft.com/en-us/library/ms229064.aspx">http://msdn.microsoft.com/en-us/library/ms229064.aspx</a>

If you design it well, a malfunctioning subsystem shouldn't affect the other subsystems.  For example, if there's a physics engine error, the rest of your game should continue rendering.  If there's an error loading a texture, you should probably load a default texture. 

In each case, the game will handle the issue very gracefully; while at the same time notifying the user of the issue, and continuing execution.  If this mantra is followed, it could allow artists to continue working with a certain build, even if there is a minor bug.  This reduces stress on the developers because they don't have to stop what they're focusing on to fix a little bug that is stopping the artists from testing their content in-game.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2008-07-14 08:00:36</wp:post_date>
		<wp:post_date_gmt>2008-07-14 13:00:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exception-handling-in-xna</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA Secure Unlock System</title>
		<link>http://codecube.net/2008/07/xna-secure-unlock-system/</link>
		<pubDate>Mon, 07 Jul 2008 13:00:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=56</guid>
		<description></description>
		<contentencoded><![CDATA[A recent <a href="http://forums.xna.com/forums/p/12983/71313.aspx">forum thread</a> unearthed a great idea by Jon Watte
<blockquote>To generate revenue, you could have an unlock mechanism, where someone pays you money and gets an unlock code. <strong>The unlock code would be some hash of their gamer tag and a key</strong>, and the game would know whether it's right or not. Because it's a hash, you can't use the same unlock code for two different gamer tags. Just beware that if you're not selling anything tangible, you should budget 10-20% of your revenue to credit card charge-backs and fraud.</blockquote>
I got curious on what it would take for such a solution to be implemented.  The first thing that occurred to me is that there would be two components to this feature.  One would be the in-game unlock mechanism, while the other is the external component that would more-than-likely be implemented as a website.

<p class="securedownload">Sample Code:
<a title="http://codecube.net/bloguploads/UnlockCodes.zip" href="http://codecube.net/bloguploads/UnlockCodes.zip">http://codecube.net/bloguploads/UnlockCodes.zip</a></p>

<h3>In-Game Implementation</h3>
You might initially think that the in-game implementation would be rather simple through the use of the .NET framework's powerful cryptography namespace.  But alas, if you plan on targeting the XBox 360 or Zune platforms, you will quickly find yourself disappointed.  That namespace is not available on the Compact Framework.

Thankfully, the compact framework has been around longer than XNA ... and so others have had the need, and subsequently implemented the solution for this problem:
<a title="http://www.flowgroup.fr/en/kb/technical/md5.aspx" href="http://www.flowgroup.fr/en/kb/technical/md5.aspx">http://www.flowgroup.fr/en/kb/technical/md5.aspx</a>

From the fine folks at FlowGroup:
<blockquote>The cryptography classes are not available on the Compact Framework 1.0, so we ported the "MD5 Message-Digest Algorithm" from RSA Data Security, Inc. in C#.</blockquote>
With the ability to generate hashes on the compact framework, we can then focus on how we can implement our secure unlock mechanism.  Using three values:
<ul>
	<li><strong>Developer Secret</strong>: this is a string that is known only to the developer.</li>
	<li><strong>User Secret</strong>: this is something known only to the user.</li>
	<li><strong>GamerTag</strong>: The user's gamertag.  He must be logged in with this gamertag in order to use the code.</li>
</ul>
This technique is so simple you'll kick yourself for not having thought of it.  Taking the three values, simply concatenate them, and then compute the hash using the resulting string.  This provides a very secure way of providing personalized unlock codes.

Even if there were users that wanted to subvert your mechanism and share codes, it would not work.  Let's say a user with a GamerTag of <em>SxyLvr</em> decides he wants to post his unlock code to the world.  No one else would be able to use it because they would have to be signed in with <em>SxyLvr</em> in order for it to work.

Users will similarly be unable to create codes on their own because they are unlikely to know the developer secret.  That is something that will be known only on the server, and in your game code.  Of course, if you are distributing a windows game, then it can easily be decompiled ... but on windows you are free to use more <a href="http://www.asp.net/Learn/data-access/tutorial-73-cs.aspx">traditional data security techniques</a>; and of course on the xbox (via community games), the user is unable to get access to your binaries

With this in place, we are able to create a simple class that has the following interface:

<p class="securecode">public class UnlockCodeProvider
{
    public UnlockCodeProvider(string developerSecret, string gamerTag);  
    
    public string ComputeCode(string userSecret);</p>
    public bool Validate(string userSecret, string codeToValidate);
}

I won't go into the implementation as you can just download the sample code.  But this very simple class can be instantiated by supplying the developer secret, and the gamertag that we are working with.  The two methods allow you to compute a code using the supplied user secret (ComputeCode), while the other one allows you to validate that a code the user supplied is valid (Validate).

This class, and a dreadfully simple "game" shell can be found in the sample download at the top of this post.  This sample shows how to ask the user to log in, get his gamertag; then ask him for the user secret and code he received from the server. 

Once the user supplies this information, the game will validate the code against a locally computed hash.
<h3>Server Implementation</h3>
The server-side in this equation gives you many many options to choose from.  As mentioned before, this will more than likely be a web application that the developer controls.  The purpose of these unlock codes can be many; for example the developer could charge money for certain cards in a collectible card game.  Or the most active contributors in the developer's favorite community can be given codes as a reward.

Whatever the reasoning, the server can be used to generate unlock codes that can subsequently be used in-game to unlock whatever.
<h4>ASP.NET</h4>
I chose ASP.NET for several reasons ... I write C# code all day, and thus I am proficient in it.  This also allows me to re-use the exact same <em>UnlockCodeProvider</em> API that the in-game implementation uses. 

I threw together a painfully simple ASP.NET GUI that uses simple web forms (postbacks, et al)

<a href="http://codecube.net/bloguploads/XNASecureUnlockSystem_9E7C/unlock_server_gui.png"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" src="http://codecube.net/bloguploads/XNASecureUnlockSystem_9E7C/unlock_server_gui_thumb.png" border="0" alt="unlock_server_gui" width="244" height="107" /></a>

As with the in-game code, this can be found in the sample code found at the top of this article.
<h4>PHP</h4>
I wanted to write a reference implementation in PHP to illustrate the fact that the server-side implementation isn't limited to requiring ASP.NET.  You can use any technology that you are familiar with and/or already have infrastructure for.  PHP seems to be a common choice because hosting is so cheap these days.

Unfortunately, due to time constraints, this feature got cut ... so I'll leave it as a user exercise.  I assume though that anyone that's even modestly familiar with PHP can whip this up in about 30 seconds using the hash function :-)

<a title="http://us.php.net/manual/en/function.hash.php" href="http://us.php.net/manual/en/function.hash.php">http://us.php.net/manual/en/function.hash.php</a>
<h3>Legality?</h3>
Of course, there are certain interpretations of the EULA that suggest this may not be a legal move for XBox games (ie. to sell unlock codes).  According to the ZMan:
<blockquote>I had the same idea but then I wondered how Microsoft would feel not getting a share of the millions I would be sure to make... Shame the EULA Forbids it right now ...

b. Programs developed for the Xbox 360 Platform
i. Personal Use.  Use of any programs developed for the Xbox platform using the software is restricted to your personal, non-commercial use. </blockquote>
That doesn't mean the idea is dead in the water.  You could always give unlock codes in return for email addresses (that you could then use to notify of your next game).  Or you could give them away for registering on your community site ... or really, anything. 

The world doesn't <strong>have</strong> to revolve around commercial aims just because Adam Smith says so :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2008-07-07 08:00:25</wp:post_date>
		<wp:post_date_gmt>2008-07-07 13:00:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xna-secure-unlock-system</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>427</wp:comment_id>
			<wp:comment_author><![CDATA[david]]></wp:comment_author>
			<wp:comment_author_email>dodongoxp@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>189.194.233.14</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 10:39:29</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 15:39:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[cool idea... but you would have to protect as fort knox your code generating web page or somehow integrate the page with live id's.. otherwise.. insteado of sharing the codes you could share the code generating website url... and that way no matter which gamertag you use you can generate codes for it..

or i am missing something??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>428</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.247</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 12:56:14</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 17:56:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you are correct that you'd have to secure your code generation mechanism.  However, it's not as tough as you might think.  For example, if my site required the user to log in with their account, then I would more than likely have access to their password (or at least a hash of that password).  I could use that as the user's secret.  And since they would have to be authenticated into my site to use the code generation page, I don't have to worry about people sharing URLs.

:-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA MVP Award for 2008</title>
		<link>http://codecube.net/2008/07/xna-mvp-award-for-2008/</link>
		<pubDate>Wed, 02 Jul 2008 01:17:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=57</guid>
		<description></description>
		<contentencoded><![CDATA[<p><a href="http://codecube.net/bloguploads/XNAMVPAwardfor2008_D9E5/image.png"><img style="border-right: 0px; border-top: 0px; margin: 0px 0px 0px 10px; border-left: 0px; border-bottom: 0px" height="184" alt="image" src="http://codecube.net/bloguploads/XNAMVPAwardfor2008_D9E5/image_thumb.png" width="119" align="right" border="0" /></a>Earlier today, I was informed that I've been awarded a DirectX/XNA MVP award for 2008.&#160; One word, Wow :-)</p>  <p>I am very thankful for the award, and want to thank those that have supported me ... whether it's through tolerating the time I spent helping random people on <a href="http://forums.xna.com/forums/">internet forums</a>.&#160; To those that have supported my <a href="http://www.codeplex.com/ScurvyMedia">open source project</a> with feedback and knowledge.&#160; And the few readers of my blog.</p>  <p>Going forward, I'm not sure this is going to change much ... especially since the award is for past contributions as opposed to a position that you must work at.&#160; I'm going to continue answering forum posts, writing stuff on my site, expanding Scurvy.Media, and even writing games :-)</p>  <p>I'm really looking forward to what the next year holds.&#160; Thanks Microsoft!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2008-07-01 20:17:30</wp:post_date>
		<wp:post_date_gmt>2008-07-02 01:17:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xna-mvp-award-for-2008</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:comment>
			<wp:comment_id>499</wp:comment_id>
			<wp:comment_author><![CDATA[CodeCube.NET &raquo; Zune Review]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net/?p=73</wp:comment_author_url>
			<wp:comment_author_IP>208.113.146.179</wp:comment_author_IP>
			<wp:comment_date>2008-08-23 13:40:53</wp:comment_date>
			<wp:comment_date_gmt>2008-08-23 18:40:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] it.&#160; Disclaimer: I got the Zune using the &quot;MVP Bucks&quot; that I received from my recent MVP Award.&#160; While I may have gotten this essentially for free, this is not a paid review and reflects [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>441</wp:comment_id>
			<wp:comment_author><![CDATA[Trevor]]></wp:comment_author>
			<wp:comment_author_email>tlongino@ConceptCreativeMarketing.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ConceptCreativeMarketing.com</wp:comment_author_url>
			<wp:comment_author_IP>71.53.158.166</wp:comment_author_IP>
			<wp:comment_date>2008-07-29 22:23:41</wp:comment_date>
			<wp:comment_date_gmt>2008-07-30 03:23:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[...belated congratulations from me as well.

(See, I *do* care!)

Now you need to *publicize* this crap. You hear me? PUBLICIZE!

I don't just say this because I'm a marketer, mind.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>423</wp:comment_id>
			<wp:comment_author><![CDATA[Pete]]></wp:comment_author>
			<wp:comment_author_email>ultrahead@msn.com</wp:comment_author_email>
			<wp:comment_author_url>http://amapplease.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>190.135.178.101</wp:comment_author_IP>
			<wp:comment_date>2008-07-02 11:10:59</wp:comment_date>
			<wp:comment_date_gmt>2008-07-02 16:10:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congrats, man!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>425</wp:comment_id>
			<wp:comment_author><![CDATA[Catalin Zima]]></wp:comment_author>
			<wp:comment_author_email>gandalf_sur@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://catalinzima.com</wp:comment_author_url>
			<wp:comment_author_IP>79.119.152.71</wp:comment_author_IP>
			<wp:comment_date>2008-07-06 15:15:33</wp:comment_date>
			<wp:comment_date_gmt>2008-07-06 20:15:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulation, Joel.
You earned it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>429</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>youknowit@ea.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.speedbagforum.com</wp:comment_author_url>
			<wp:comment_author_IP>72.189.5.190</wp:comment_author_IP>
			<wp:comment_date>2008-07-08 22:47:32</wp:comment_date>
			<wp:comment_date_gmt>2008-07-09 03:47:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations!

Great news!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA Input Guidelines?</title>
		<link>http://codecube.net/2008/07/xna-input-guidelines/</link>
		<pubDate>Mon, 21 Jul 2008 11:19:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=58</guid>
		<description></description>
		<contentencoded><![CDATA[One of the things I've noticed about many of the xbox games that are published through traditional channels (ie. retail and xbox live arcade) is that it's very easy to just pick up and play.  It never really occurred to me that it is likely due to the level of polish that they all probably achieve.

The thought came to me when I was playing the excellent <em></em><em><a href="http://www.epsicode.net/little-gamers/">Little Gamers: Teh Game</a></em> with my son on community games.  We spent a minute or so trying to figure out why the controller wasn't working.  Even going as far as to restart the xbox to make sure that the controller was still providing input to the console.

After realizing what was going on, it was obvious that the code probably looked something like this:
<blockquote>GamePadState padState = GamePad.GetState(PlayerIndex.One);

if (padState.IsButtonDown(Buttons.Start))
{
this.StartGame();
}</blockquote>
Now, this is by no means a critique of the game ... because the game really has a lot of polish (aside from perhaps this one tiny thing).  But the code assumed that the player would always be using the controller designated as "player one".  When, in reality, I always just pick up whatever controller I see first, regardless of whether it held the player one slot.  The code above could be modified for a single player game as below to determine the controller that the player is using:
<blockquote>for (int i = 0; i &lt; 4; i++)
{
PlayerIndex currentPlayerIndex = (PlayerIndex)i;
GamePadState padState = GamePad.GetState(currentPlayerIndex);

if (padState.IsButtonDown(Buttons.Start))
{
this.CurrentPlayer = currentPlayerIndex;
this.StartGame();
}
}</blockquote>
From that point on, you can use this.CurrentPlayer when querying for input.

I think that this is actually a symptom of a slightly larger problem.  The problem is that there are no standards for XNA games right now.  Microsoft has actually made a conscious decision to avoid publishing standards for XNA games because, unlike the strict TCR (Technical Certification Requirement) that fully licensed commercial games must pass, they wanted to lower the barrier to entry for game development.

This is of course a good thing ... however, one of the things that I've been wanting for a long time are guidelines for XNA games.  They would offer things that could help a would-be developer add that final polish, that <em>je ne sais quoi</em>.  These guidelines could be provided by Microsoft, but I think it would be equally useful to see them community driven using something like <a href="http://xnawiki.com">XNAWiki.com</a>.

While I'm on the topic of input ...<a title="EA Skate's flickit controls" href="http://www.youtube.com/watch?v=Gbu4wSnsW3I"><img style="border-top-width: 0px; border-left-width: 0px; border-bottom-width: 0px; border-right-width: 0px" src="http://codecube.net/bloguploads/XNAInputHeuristics_7742/image.png" border="0" alt="EA Skate's innovative trick control mechanism" width="150" height="149" align="right" /></a> Paul Varcholik has been experimenting with some very interesting technologies such as training <a href="http://www.bespokesoftware.org/wordpress/?p=33">input gestures for the wiimote</a>.  It would be cool to see this extrapolated to a more general application.  This could be used to train combo moves in a fighting game ... or perhaps an RPG where spells must be gestured.

Kinda' like <a href="http://www.youtube.com/watch?v=Gbu4wSnsW3I">EA Skate</a> :-D]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2008-07-21 06:19:10</wp:post_date>
		<wp:post_date_gmt>2008-07-21 11:19:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xna-input-guidelines</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>624</wp:comment_id>
			<wp:comment_author><![CDATA[ewalletexpress poquer en la pc]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.thisispokerenvivo.com/elapuestas-en-linea5.php</wp:comment_author_url>
			<wp:comment_author_IP>189.111.166.103</wp:comment_author_IP>
			<wp:comment_date>2009-01-16 11:50:01</wp:comment_date>
			<wp:comment_date_gmt>2009-01-16 16:50:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ewalletexpress poquer en la pc...</strong>

suck?absently geography ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Creating Great Community Games</title>
		<link>http://codecube.net/2008/07/creating-great-community-games/</link>
		<pubDate>Thu, 24 Jul 2008 22:04:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=60</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Nick Gravelyn posted an awesome set of guidelines for XNA community games.&#160; Anyone that is serious about making a nicely polished games should print out that list and make sure their game is up to snuff:</p>  <p><a title="http://xnawiki.com/index.php?title=Creating_Great_Community_Games" href="http://xnawiki.com/index.php?title=Creating_Great_Community_Games">http://xnawiki.com/index.php?title=Creating_Great_Community_Games</a></p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>60</wp:post_id>
		<wp:post_date>2008-07-24 17:04:25</wp:post_date>
		<wp:post_date_gmt>2008-07-24 22:04:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-great-community-games</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introducing Scurvy.Test</title>
		<link>http://codecube.net/2008/07/introducing-scurvytest/</link>
		<pubDate>Sun, 27 Jul 2008 22:00:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=62</guid>
		<description></description>
		<contentencoded><![CDATA[Game development is by its nature a visual thing.  Unit testing is code that tests other code ... and code is by its nature a non-visual exercise.  Ever since XNA launched, a recurring thread I've often seen is how to best apply unit testing methodology.  Particularly when much of the code-base requires things that wouldn't typically be available in the context of a unit test such as a graphics device.

I still to this day haven't seen a comprehensive write-up on this subject. So at the risk of sparking a debate on the subject of whether this should be accomplished with mock objects, or via some other method; I decided to see what it would take to write a unit test framework that allows you to use resources such as the graphics device.

You can find the project on CodePlex here: <a title="http://www.codeplex.com/ScurvyTest" href="http://www.codeplex.com/ScurvyTest">http://www.codeplex.com/ScurvyTest</a>

On the surface, it has most of the basic features of a unit test framework.  You can add some custom attributes to your unit test classes:
<ul>
	<li>[TestClass], to signify this is a unit test class</li>
	<li>[TestSetup], run before every unit test</li>
	<li>[TestMethod], the actual unit test</li>
	<li>[TestCleanup], run after every unit test</li>
</ul>
This follows suit with most any unit testing framework I've come across.  Where things diverge is in the method of running the unit tests.  This framework is designed to run the unit tests in-process. You can run your unit test in one of two ways:
<blockquote>TestRunner&lt;Program&gt;.RunTests(myServiceProvider);</blockquote>
Where the generic argument is <strong>any type</strong> in the assembly that houses your unit tests.  This automatic mode will run all unit tests.  Good if you want to use this framework in a standalone project (since Scurvy.Test doesn't actually have any references to XNA libraries).

Here's where things get interesting though.  What if you wanted to write unit tests that use content managers, or even that render content.  This is (probably) impossible with other unit test frameworks.  However, Scurvy.Test enables these scenarios in a few different ways.

First, the TestRunner class can also be instantiated as a regular instance.
<blockquote>this.runner = new TestRunner&lt;Game1&gt;(this.Services);

...

this.runner.Update(gameTime.ElapsedGameTime);

...

this.runner.Draw();</blockquote>
This will cause the test runner to run in manual mode. When you do that, simply call the Update and Draw methods on the test runner instance.  A unit test will be run once every time the Update method is called, unless one of the unit tests specifies an ExitCriteria (more on this in a moment).

Second, a [TestMethod] can either have no arguments, or can accept a TestContext.  This TestContext has two properties:
<ol>
	<li>public IServiceProvider Services</li>
	<li>public ExitCriteria ExitCriteria</li>
</ol>
The IServiceProvider is cool because if you use the "Go To Source" feature on the game class' .Services property, you'll notice it's of type <a href="http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.gameservicecontainer.aspx">GameServiceContainer</a>, which in turn implements the IServiceProvider interface.  Having a reference to this lets you instantiate <a href="http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.content.contentmanager.aspx">ContentManager</a>s, and also query for services like the <a href="http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.content.contentmanager.aspx">IGraphicsDeviceService</a> which could be used to instantiate a <a href="http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.content.contentmanager.aspx">SpriteBatch</a>.

The ExitCriteria is an abstract class that has the following definition:
<blockquote>public abstract class ExitCriteria
{
public bool IsFinished;
public readonly TestContext Context;

public ExitCriteria(TestContext context)
{
this.Context = context;
}

public abstract void Update(TimeSpan elapsedTime);

public abstract void Draw();
}</blockquote>
With this, you can write a unit test that can render to the game's viewport and allow a QA tester to verify correctness visually.  Simply set the context's ExitCriteria method from a unit test, and the framework will take care of executing the exit criteria until it sets the <strong>IsFinished</strong> property to true.
<blockquote>[TestMethod]
public void ManualContentVerificationTest(TestContext context)
{
context.ExitCriteria = new ContentVerificationExitCriteria(this.content, context);
}</blockquote>
The sample project included in the source code has a manual verification exit criteria that will wait until the tester presses a button.

Right now, the weakest part of this framework is in the feedback department.  If an assert fails or one of the unit tests throws an exception, it will write some information to the Debug stream (which you can see in visual studio's Output window.  This is ok for now, but I have some plans on how to improve that.

So I'd love to get feedback on this little project, feel free to comment on this post, or on the codeplex site.

Thanks!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2008-07-27 17:00:47</wp:post_date>
		<wp:post_date_gmt>2008-07-27 22:00:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>introducing-scurvytest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="unit-testing"><![CDATA[Unit Testing]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>443</wp:comment_id>
			<wp:comment_author><![CDATA[Björn]]></wp:comment_author>
			<wp:comment_author_email>bxnaa@b-cage.net</wp:comment_author_email>
			<wp:comment_author_url>http://bxnaa.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.131.234.30</wp:comment_author_IP>
			<wp:comment_date>2008-07-30 09:34:10</wp:comment_date>
			<wp:comment_date_gmt>2008-07-30 14:34:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RE firstly: I am not sure that this is a real requirement/limitation of any framework and not only a convention of unit testing.

RE second: makes sense. The way I pondered it was to use the refernece rasterizer and dump the bits into an image and compare that one with a reference image. This would cause issues when some device settings (e.g. MSAA and such) were changed, though, and it might suboptimal for validating animations.

RE lastly: ah, the good old NIH :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>440</wp:comment_id>
			<wp:comment_author><![CDATA[Trevor Longino]]></wp:comment_author>
			<wp:comment_author_email>tlongino@ConceptCreativeMarketing.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ConceptCreativeMarketing.com</wp:comment_author_url>
			<wp:comment_author_IP>71.53.158.166</wp:comment_author_IP>
			<wp:comment_date>2008-07-29 21:27:18</wp:comment_date>
			<wp:comment_date_gmt>2008-07-30 02:27:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You trying to run me out of a job?

...not that I work as a tester anymore. But you get the idea. 

Seems to be a good idea, although I *do* wonder about Bjorn's question.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>438</wp:comment_id>
			<wp:comment_author><![CDATA[Björn]]></wp:comment_author>
			<wp:comment_author_email>bxnaa@b-cage.net</wp:comment_author_email>
			<wp:comment_author_url>http://bxnaa.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.131.226.29</wp:comment_author_IP>
			<wp:comment_date>2008-07-28 09:32:31</wp:comment_date>
			<wp:comment_date_gmt>2008-07-28 14:32:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[While I have not taken a look at the code yet (will do soonish :)) I cannot stop but wonder why you didn't extend an exisiting Unit test framework like xUnit.net or NUnit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.247</wp:comment_author_IP>
			<wp:comment_date>2008-07-30 08:20:53</wp:comment_date>
			<wp:comment_date_gmt>2008-07-30 13:20:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good questions, it boils down to three things.  Firstly, those unit test frameworks (and all others as far as I know) are tied to being run in the context of an external test runner.  I wanted to bring that in-process so that you could take advantage of things like rendering to the graphics device.  Second, I also wanted to enable manual testing scenarios where QA testers can visually/manually verify certain things that you can't verify in code, "does this model *look* right".  And lastly, I kinda wanted to tackle the project on my own.  If I would have tried to take the time to learn the internals of those other frameworks and figure out how to work my features in, I can almost guarantee this would have never been released :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA Presentation This Week</title>
		<link>http://codecube.net/2008/08/xna-presentation-this-week/</link>
		<pubDate>Mon, 18 Aug 2008 23:33:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=72</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I just wanted to post a little reminder about my ONETUG presentation this Thursday at 7pm.</p>  <blockquote>   <p>Software development is about constantly learning, and developing your skills. Each new technique, or novel solution to a problem improves your overall effectiveness and value as a software developer/engineer.</p>    <p>XNA Game Studio can help you experience those new techniques and solutions by exposing you to a different world of software engineering problems. If you embrace game development as a hobby, you *will* become a better programmer, and this session will show you how.</p> </blockquote>  <p>For more details, check out the ONETUG events section.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2008-08-18 18:33:29</wp:post_date>
		<wp:post_date_gmt>2008-08-18 23:33:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-presentation-this-week</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
	</item>
	<item>
		<title>Zune Review</title>
		<link>http://codecube.net/2008/08/zune-review/</link>
		<pubDate>Sat, 23 Aug 2008 18:40:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=73</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I recently acquired a Zune and I wanted to write about my experiences with it.&#160; <em>Disclaimer:</em> <em>I got the Zune using the &quot;MVP Bucks&quot; that I received from my recent <a href="http://codecube.net/?p=57">MVP Award</a>.&#160; While I may have gotten this essentially for free, this is not a paid review and reflects only my experiences with the product :-)</em></p>  <p>Overall, I'd say that I'm fairly happy with the Zune so far ... aside from a few nagging issues.</p>  <ul>   <li>Zune Software/Marketplace </li>    <ul>     <li>The same xbox live gamertag/account is used for the Zune along with the same microsoft point system.&#160; This was pretty convenient because I can use the same account settings to add points ... and if I add points on the xbox, they are usable for zune content.</li>      <li>The social aspect of the zune marketplace is, to me, very compelling.&#160; I really like being able to see what some of my friends are listening to ... I've already purchased a few songs just because I saw someone else play it.</li>      <li>Some of the songs are offered in DRM-free MP3 format.&#160; I hope this is a trend that continues because I would gladly pay for the music ... but would definitely like the freedom of taking my purchase with me if I ever decide to stop using the Zune.</li>      <li>I love that I can buy a song on the website, and the next time I launch the zune software it will automatically download.&#160; Hopefully Microsoft can take this concept to the XBox.</li>   </ul>    <li>Podcasts </li>    <ul>     <li>This is by far the best part of my zune experience so far.&#160; The sync features is *awesome*.&#160; I can subscribe to a podcast, and then based on the subscription settings in the zune software the podcast will automatically be synched to the zune.&#160; After I listen to it, it will automatically be removed and the next one loaded onto the device.&#160; Awesome!</li>   </ul>    <li>Wireless      <ul>       <li>Social ... I know one person that has a zune (which now goes unused due to his recent iPhone purchase).&#160; He brought it in and we swapped a couple of songs over the wireless connection.&#160; Pretty cool I guess.</li>        <li>You can sync over the wifi network, would be awesome if I had a desktop, aside from that, meh.&#160; Seemed to kill the battery as well.</li>     </ul>   </li>    <li>Bugs </li>    <ul>     <li>All has unfortunately not been rosy in the kingdom of the zune.&#160; I've already come across some randomly intermittent 404s when trying to add microsoft points to my account and a few other parts of the zune website.&#160; They cleared up pretty quickly though so it's not a huge deal.</li>      <li>More disturbing though has been the hardware issues.&#160; A week or two back, the zunepad stopped working.&#160; After getting pretty frustrated, some googling revealed that I could wipe the device clean from the zune software, which would reboot it.&#160; This did seem to work and I was able to resync all my content.</li>      <li>A few days ago, the play/pause button stopped working all of a sudden.&#160; So far, no combination of rebooting or clearing the content has seemed to bring the functionality back.&#160; I'm probably going to have to call support and see if they can replace it (assuming it's under warranty, which I imagine it is)</li>   </ul> </ul>  <p>So overall, I've got a fairly positive feeling on the zune (assuming my hardware issues can be resolved) ... am excited to see what Microsoft's next plans are for the platform, especially as it relates to XNA!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date>2008-08-23 13:40:49</wp:post_date>
		<wp:post_date_gmt>2008-08-23 18:40:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>zune-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>500</wp:comment_id>
			<wp:comment_author><![CDATA[claude keller]]></wp:comment_author>
			<wp:comment_author_email>ckeller@playforthis.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.213.175.100</wp:comment_author_IP>
			<wp:comment_date>2008-08-24 14:26:04</wp:comment_date>
			<wp:comment_date_gmt>2008-08-24 19:26:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you downloaded any games on your zune?
If so, what is your opinion on game play?
Are you going to say anything about your presentation
for ONETUG.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>501</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.247</wp:comment_author_IP>
			<wp:comment_date>2008-08-25 13:26:14</wp:comment_date>
			<wp:comment_date_gmt>2008-08-25 18:26:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I haven't had a chance to download any games onto the zune ... I am planning on doing a presentation post ... but have been busy :-P am planning on it this week though.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1265</wp:comment_id>
			<wp:comment_author><![CDATA[Virgil Maestri]]></wp:comment_author>
			<wp:comment_author_email>Blasen@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kasper-suits-now.wetpaint.com/</wp:comment_author_url>
			<wp:comment_author_IP>108.62.56.46</wp:comment_author_IP>
			<wp:comment_date>2011-04-17 16:28:18</wp:comment_date>
			<wp:comment_date_gmt>2011-04-17 21:28:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pretty section of content. I just stumbled upon your site and in accession capital to assert that I get in fact enjoyed account your blog posts. Anyway I will be subscribing to your feeds and even I achievement you access consistently fast.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303075698.8302";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Boolean Magic</title>
		<link>http://codecube.net/2008/08/boolean-magic/</link>
		<pubDate>Wed, 27 Aug 2008 12:44:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=74</guid>
		<description></description>
		<contentencoded><![CDATA[<p>This technique kept being useful in my day to day work over the past few years.&#160; I always have to end up explaining it after a bit of confusion from colleagues who don't understand it when they see it.&#160; So I figured I'd post an explanation that I can refer back to the next time :-)</p>  <blockquote>   <p>WHERE     <br />&#160;&#160;&#160; ((@regionid is null and 1=1)      <br />&#160;&#160;&#160; OR      <br />&#160;&#160;&#160; (@regionid is not null and @regionid = rc.regionid))</p> </blockquote>  <p>This WHERE clause essentially allows us to have an optional SQL Parameter without having to resort to dynamically constructed SQL.&#160; If you follow the boolean logic closely you will see that if the @regionid parameter is null (ie. was not supplied), the entire &quot;regionid&quot; clause is thrown out.&#160; This is because 1=1 will of course return true.</p>  <p>If however, the @regionid parameter is <strong>not</strong> null (ie. was supplied), then we go ahead and compare @regionid to the rc.regionid field.</p>  <p>This technique can provide a simple way of adding &quot;dynamism&quot; (is that a word?) to your application with little effort :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2008-08-27 07:44:44</wp:post_date>
		<wp:post_date_gmt>2008-08-27 12:44:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>boolean-magic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>512</wp:comment_id>
			<wp:comment_author><![CDATA[Peter]]></wp:comment_author>
			<wp:comment_author_email>peter@dezibel.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.202.138.52</wp:comment_author_IP>
			<wp:comment_date>2008-09-01 02:50:49</wp:comment_date>
			<wp:comment_date_gmt>2008-09-01 07:50:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Second Björn on that, (@regionid is null OR @regionid = rc.regionid) is the way to go. If @regionid is null or missing then (@region is null) evaluates to true. If @regionid is not null, the second part will be evaluated.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.211</wp:comment_author_IP>
			<wp:comment_date>2008-08-28 10:02:36</wp:comment_date>
			<wp:comment_date_gmt>2008-08-28 15:02:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[well played, you know what ... I think you're right Björn :-D you get the prize!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>504</wp:comment_id>
			<wp:comment_author><![CDATA[Björn]]></wp:comment_author>
			<wp:comment_author_email>bxnaa@b-cage.net</wp:comment_author_email>
			<wp:comment_author_url>http://bxnaa.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.131.204.45</wp:comment_author_IP>
			<wp:comment_date>2008-08-28 05:57:16</wp:comment_date>
			<wp:comment_date_gmt>2008-08-28 10:57:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hm, I do not know SQL too well but shouldn't something like (@regionid is null OR @regionid = rc.regionid) result in the same? I mean how's (true and true) OR (not evaluated) different from (true OR not evaluated)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA Presentation Source</title>
		<link>http://codecube.net/2008/09/xna-presentation-source/</link>
		<pubDate>Tue, 02 Sep 2008 12:48:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=75</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Apologies for the delay, but I finally got around to packaging up the presentation that I did in my ONETUG presentation in august.&#160; For those who were not in attendance, the entire presentation was written in XNA.&#160; I also ended up using the <a href="http://flatredball.com">FlatRedBall</a> engine to handle a lot of the rendering and collision.</p>  <p>I originally didn't want to make a huge deal about the fact that I was using a third party engine because I wanted the focus of the presentation to be on techniques that you could use with or without an engine instead of specific APIs of that engine.&#160; However, the meeting attendees seemed very receptive and interested in the engine anyways ... which is great because FlatRedBall is a really great engine.&#160; I wholeheartedly suggest checking it out because it makes a great many things so much easier.</p>  <p>Another surprise to me was that there was a lot of interest in the code that ran the actual presentation.&#160; After an impromptu run-through of the code at the end of the presentation, I decided to put a few details for those who were interested (along with the download link below).</p>  <p>I had a great time doing the presentation and I wanted to thank all the good comments that came my way from it.&#160; I would definitely be interested in doing another one that dives into some more detail, particularly 3D concepts which seemed to be a recurring request.</p>  <h3>DOWNLOAD </h3>  <p><a href="http://codecube.net/bloguploads/AugustONETUGXNA.rar">http://codecube.net/bloguploads/AugustONETUGXNA.rar</a></p>  <ul>   <li>Presentation class, handles the main presentation navigation.&#160; Gamepad 1's left and right bumper provided the &quot;forward&quot; and &quot;backwards&quot; navigation.</li>    <li>PresentationScreen class, handles secondary navigation between same-screen indexes.&#160; Also handles the updating of all &quot;IndexActions&quot;.&#160; Gamepad 1's A and B buttons provided the forward/backwards index navigation</li>    <li>IndexAction class, provides a simple mechanism to add custom functionality when a screen index is entered or exited.</li>    <li>*.scnx files, created using FRB's <a href="http://www.flatredball.com/frb/forum/viewtopic.php?t=436">SpriteEditor</a>, each main presentation screen has one .scnx file, which itself defines multiple indexes using a naming convention.</li> </ul>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2008-09-02 07:48:00</wp:post_date>
		<wp:post_date_gmt>2008-09-02 12:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-presentation-source</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:comment>
			<wp:comment_id>852</wp:comment_id>
			<wp:comment_author><![CDATA[Shanmugam]]></wp:comment_author>
			<wp:comment_author_email>shanmugamcse@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.164.70.217</wp:comment_author_IP>
			<wp:comment_date>2009-10-28 01:17:10</wp:comment_date>
			<wp:comment_date_gmt>2009-10-28 06:17:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Sir Is that possible to view the gts file formats in XNA Framework by using C#..,Bcoz i m doing an Engg Project in 3D Steganography..,Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Installing XNA 3.0 from Scratch</title>
		<link>http://codecube.net/2008/09/installing-xna-30-from-scratch/</link>
		<pubDate>Fri, 05 Sep 2008 21:11:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=76</guid>
		<description></description>
		<contentencoded><![CDATA[<p>It's by no means rocket surgery, but I recently cleared out an older laptop so that I can do all my XNA development there instead of taking up my other computer's hard-drive.&nbsp; So I figured I'd post the all of the apps that I installed and the install order in case it was useful to anyone else :-)</p> <ol> <li>Microsoft .NET Framework 2.0</li> <li>Visual Studio 2008 C# Express</li> <li>XNA Game Studio 3.0 CTP</li> <li>Paint.NET</li> <li>XSI Mod Tool</li></ol> <p>Feels good to "Start over" as it were, without having to have four different versions of visual studio (2k5, 2k5 express, 2k8, 2k8 express) and all the other development crud that goes into "the day job"</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2008-09-05 16:11:32</wp:post_date>
		<wp:post_date_gmt>2008-09-05 21:11:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>installing-xna-30-from-scratch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
	</item>
	<item>
		<title>Rethrowing Exceptions in .NET</title>
		<link>http://codecube.net/2008/09/rethrowing-exceptions-in-net/</link>
		<pubDate>Sat, 13 Sep 2008 17:02:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=77</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Wow, I finally came across a good reason to rethrow exceptions using the "throw ex" syntax instead of just "throw".&nbsp; For those of you who don't know, when you have a try/catch block, you have the option of rethrowing the exception so that it may be handled further up the call stack.&nbsp; The most common reason you might want to do this is for error logging ... so you can log the error, and then let someone else worry about the exception.</p> <blockquote> <p>try<br>{<br>&nbsp;&nbsp;&nbsp; // some exception to happen here<br>}<br>catch(Exception ex)<br>{<br>&nbsp;&nbsp;&nbsp; throw;<br>}</p></blockquote> <p>The slight nuance that many people may not know is that if you just use "throw", the exception's stack trace is maintained.&nbsp; But if you use "throw ex", the stack trace will start from that method where you threw the exception.&nbsp; Most people that don't really know this end up using "throw ex", and I've always advocated the use of "throw".</p> <p>Enter SqlExceptions.&nbsp; When you log a SqlException, you will see at a minimum the following stack trace:</p> <blockquote> <p>System.Data.SqlClient.SqlException: Timeout expired.&nbsp; The timeout period elapsed prior to completion of the operation or the server is not responding.  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)  <p>&nbsp;&nbsp; at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj)  <p>&nbsp;&nbsp; at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlDataReader.ConsumeMetaData()  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlDataReader.get_MetaData()  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)  <p>&nbsp;&nbsp; at System.Data.SqlClient.SqlCommand.ExecuteReader()</p></blockquote> <p>When trying to look at logs to investigate a crash, this is a lot of text for your eyes to parse through.&nbsp; In this case, I find it better to catch the SqlException and rethrow it using this syntax:</p> <blockquote> <p>try<br>{<br>&nbsp;&nbsp;&nbsp; command.ExecuteNonQuery();<br>}<br>catch(SqlException ex)<br>{<br>&nbsp;&nbsp;&nbsp; throw ex;<br>}</p></blockquote> <p>That way, you don't get the ridiculously long stack trace from within the sql command that you don't care about :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2008-09-13 12:02:28</wp:post_date>
		<wp:post_date_gmt>2008-09-13 17:02:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rethrowing-exceptions-in-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>525</wp:comment_id>
			<wp:comment_author><![CDATA[Charris]]></wp:comment_author>
			<wp:comment_author_email>chrisandharris@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.62.103.180</wp:comment_author_IP>
			<wp:comment_date>2008-09-15 12:42:24</wp:comment_date>
			<wp:comment_date_gmt>2008-09-15 17:42:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ouch yeah SqlException sure can be a tad bit too verbose sometimes.

Although if you did need to see the original stack trace you could always use Exception(String, Exception) to attatch the original exception to InnerException.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>May Their Stack Overfloweth</title>
		<link>http://codecube.net/2008/09/may-their-stack-overfloweth/</link>
		<pubDate>Wed, 17 Sep 2008 12:18:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=78</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Just to give them some googlejuice, I wanted to link to the new programming community site <a href="http://stackoverflow.com">StackOverflow.com</a>. From their vision statement:</p> <blockquote> <p><b>Stackoverflow is sort of like the anti-<a href="http://experts-exchange.com/">experts-exchange</a> (minus the nausea-inducing sleaze and quasi-legal search engine gaming) meets <a href="http://www.wikipedia.com/">wikipedia</a> meets <a href="http://programming.reddit.com/">programming reddit</a>.</b> It is by programmers, for programmers, with the ultimate intent of collectively increasing the sum total of <i>good</i> programming knowledge in the world. No matter what programming language you use, or what operating system you call home. Better programming is our goal.</p></blockquote> <p>I have to say that I <strong>love</strong> the idea of someone unseating experts-exchange.&nbsp; I've always hated the fact that these answers show up on google, and they try to trick you into signing up just to see the answer.&nbsp; </p> <p>And I also really like the way that they are changing the way that a community site is structured.&nbsp; I've been a member of many many many an online forum, and I have to say that I'm tired of the same ol' paradigm of the forum.&nbsp; And they also use OpenID! :-P</p> <p>So to them I say, Best of Luck!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>78</wp:post_id>
		<wp:post_date>2008-09-17 07:18:47</wp:post_date>
		<wp:post_date_gmt>2008-09-17 12:18:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>may-their-stack-overfloweth</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Self-Improvement Through Creation</title>
		<link>http://codecube.net/2008/09/self-improvement-through-creation/</link>
		<pubDate>Mon, 22 Sep 2008 12:03:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=79</guid>
		<description></description>
		<contentencoded><![CDATA[<p>If you happened to catch the <a href="http://codecube.net/?p=75">presentation</a> I gave at ONETUG last month, you'd know that one of the main points of that presentation was constantly learning and developing your own skills by doing personal projects on the side using XNA.&nbsp; I was pleasantly surprised when I opened up the latest GameDeveloper magazine and found an article by Masaya Mastuura, the mind behind <a href="http://www.youtube.com/watch?v=elnYsU5naqE&amp;feature=related">Parappa the Rapper</a>, called <em>A Sense of Fun</em>.</p> <p>I've excerpted a section below and added some emphasis on a few of the sentences:</p> <blockquote> <p>Most musicians create music in their own style, even when they have been asked to make something specific.&nbsp; Many incapable music directors do not even think of starting musical production until after the taste of the game has been decided by the planning, design, and graphics teams. For me, someone who is engaged in this kind of occupation cannot be called a musician.</p> <p>This applies for more than just music. <strong>If you want to create something of value, then you must continue to create for yourself as well.</strong> It's the same for designing games. If an artist only works on things that come to him through work, then all he is doing is production. Development is not coming from within. <strong>The scale and scope of the production, as well as the number of people working on the project should not put a damper on his creativity</strong>.</p> <p>...</p> <p>Lately, a lot of developers I know -- especially programmers -- have told me that they are making small scale games by themselves, independently. <strong>To develop something solely from one's own potential is, I believe, a thing of importance.</strong> The contents of a game are a combination of passion and energy. If these are becoming sub-ordinate to other factors, then it is game over.</p></blockquote> <p>I hope if anyone took anything away from that presentation, that it was this.&nbsp; Even though in retrospect it may seem that I was just lucky and jumped on the right bandwagon, one of the things that I had always wanted with respect to ONETUG was expand the local developer community to the point where central florida is a well respected center of excellence.&nbsp; I feel that the local community has indeed expanded greatly since those early days.</p> <p>The more that people work on expanding their own skill set, as opposed to only working on things that come to them from work -- I believe is the more that the local community will expand and improve :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2008-09-22 07:03:55</wp:post_date>
		<wp:post_date_gmt>2008-09-22 12:03:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>self-improvement-through-creation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>543</wp:comment_id>
			<wp:comment_author><![CDATA[Victor Chelaru]]></wp:comment_author>
			<wp:comment_author_email>VicChelaru@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flatredball.com</wp:comment_author_url>
			<wp:comment_author_IP>75.165.225.91</wp:comment_author_IP>
			<wp:comment_date>2008-09-22 09:50:55</wp:comment_date>
			<wp:comment_date_gmt>2008-09-22 14:50:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I completely 100% absolutely totally agree!!!  I couldn't be in more agreement :)  I know for a fact that the reason I got a job in the industry is my side projects - not my education, not connections, nothing else.  I've literally had an interview which was ending prematurely, but then I told the guys "Wait, let me show you what I can do."  After showing them some personal projects they told me the interview completely turned around.  They accepted my inflated salary request.

--Vic--]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Scurvy.Media Question</title>
		<link>http://codecube.net/2008/09/scurvymedia-question/</link>
		<pubDate>Thu, 25 Sep 2008 12:34:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=80</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I received a question about the <a href="http://www.codeplex.com/ScurvyMedia">Scurvy.Media</a> library, and I figured I'd share my response in case it's useful to anyone else :-)</p> <blockquote> <p>Hi Joel,</p> <p>We are currently doing a project in XNA and are trying to inventory the abilities to play video in game. We found the scurvy media project to be the one that is the most advanced. Only on your codeplex site it is not really clear what the requirements are of the movie to be played. so far i've gathered<br>- it should not be compressed video (xvid / divx)<br>- framerate game = framerate video</p> <p>could you please respond to tell me if the information i've gathered is correct?</p></blockquote> <p>That's partially correct :-)&nbsp; <ul> <li>Theoretically, as far as compression goes, you can use whatever codec you want ... as long as the developer's machine has the same codec.&nbsp; I've heard some reports of certain videos not working for certain people, but I've no way to determine whether they have the correct codec installed :-P&nbsp; Beneath the scenes, the content pipeline portion uses <a href="http://www.codeproject.com/KB/audio-video/avifilewrapper.aspx">this library</a> to decode the AVI video.&nbsp; So as long as that library can read it (and it just uses your machine's codecs), then scurvy.media should be able to translate it to the runtime format.  <li>As far as the framerate goes ... as long as your game's framerate does not drop below the framerate of the video, the video will play at the correct framerate.&nbsp; It takes the video's length and frame length into account ... it's just that if the game delays an update call to the video, there is no built in recovery mechanism for it to catch up.</li></ul> <p>A few more things to note ... the pipeline is unfortunately sensitive to video size.&nbsp; Because of the way that it decodes the video into essentially a sequence of textures, the size can tend to be a little large.&nbsp; This would be fine if it was able to get on disk, because of the way that the video is streamed from the file system.&nbsp; But unfortunately, the content pipeline buffers the entire contents of one .xnb file in memory first before writing to disk ... so if this hits some limit, it will throw an out of memory exception.&nbsp; I usually just suggest that users break down the video into multiple ones and play them sequentially if it's too long.&nbsp; I know it's less than ideal, but it's the workaround for the moment. <p>I wish your project the best of luck ... please keep me informed of your progress using the library if you end up using it as I'm always looking for ways to improve it and user's feedback is always instrumental in this.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2008-09-25 07:34:32</wp:post_date>
		<wp:post_date_gmt>2008-09-25 12:34:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvymedia-question</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>645</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2009-03-19 08:54:05</wp:comment_date>
			<wp:comment_date_gmt>2009-03-19 13:54:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Corey, thanks for giving this a shot ... I can think of two immediate workarounds:

1. re-edit your videos so that the black frame comes at a natural dark point, such as in between scenes.
2. modify the source code to add a "PreVideoEnd" event.  The event would be raised when there were only X seconds left before the end of the video.  The "X" of course could be configurable via property, and would perhaps have a default of .5

I will consider perhaps a more forward looking solution for inclusion in the engine.  But in the meantime, I'd be really interested in hearing the results of your efforts as it may help decide the ultimate solution.

thanks, and good luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>642</wp:comment_id>
			<wp:comment_author><![CDATA[Corey Paganucci]]></wp:comment_author>
			<wp:comment_author_email>c_paganucci@hadw.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.hornallanderson.com</wp:comment_author_url>
			<wp:comment_author_IP>66.195.33.194</wp:comment_author_IP>
			<wp:comment_date>2009-03-18 18:39:12</wp:comment_date>
			<wp:comment_date_gmt>2009-03-18 23:39:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I'm using your suggested technique of playing videos in sequence, but I'm getting a black frame between videos. I'm using the End callback to play the next video and load the one after that (see pseudocode below). Any suggestions for getting rid of the gap?

Thanks,
Corey

pseudocode:

LoadContent()
{
vid[0].load
vid[1].load
curVid = 0;
vid[curVid].play
}

onVideoEnd()
{
curVid++
vid[curVid].play
vid[curVid+1].load
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>615</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2008-12-05 08:48:48</wp:comment_date>
			<wp:comment_date_gmt>2008-12-05 13:48:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, I haven't abandoned it :-P I've been fairly busy and haven't had a chance to update it to the latest unfortunately.  That being said, if you get the source download, I'm fairly sure that the project upgrader should update it with no problems and it will be usable in a 3.0 project.

Zune wouldn't be supported yet as last time I worked on it I was trying to get the code working on the zune, but ran up on some dynamic texture creation issues.  But when I do get back to working on it, this is what I will be striving to resolve.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[Sjors Miltenburg]]></wp:comment_author>
			<wp:comment_author_email>smiltenburg@sogyo.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.software-innovaters.nl</wp:comment_author_url>
			<wp:comment_author_IP>194.121.85.211</wp:comment_author_IP>
			<wp:comment_date>2008-12-05 07:02:25</wp:comment_date>
			<wp:comment_date_gmt>2008-12-05 12:02:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Could you please inform me if the scurvy project is still alive (last update is &gt;5 months ago) and if 3.0 is supported?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Microsoft Should Buy Pandora</title>
		<link>http://codecube.net/2008/10/microsoft-should-buy-pandora/</link>
		<pubDate>Fri, 10 Oct 2008 16:07:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=81</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Like, right now ... their service fantastic, and it should be merged into the zune website and software.&nbsp; Microsoft could use Pandora's music genome project as their recommendation engine so that our channels could be updated once a day or more instead of just once a week.</p> <p>Well, what are you waiting for Microsoft?</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2008-10-10 11:07:47</wp:post_date>
		<wp:post_date_gmt>2008-10-10 16:07:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>microsoft-should-buy-pandora</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>In LA for PDC Next Week</title>
		<link>http://codecube.net/2008/10/in-la-for-pdc-next-week/</link>
		<pubDate>Sat, 25 Oct 2008 21:46:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=82</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://microsoftpdc.com">Hit me up if you're attending :-)</a>

<a href="http://microsoftpdc.com"><img class="alignnone" title="Microsoft PDC" src="http://microsoftpdc.com/Images/BlogBling/IheartPDC.jpg" alt="" width="320" height="320" /></a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>82</wp:post_id>
		<wp:post_date>2008-10-25 16:46:01</wp:post_date>
		<wp:post_date_gmt>2008-10-25 21:46:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>in-la-for-pdc-next-week</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="pdc"><![CDATA[PDC]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>timothy.r.platt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.189.5.190</wp:comment_author_IP>
			<wp:comment_date>2008-10-26 09:45:12</wp:comment_date>
			<wp:comment_date_gmt>2008-10-26 14:45:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have fun, wish I was going :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Finite State Machine</title>
		<link>http://codecube.net/2008/11/finite-state-machine/</link>
		<pubDate>Tue, 11 Nov 2008 21:00:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=84</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Thanks to the wonderful waybackmachine, I was able to dig up an old article of mine from the old blog software that I hadn't seen for a long time.&nbsp; Figured I'd post it up for posterity ... plus, you never know if a service like archive.org is going to be around forever:</p> <p><a title="http://web.archive.org/web/20041204125618/http://www.codecube.net/item.asp?cc_ItemID=247" href="http://web.archive.org/web/20041204125618/http://www.codecube.net/item.asp?cc_ItemID=247">http://web.archive.org/web/20041204125618/http://www.codecube.net/item.asp?cc_ItemID=247</a></p> <p>One of these days, I'll get around to updating this sample to XNA as I can think of a number of ways that I could factor the code a bit better:</p> <p>----------------------</p> <p>After reading a <a href="http://web.archive.org/web/20041204125618/http://www.ai-junkie.com/architecture/state_driven/tut_state1.html">great article</a> over at <a href="http://web.archive.org/web/20041204125618/http://www.ai-junkie.com/">ai-junkie</a>.� The article describes the tenets of "state driven agent design" much better than I ever could, but just for reference, here's a quick rundown. <br>It is often regarded by many in the ai field that one of the most basic forms of artificial intelligence is using a state based architecture. In the end, it breaks down to being a bunch of if/then/else branches. They can easily be represented as flowcharts and are very easy to understand by most which makes it easy for non-technical people to help with the design of the ai. <br>I decided I'd like to make an implementation of the sample code he provides in C# (the article presents the code in c++). The sample code is a little miner dude ... he gets up in the morning, heads down to the mine to gather gold nuggets. When he gets thirsty, he heads out to the bar and buys a beer. When his pockets are full, he heads to the bank to deposit his gold. When he gets tired, he goes home and sleeps. And eventually, once he deems he has enough gold, he gits outta dodge! <br>On to the code ...</p> <p><a href="http://web.archive.org/web/20041204125618/http://www.codecube.net/demos/games/minergame.zip"><strike>Download Sample Project Files</strike></a></p> <h4>IState interface</h4> <p>The IState interface is how you implement the actual "intelligence". The idea is that an entity can only be in one state at any given time, so you can use this interface to dictate what happens when that state is entered, when to leave that state, and where to go.</p><pre>public interface IState
{
	void Enter(IEntity entity);
	void Execute(IEntity entity);
	void Exit(IEntity entity);
}</pre>
<h4>Entities</h4>
<p>Every entity that uses the state machine must implement the IEntity interface. This simply dictates that the entity must keep track of the current state, the previous state, and provide a mechanism for changing state. For the sake of reusing common code, I also implemented an EntityBase class which is a simple IEntity implementation. You can create your own, or subclass it if you need additional functionality.</p><pre>public interface IEntity
{
	IState CurrentState {get;set;}
	IState PreviousState {get;set;}
	void ChangeState(IState newState);
}&nbsp;&nbsp; public class EntityBase : IEntity
{
	private IState mCurrentState;
	private IState mPreviousState;&nbsp;&nbsp; #region IEntity Members&nbsp;&nbsp; public IState CurrentState
	{
		get
		{return mCurrentState;}
		set
		{mCurrentState = value;}
	}&nbsp;&nbsp; public IState PreviousState
	{
		get
		{return mPreviousState;}
		set
		{mPreviousState = value;}
	}&nbsp;&nbsp; public void ChangeState(IState newState)
	{
		if (CurrentState != null)
			CurrentState.Exit(this);&nbsp;&nbsp; PreviousState = CurrentState;
		CurrentState = newState;&nbsp;&nbsp; newState.Enter(this);
	}&nbsp;&nbsp; #endregion
}</pre>
<p>Now, if you go back and read the original article, you'll notice that his implementation didn't store the previous state. I added that property because I think it might make the state machine a bit more versatile if your code is able to know what state it was previously in, thus having the ability to change its behavior. Others say that's bad practice because they think that each state should have predictable behavior, and if you want different behavior, that should be another state. I'm still undecided about whether I agree with that ... </p>
<h4>Miner</h4>
<p>The miner class is going to be the concrete implementation of the IEntity interface. Notice how we define additional properties such as: Fatigue, Thirs, and GoldNuggets. As the state machine puts it through its paces, those properties will change and dictate the when states transition to another state.</p><pre>public class Miner : EntityBase
{
	public Miner()
	{}&nbsp;&nbsp; public int Fatigue = 0;
	public int Thirst = 0;
	public int GoldNuggets = 0;
	public int Savings;
}</pre>
<h4>Concrete State Implementations</h4>
<p>For the sake of saving space, I will only print one of the State classes, the first one. <a href="http://web.archive.org/web/20041204125618/http://www.codecube.net/demos/games/minergame.zip">download the sample project</a> to see the rest.</p><pre>	class EnterMineAndDigForNugget : IState
	{
		private EnterMineAndDigForNugget()
		{}

		private static EnterMineAndDigForNugget _instance;
		public static EnterMineAndDigForNugget Instance
		{
			get 
			{
				if (_instance == null)
				{
					_instance = new EnterMineAndDigForNugget();
				}
				return _instance;
			}
		}

		#region IState Members

		public void Enter(IEntity entity)
		{
			Console.WriteLine("Entering the mine");
		}

		public void Execute(IEntity entity)
		{
			Miner m = entity as Miner;
			Console.WriteLine("Picked Up a Nugget");
			m.GoldNuggets++;
			m.Thirst++;
			m.Fatigue++;

			if (m.GoldNuggets &gt;= 8)
			{
				m.ChangeState(VisitBankAndDepositGold.Instance);
				return;
			}

			if (m.Fatigue &gt;= 10)
			{
				m.ChangeState(GoHomeAndSleepTilRested.Instance);
				return;
			}
			
			if (m.Thirst &gt;= 6)
				m.ChangeState(QuenchThirst.Instance);

		}

		public void Exit(IEntity entity)
		{
			Console.WriteLine("Leaving the mine");
		}

	#endregion
}</pre>
<p>What will happen is that the app will create a loop and continue to execute the entity's current state (whatever that state may be). It is up to the state itself to decide when it is time to move to another state. That's what makes this such a powerful AI technique because you can easily change the state transition patterns and modify the entity's behavior. </p>
<p>You will also want to notice that the state class is implemented as a singleton. I did this because every time you want to switch states, you need an instance of the state class. The original implementation had me instantiating a new class every time ... I can imagine that this would be a performance hit in an actual game ... so by using the Singleton pattern, I ensure that there's only one state class at any given time.</p>
<h5>TypeSafe Enum Pattern</h5>
<p>I found this pattern about a year ago, and I love it. Here we see it <a href="http://web.archive.org/web/20041204125618/http://weblogs.asp.net/asmith/archive/2003/07/15/10080.aspx">implemented and described by Andy Smith</a>. In retrospect, I could have used this pattern to have a States class with instances of all the individual states. I think this would have looked a little cleaner ... but oh well.</p>
<h4>Output</h4>
<p>This is the generated output from the sample project:</p><pre>C:\Documents and Settings\jdmartinez\My Documents\testProjects\MinerGame\bin\Deb
ug&gt;MinerGame.exe
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Buyin' a beer (-1 gold)! Gulp Gulp Gulp Gulp Gulp Gulp  - Ahhh
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Depositing 8 Gold ... I now have 8 gold saved up
Home Sweet Home
ZZZZZZZZ'nother day, 'nother doller
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Buyin' a beer (-1 gold)! Gulp Gulp Gulp Gulp Gulp Gulp  - Ahhh
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Depositing 8 Gold ... I now have 16 gold saved up
Home Sweet Home
ZZZZZZZZ'nother day, 'nother doller
Entering the mine
Picked Up a Nugget
Leaving the mine
Buyin' a beer (-1 gold)! Gulp Gulp Gulp Gulp Gulp Gulp Gulp  - Ahhh
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Buyin' a beer (-1 gold)! Gulp Gulp Gulp Gulp Gulp Gulp  - Ahhh
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Depositing 8 Gold ... I now have 24 gold saved up
Home Sweet Home
ZZZZZZZZ'nother day, 'nother doller
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Buyin' a beer (-1 gold)! Gulp Gulp Gulp Gulp Gulp Gulp  - Ahhh
Entering the mine
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Picked Up a Nugget
Leaving the mine
Depositing 8 Gold ... I now have 32 gold saved up
YEEEEEHAAWWWWWWW ... headin' back east with 32 gold nuggets</pre>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>84</wp:post_id>
		<wp:post_date>2008-11-11 16:00:53</wp:post_date>
		<wp:post_date_gmt>2008-11-11 21:00:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>finite-state-machine</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:comment>
			<wp:comment_id>629</wp:comment_id>
			<wp:comment_author><![CDATA[Dave]]></wp:comment_author>
			<wp:comment_author_email>davtomas@yahoo.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.181.213.68</wp:comment_author_IP>
			<wp:comment_date>2009-03-03 05:36:22</wp:comment_date>
			<wp:comment_date_gmt>2009-03-03 10:36:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The link to the minergame.zip is dead, could you please update to send me the link. Thanks.
Dave]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>630</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2009-03-03 10:01:30</wp:comment_date>
			<wp:comment_date_gmt>2009-03-03 15:01:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unfortunately, I grabbed this article from the wayback machine. it was a very old version of this blog, and I no longer have that file.  I apologize for the inconvenience, but most of the core code is posted in the article anyways (interfaces and base classes) ... it should be pretty easy to extract those and adapt them for your own needs :-)

as always, let me know if there are any specific questions you have and I'd be glad to answer them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>583</wp:comment_id>
			<wp:comment_author><![CDATA[Matthew]]></wp:comment_author>
			<wp:comment_author_email>Tigernado@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.116.185.130</wp:comment_author_IP>
			<wp:comment_date>2008-11-11 16:59:15</wp:comment_date>
			<wp:comment_date_gmt>2008-11-11 21:59:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have his book. I implemented some of his stuff in C# too, like the State Machine systems. I think I made State an abstract class for some reason though. Makes  sense as an interface.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Handy LinQ Extension Methods</title>
		<link>http://codecube.net/2008/12/handy-linq-extension-methods/</link>
		<pubDate>Fri, 05 Dec 2008 16:34:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=88</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Isn't it annoying how an IEnumerable&lt;SomeClassThatImplementsISomeInterface&gt;, is <strong>not</strong> castable to IEnumerable&lt;ISomeInterface&gt; ?&nbsp; The reasoning for this makes sense once you get into it ... because of generics, those two are functionally different classes.</p> <p>So, I made a handy-dandy extension method that does the job for me (at the cost of a few more allocations on the heap)</p> <blockquote> <p>public static IEnumerable&lt;KTo&gt; Convert&lt;TFrom, KTo&gt;(this IEnumerable&lt;TFrom&gt; enumerable)<br>&nbsp;&nbsp;&nbsp; where TFrom : KTo<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; return enumerable.Select((TFrom s) =&gt; (KTo)s);<br>}</p></blockquote> <p>The usage is very simple: <em>return list.Convert&lt;SomeClassThatImplementsISomeInterface, ISomeInterface&gt;();</em></p> <p>If you need to do this with an Entity Framework query, where your entities are partial classed to implement an interface ... you need to use this version though:</p> <blockquote> <p>public static IEnumerable&lt;KTo&gt; ConvertToList&lt;TFrom, KTo&gt;(this IEnumerable&lt;TFrom&gt; enumerable)<br>&nbsp;&nbsp;&nbsp; where TFrom : KTo<br>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp; return enumerable.ToList().Select((TFrom s) =&gt; (KTo)s);<br>}</p></blockquote> <p>note the .ToList() that's injected in there ... the reason for this is that the enumerable needs to be fully enumerated so that the EF executes the query and moves all the results into memory, before doing the cast in the select.</p> <p>hope that helps :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2008-12-05 11:34:33</wp:post_date>
		<wp:post_date_gmt>2008-12-05 16:34:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>handy-linq-extension-methods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>619</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2008-12-10 09:19:39</wp:comment_date>
			<wp:comment_date_gmt>2008-12-10 14:19:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to follow up on this ... George also mentioned via IM that there's already an existing method called Cast which lets you cast to an existing type ... oh well, I had fun writing the code :-P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>627</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>160.254.108.24</wp:comment_author_IP>
			<wp:comment_date>2009-02-27 15:24:47</wp:comment_date>
			<wp:comment_date_gmt>2009-02-27 20:24:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is the problem with Microsoft documentation - it's hard to find anything! I hope I get around to build that documentation site that makes finding extension methods easier!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>616</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>160.254.108.24</wp:comment_author_IP>
			<wp:comment_date>2008-12-05 14:47:37</wp:comment_date>
			<wp:comment_date_gmt>2008-12-05 19:47:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This won't be necessary with c# 4.0: 

http://blogs.msdn.com/charlie/archive/2008/10/28/linq-farm-covariance-and-contravariance-in-visual-studio-2010.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>New LateBinder</title>
		<link>http://codecube.net/2008/12/new-latebinder/</link>
		<pubDate>Thu, 11 Dec 2008 14:34:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=89</guid>
		<description></description>
		<contentencoded><![CDATA[A long time ago, I posted a class called LateBinder to this site (the  previous blog software).  I went on to use it rather prodigiously at work, and  it also turned out to be a boon to others who visited this site (for example,  Victor of <a href="http://www.flatredball.com/">FlatRedBall</a> fame).   Unfortunately, it did have a few limitations; namely that it didn't support  getting/setting static fields and properties, and it also didn't work on the  xbox360 and zune because the System.Reflection.Emit namespace wasn't  available.

He asked me the other day the feasibility of supporting the static  properties, and after a few days of hacking about, I've added that, and then  some :-)

The version (below) not only supports static fields and properties, but it  also supports the xbox360 and zune platforms.  Be warned though, I had to fall  back on using simple reflection on the non-windows platforms ... so the perf  will obviously be slightly slower. 

I am fairly proud of how I was able to refactor the code to encapsulate the  cross-platform differences.  If you look at the LateBindFactory abstract class,  it uses a factory method to instantiate the platform-specific version.  This  way, I was able to keep the pre-processor directives to a minimum, using them  only where I needed ... and also keeping the same public API for both  platforms.

Let me know if this is useful for you  :-)
<blockquote>#region Using Statements

#if !XBOX360 &amp;&amp; !ZUNE
#define USE_EMIT
#endif

using System;
using System.Collections.Generic;
using  System.Reflection;
#if USE_EMIT
using System.Reflection.Emit;
#endif

#endregion

namespace Scurvy
{
    /// &lt;summary&gt;
    /// Provides a simple  interface to late bind a class.
    /// &lt;/summary&gt;
    ///  &lt;remarks&gt;The first time you attempt to get or set a property, it will  dynamically generate the get and/or set
    /// methods and cache them  internally.  Subsequent gets uses the dynamic methods without having to query  the type's
    /// meta data.&lt;/remarks&gt;
    public sealed class  LateBinder&lt;T&gt;
    {
        #region Fields

        private static LateBindFactory factory =  LateBindFactory.Create();
        private BindingFlags propertyFlags =  BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static;
         private Type mType;
        private Dictionary&lt;string, GetHandler&gt;  mPropertyGet;
        private Dictionary&lt;string, SetHandler&gt;  mPropertySet;

        private Dictionary&lt;Type, List&lt;string&gt;&gt; mFields;

        private T mTarget = default(T);

        private static LateBinder&lt;T&gt; _instance;

        #endregion

        #region Properties

        public static LateBinder&lt;T&gt; Instance
         {
            get { return _instance; }
        }

        /// &lt;summary&gt;
        /// The instance that this binder  operates on by default
        /// &lt;/summary&gt;
        ///  &lt;remarks&gt;This can be overridden by the caller explicitly passing a target  to the indexer&lt;/remarks&gt;
        public T Target
         {
            get { return mTarget; }
            set { mTarget = value;  }
        }

        /// &lt;summary&gt;
        /// Gets or Sets the supplied property  on the contained &lt;seealso cref="Instance"/&gt;
        ///  &lt;/summary&gt;
        /// &lt;exception  cref="InvalidOperationException"&gt;Throws if the contained Instance is  null.&lt;/exception&gt;
        public object this[string  propertyName]
        {
            get
             {
                //ValidateInstance();
                return  this[mTarget, propertyName];
            }
            set
             {
                //ValidateInstance();
                this[mTarget,  propertyName] = value;
            }
        }

        /// &lt;summary&gt;
        /// Gets or Sets the supplied property  on the supplied target
        /// &lt;/summary&gt;
        public object  this[T target, string propertyName]
        {
             get
            {
                ValidateGetter(ref  propertyName);
                return  mPropertyGet[propertyName](target);
            }
             set
            {
                ValidateSetter(ref  propertyName);
                mPropertySet[propertyName](target,  value);
            }
        }

        #endregion

        #region Methods

        #region Constructors

        static LateBinder()
        {
            _instance = new  LateBinder&lt;T&gt;();
        }

        public LateBinder(T instance)
            : this()
         {
            mTarget = instance;
        }

        public LateBinder()
        {
            mType =  typeof(T);
            mPropertyGet = new Dictionary&lt;string,  GetHandler&gt;();
            mPropertySet = new Dictionary&lt;string,  SetHandler&gt;();

            mFields = new Dictionary&lt;Type,  List&lt;string&gt;&gt;();
        }
        #endregion

        #endregion

        #region Public Accessors

        /// &lt;summary&gt;
        /// Sets the supplied property on the  supplied target
        /// &lt;/summary&gt;
        /// &lt;typeparam  name="K"&gt;the type of the value&lt;/typeparam&gt;
        public void  SetProperty&lt;K&gt;(T target, string propertyName, K value)
        {
#if  !USE_EMIT

            // find out if this is a property or field
            Type  type = typeof(T);

            PropertyInfo propertyInfo = type.GetProperty(propertyName);

            if (propertyInfo != null)
            {
                 propertyInfo.SetValue(target, value, null);
            }

            else
            {
                FieldInfo fieldInfo =  type.GetField(propertyName);

                if (fieldInfo != null)
                 {
                    fieldInfo.SetValue(target, value);
                 }
                else
                {
                    throw new  ArgumentException("Cannot find property or field with the name " +  propertyName);
                }

            }

#else
            ValidateSetter(ref propertyName);

            if (mPropertySet.ContainsKey(propertyName))
             {
                mPropertySet[propertyName](target, value);
             }
            else
            {
                // This is probably  not a property so see if it is a field.

                FieldInfo fieldInfo = mType.GetField(propertyName);

                if (fieldInfo == null)
                 {
                    string errorMessage =
                         "LateBinder could not find a field or property by the name of " + propertyName  +
                        "Check the name of the property to verify if it is  correct.";
                    throw new  System.MemberAccessException(errorMessage);
                 }
                else
                {
                    object[]  args = { value };
                    mType.InvokeMember(propertyName,  BindingFlags.SetField, null, target, args);
                }
             }
#endif
        }

        public object GetField(T target, ref string propertyName)
         {
            Binder binder = null;
            object[] args = null;

            return mType.InvokeMember(
                propertyName,
               BindingFlags.GetField,
                binder,
               target,
               args
                );
        }

        /// &lt;summary&gt;
        /// Gets  the supplied property on the  supplied target
        /// &lt;/summary&gt;
        /// &lt;typeparam  name="K"&gt;The type of the property being returned&lt;/typeparam&gt;
         public K GetProperty&lt;K&gt;(T target, ref string propertyName)
         {
            ValidateGetter(ref propertyName);
            return  (K)mPropertyGet[propertyName](target);
        }

        public object GetProperty(T target, ref string  propertyName)
        {
            ValidateGetter(ref  propertyName);
            return  mPropertyGet[propertyName](target);
        }

        #endregion

        #region Private Helpers

        private void ValidateInstance()
        {
            if  (mTarget == null)
            {
                throw new  InvalidOperationException("Instance property must not be null");
             }
        }

        private void ValidateSetter(ref string propertyName)
         {
            if (!mPropertySet.ContainsKey(propertyName))
             {
                PropertyInfo propertyInfo = mType.GetProperty(propertyName,  this.propertyFlags);

                if (propertyInfo != null)
                 {
                    mPropertySet.Add(propertyName,  factory.CreateSetHandler(mType, propertyInfo));
                 }
            }
        }

        private void ValidateGetter(ref string propertyName)
         {
            if (!mPropertyGet.ContainsKey(propertyName))
             {
                mPropertyGet.Add(propertyName,  factory.CreateGetHandler(mType,  mType.GetProperty(propertyName)));
            }
        }

        #endregion

        #region Contained Classes

        internal delegate object GetHandler(object source);
         internal delegate void SetHandler(object source, object value);
         internal delegate object InstantiateObjectHandler();

        internal abstract class LateBindFactory
        {
             public LateBindFactory()
            {
            }

            public static LateBindFactory Create()
            {
#if  USE_EMIT
                return new  DynamicMethodFactory();
#else
                return new  ReflectionFactory();
#endif
            }

            public abstract InstantiateObjectHandler  CreateInstantiateObjectHandler(Type type);
            public abstract  GetHandler CreateGetHandler(Type type, PropertyInfo  propertyInfo);
            public abstract GetHandler CreateGetHandler(Type  type, FieldInfo fieldInfo);
            public abstract SetHandler  CreateSetHandler(Type type, PropertyInfo propertyInfo);
            public  abstract SetHandler CreateSetHandler(Type type, FieldInfo fieldInfo);
         }

#if USE_EMIT
        internal sealed class DynamicMethodFactory :  LateBindFactory
        {
            public  DynamicMethodFactory()
            {
            }

            #region Public Methods

            public override InstantiateObjectHandler  CreateInstantiateObjectHandler(Type type)
            {
                 ConstructorInfo constructorInfo = type.GetConstructor(BindingFlags.Public |  BindingFlags.NonPublic | BindingFlags.Instance, null, new Type[0],  null);
                if (constructorInfo == null)
                 {
                    throw new ApplicationException(string.Format("The type  {0} must declare an empty constructor (the constructor may be private, internal,  protected, protected internal, or public).", type));
                }

                DynamicMethod dynamicMethod = new  DynamicMethod("InstantiateObject", MethodAttributes.Static |  MethodAttributes.Public, CallingConventions.Standard, typeof(object), null,  type, true);
                ILGenerator generator =  dynamicMethod.GetILGenerator();
                 generator.Emit(OpCodes.Newobj, constructorInfo);
                 generator.Emit(OpCodes.Ret);
                return  (InstantiateObjectHandler)dynamicMethod.CreateDelegate(typeof(InstantiateObjectHandler));
             }

            public override GetHandler CreateGetHandler(Type type,  PropertyInfo propertyInfo)
            {
                MethodInfo  getMethodInfo = propertyInfo.GetGetMethod(true);

                DynamicMethod dynamicGet =  CreateGetDynamicMethod(type);
                ILGenerator getGenerator =  dynamicGet.GetILGenerator();

                if (!getMethodInfo.IsStatic)
                 {
                    getGenerator.Emit(OpCodes.Ldarg_0);
                 }
                getGenerator.Emit(OpCodes.Call,  getMethodInfo);
                BoxIfNeeded(getMethodInfo.ReturnType,  getGenerator);
                getGenerator.Emit(OpCodes.Ret);

                return  (GetHandler)dynamicGet.CreateDelegate(typeof(GetHandler));
            }

            public override GetHandler CreateGetHandler(Type type, FieldInfo  fieldInfo)
            {

                DynamicMethod dynamicGet =  CreateGetDynamicMethod(type);
                ILGenerator getGenerator =  dynamicGet.GetILGenerator();

                if (!fieldInfo.IsStatic)
                 {
                    getGenerator.Emit(OpCodes.Ldarg_0);
                 }
                getGenerator.Emit(OpCodes.Ldfld,  fieldInfo);
                BoxIfNeeded(fieldInfo.FieldType,  getGenerator);
                getGenerator.Emit(OpCodes.Ret);

                return  (GetHandler)dynamicGet.CreateDelegate(typeof(GetHandler));
            }

            public override SetHandler CreateSetHandler(Type type,  PropertyInfo propertyInfo)
            {
                MethodInfo  setMethodInfo = propertyInfo.GetSetMethod(true);

                DynamicMethod dynamicSet =  CreateSetDynamicMethod(type);
                ILGenerator setGenerator =  dynamicSet.GetILGenerator();

                if (!setMethodInfo.IsStatic)
                 {
                    setGenerator.Emit(OpCodes.Ldarg_0);
                 }
                setGenerator.Emit(OpCodes.Ldarg_1);
                 UnboxIfNeeded(setMethodInfo.GetParameters()[0].ParameterType,  setGenerator);
                setGenerator.Emit(OpCodes.Call,  setMethodInfo);
                setGenerator.Emit(OpCodes.Ret);

                return  (SetHandler)dynamicSet.CreateDelegate(typeof(SetHandler));
            }

            public override SetHandler CreateSetHandler(Type type, FieldInfo  fieldInfo)
            {
                DynamicMethod dynamicSet =  CreateSetDynamicMethod(type);
                ILGenerator setGenerator =  dynamicSet.GetILGenerator();

                if (!fieldInfo.IsStatic)
                 {
                    setGenerator.Emit(OpCodes.Ldarg_0);
                 }
                setGenerator.Emit(OpCodes.Ldarg_1);
                 UnboxIfNeeded(fieldInfo.FieldType, setGenerator);

                if (!fieldInfo.IsStatic)
                 {
                    setGenerator.Emit(OpCodes.Stfld,  fieldInfo);
                }
                else
                 {
                    setGenerator.Emit(OpCodes.Stsfld,  fieldInfo);
                }

                setGenerator.Emit(OpCodes.Ret);

                return  (SetHandler)dynamicSet.CreateDelegate(typeof(SetHandler));
            }

            #endregion

            #region Private Methods

            private static DynamicMethod CreateGetDynamicMethod(Type  type)
            {
                return new DynamicMethod("DynamicGet",  typeof(object), new Type[] { typeof(object) }, type, true);
            }

            // CreateSetDynamicMethod
            private static  DynamicMethod CreateSetDynamicMethod(Type type)
             {
                return new DynamicMethod("DynamicSet", typeof(void), new  Type[] { typeof(object), typeof(object) }, type, true);
            }

            // BoxIfNeeded
            private static void  BoxIfNeeded(Type type, ILGenerator generator)
             {
                if (type.IsValueType)
                 {
                    generator.Emit(OpCodes.Box, type);
                 }
            }

            // UnboxIfNeeded
            private static void  UnboxIfNeeded(Type type, ILGenerator generator)
             {
                if (type.IsValueType)
                 {
                    generator.Emit(OpCodes.Unbox_Any,  type);
                }
            }

            #endregion
        }
#endif

#if !USE_EMIT
        internal sealed class ReflectionFactory :  LateBindFactory
        {
            public  ReflectionFactory()
            {
            }

            public override InstantiateObjectHandler  CreateInstantiateObjectHandler(Type type)
            {
                 return delegate()
                {
                    return  Activator.CreateInstance(type);
                };
            }

            public override GetHandler CreateGetHandler(Type type,  PropertyInfo propertyInfo)
            {
                MethodInfo method  = propertyInfo.GetGetMethod(true);

                return delegate(object source)
                 {
                    return method.Invoke(method.IsStatic ? null : source,  null);
                };
            }

            public override GetHandler CreateGetHandler(Type type, FieldInfo  fieldInfo)
            {
                return delegate(object  source)
                {
                    return  fieldInfo.GetValue(fieldInfo.IsStatic ? null : source);
                 };
            }

            public override SetHandler CreateSetHandler(Type type,  PropertyInfo propertyInfo)
            {
                MethodInfo method  = propertyInfo.GetSetMethod();

                return delegate(object source, object  value)
                {
                    method.Invoke(method.IsStatic  ? null : source, new object[] { value });
                };
            }

            public override SetHandler CreateSetHandler(Type type, FieldInfo  fieldInfo)
            {
                return delegate(object source,  object value)
                {
                     fieldInfo.SetValue(fieldInfo.IsStatic ? null : source,  value);
                };
            }
        }
#endif
         #endregion
    }
}</blockquote>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2008-12-11 09:34:39</wp:post_date>
		<wp:post_date_gmt>2008-12-11 14:34:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>new-latebinder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using the LateBinder</title>
		<link>http://codecube.net/2008/12/using-the-latebinder/</link>
		<pubDate>Thu, 11 Dec 2008 18:23:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=93</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Heh, I seemed to have not realized that I didn't include any usage information on the <a href="http://codecube.net/?p=89">LateBinder</a> in the last post.&nbsp; So here is the how and why you'd want to use this class.</p> <p>Say you have a need to dynamically get or set the property of some class using the string name of the property.&nbsp; Normally, the answer would be to use reflection, get the PropertyInfo, extract the MethodInfo of the getter or setter, and then invoke that method using the reflection API.&nbsp; Hardly very usable ... and if you're not careful, you will end up paying the reflection cost everytime because you have to keep looking up the PropertyInfo and all that.</p> <p>Enter the LateBinder&lt;T&gt; ... using this class, you can do:</p> <blockquote> <p>MyClass mcInstance = new MyClass();</p> <p>LateBinder&lt;MyClass&gt; binder = LateBinder&lt;MyClass&gt;.Instance;<br>binder[mcInstance, "Name"] = "my name";<br>string name = (string)binder[mcInstance, "Name"];</p></blockquote> <p>The late binder (on windows) uses the System.Reflection.Emit API to generate a <a href="http://msdn.microsoft.com/en-us/library/system.reflection.emit.dynamicmethod.aspx">DynamicMethod</a>, which is much faster to call than the reflection invoke because it's pre-compiled using custom built IL instructions.&nbsp; It also caches them in the late binder instance so that it only has to be compiled once ... and furthermore, if you use the singleton .Instance method, you only have to do the compilation once per application run since it keeps the data around in a static variable.</p> <p>Beneath the hood, the original version of the late binder was using <a href="http://www.codeproject.com/useritems/Dynamic_Code_Generation.asp">this class</a>.&nbsp; But I had to change the design of the class to support the cross platform aspect of it and to add in the static support.&nbsp; It was pretty fun, I ended up using reflector to decompile some sample code I wrote in a console app so I could see what IL instructions I had to use to get/set the statics ... so with this version of LateBinder, it supports getting and setting both properties and fields ... regardless of whether they are instance or static fields/properties.</p> <p>Now, on XBox and Zune, the story changes a bit because System.Reflection.Emit does not exist.&nbsp; So, in this new version I posted, it falls back to simply using reflection.&nbsp; However, it does keep the propertyinfo in that static cache, so at least you won't have to pay the penalty of looking for it every time.</p> <p>So to get back to the original question on usage (ie. when/why would I want to use it) ... it probably wouldn't be a good idea to use this in a tight loop in runtime code.&nbsp; However, for certain tools and custom serialization code ... it could certainly be very useful.&nbsp; For example, you can relatively easily write code using this that will transfer property values from one class to another ... assuming the property names are the same.&nbsp; The list goes on and on as to how this is useful.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2008-12-11 13:23:16</wp:post_date>
		<wp:post_date_gmt>2008-12-11 18:23:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>using-the-latebinder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>620</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2008-12-11 13:28:57</wp:comment_date>
			<wp:comment_date_gmt>2008-12-11 18:28:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For any naysayers, yes, I know this probably won't be needed when C# 4.0 comes out ... but I wrote the original version sometime last year if not earlier.  So there :-P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>743</wp:comment_id>
			<wp:comment_author><![CDATA[Levi]]></wp:comment_author>
			<wp:comment_author_email>billyjack.drain@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.44.183.2</wp:comment_author_IP>
			<wp:comment_date>2009-06-30 13:33:29</wp:comment_date>
			<wp:comment_date_gmt>2009-06-30 18:33:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For properties, there is a way to get/set and minimize reflection.
getters &amp; setters are just methods, which means you can build delegates to them.  If you used unbound or open instance delegates, they can be cached between calls.  You'd only have the reflection call the first time.  once the delegate was cached, you should similar performance to a dynamic method.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>It&#039;s almost that time of year</title>
		<link>http://codecube.net/2008/12/its-almost-that-time-of-year/</link>
		<pubDate>Wed, 24 Dec 2008 18:39:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=94</guid>
		<description></description>
		<contentencoded><![CDATA[<p>More often than not, I hear about people who think so low of their ability to keep new years resolutions, that they refuse to make them.&nbsp; However, I think that a periodic reflection of your life, your goals, and your priorities is important.&nbsp; And thus, I will be making my list, and checking it twice next week :-)</p> <p>Merry Christmas to everyone</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2008-12-24 13:39:15</wp:post_date>
		<wp:post_date_gmt>2008-12-24 18:39:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>its-almost-that-time-of-year</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Scurvy.Media Now Supports XNA GS 3.0</title>
		<link>http://codecube.net/2009/01/scurvymedia-now-supports-xna-gs-30/</link>
		<pubDate>Wed, 07 Jan 2009 04:11:26 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=95</guid>
		<description></description>
		<contentencoded><![CDATA[<p>well, it was a long time coming ... my apologies to those who were waiting for this :-) but I finally got around to releasing a version of Scurvy.Media that was compiled against XNA 3.0</p> <p>You can find the latest download here: <a href="http://www.codeplex.com/ScurvyMedia">http://www.codeplex.com/ScurvyMedia</a></p> <p>There aren't any new features ... the reason this got caught up in the first place is because I was trying to have zune support in before I released it and then I got busy.&nbsp; Oh well, c'est la vie ... I still have to work out the specific surface format and data format that will work on the zune.&nbsp; I think I'm close ... </p> <p>Please let me know if you encounter any issues with this version :-) thanks!</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>95</wp:post_id>
		<wp:post_date>2009-01-06 23:11:26</wp:post_date>
		<wp:post_date_gmt>2009-01-07 04:11:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvymedia-now-supports-xna-gs-30</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>672</wp:comment_id>
			<wp:comment_author><![CDATA[Damian]]></wp:comment_author>
			<wp:comment_author_email>beata_damian@sympatico.ca</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.158.47.167</wp:comment_author_IP>
			<wp:comment_date>2009-04-27 19:29:47</wp:comment_date>
			<wp:comment_date_gmt>2009-04-28 00:29:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get this Error when I debug in XNA 3.0, i loaded the Scurvy.Media and added it as a reverence but when i put it in to the line of code like this:
 ContentManager content = new VideoContentManager(Services);
It errors with this message:
Error	2	An object reference is required for the non-static field, method, or property 'Microsoft.Xna.Framework.Game.Services.get'	C:\Users\Damian\Desktop\Paintball\Paintball\GameScreen.cs	25	61	Paintball]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ONETUG XNA Presentation Files</title>
		<link>http://codecube.net/2009/02/onetug-xna-presentation-files/</link>
		<pubDate>Wed, 04 Feb 2009 05:06:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=96</guid>
		<description></description>
		<contentencoded><![CDATA[<p>As promised, here are the presentation files from the ONETUG presentation the other night. </p> <p><a href="http://codecube.net/bloguploads/ONETUG_XNA_20090129.zip">http://codecube.net/bloguploads/ONETUG_XNA_20090129.zip</a></p> <p>The .zip contains both the powerpoint slides that I used in the presentation, and the two sample projects I developed during the presentation.</p> <ul> <li>TwoD</li> <ul> <li>This sample shows some basic 2D techniques for dealing with sprites on the screen.</li> <li>Simple velocity calculations for locomotion (Position += Velocity)</li> <li>Orbiting one sprite around another</li> <li>Launching projectiles at a steady pace.</li> <li>Sprite helper class that makes it easy to position sprites around the world.</li> <li>I didn't use it in the sample, but I also have a ResourcePool datatype that makes it easy to reuse entities without having to reallocate new memory.&nbsp; This is actually a really useful technique, I'd like to write about it in a separate blog post.</li></ul> <li>ThreeD</li> <ul> <li>First Person Shooter style Camera.&nbsp; It's a GameComponent, so you just have to add it to the Components collection to use it.</li> <li>Used the QuadDrawer class from the <a href="http://creators.xna.com/en-US/sample/3daudio">3D Audio</a> sample.&nbsp; I added a few useful overloads and methods to let you draw billboarded sprites and the floor.</li> <li>ModelSprite that makes drawing sprites and positioning it about the world easy.</li> <li>Used the Sky box processor from the <a href="http://creators.xna.com/en-US/sample/generatedgeometry">Generated Geometry</a> sample.</li> <li>All the helper classes (QuadDrawer, ModelSprite, and Sky) all know the camera, so they can make use of its view and projection matrix.</li></ul></ul> <p>Thanks to everyone who showed up :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2009-02-04 00:06:09</wp:post_date>
		<wp:post_date_gmt>2009-02-04 05:06:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>onetug-xna-presentation-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Converting a Lifecam VX-5000 to see IR</title>
		<link>http://codecube.net/2009/02/converting-a-lifecam-vx-5000-to-see-ir/</link>
		<pubDate>Sun, 22 Feb 2009 17:07:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/02/converting-a-lifecam-vx-5000-to-see-ir/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So I've recently become interested in building a multitouch table such as the one seen <a href="http://www.youtube.com/watch?v=UcKqyn-gUbY">here</a>.&nbsp; All of the techniques for building them involve having a webcam that can see infrared, so I figured that was a first step.</p> <p>The guys over at NUI Group have a great writeup and list of webcams that are easily modifiable for this purpose: <a href="http://wiki.nuigroup.com/Cameras">http://wiki.nuigroup.com/Cameras</a></p> <p>Despite that list, I ended up getting a Microsoft LifeCam VX-5000.&nbsp; The first thing I did to test was put together the simple test rig described here (<a href="http://ssandler.wordpress.com/MTmini/">MT Mini</a>).&nbsp; Very ingenious to simply invert the webcam image so it looks like it's just IR light.&nbsp; That worked really well.</p> <p>So I set about modifying the camera.&nbsp; Since I couldn't really find anything online about modifying this model, I decided to post the steps in case it helps anyone else.&nbsp; Sadly, I neglected to take pictures during the process, so you'll have to rely on my vivid descriptions :-P</p> <ol> <li>Remove the silver ring on the front of the camera.&nbsp; It's stuck on using a small amount of adhesive so you just kind of have to pry it off.</li> <li>Unscrew the two screws keeping the surrounding lens cover and remove it.</li> <li>Unscrew the 3 screws and remove the entire front face.&nbsp; The live messenger button on top will also fall off once you remove it.</li> <li>Unscrew the lens, it had a small amount of some sort of adhesive, which I just had to scratch off with a knife.</li> <li>Remove the screws from the circuit board and remove it from the bottom casing.</li> <li>Unscrew the additional lens housing from the bottom of the board.&nbsp; This is what's covering the IR filter.</li> <li>Once you remove that, you'll have to remove the IR filter (it looks like it reflects redish light).&nbsp; It was glued on so I ended up having to kind of crack the ir filter to remove it piece by piece.</li> <li>Install the IR-Pass filter ... of course, this is where everyone seems to hack it, since lots of guides online tend to suggest using exposed film negative.&nbsp; I cut out two pieces and put them in place of the IR filter.</li> <li>With that done, rebuild everything you've just taken apart until the camera is put back together.</li></ol> <p>I used the TBeta from NUI Group for testing: <a href="http://tbeta.nuigroup.com/">http://tbeta.nuigroup.com/</a></p> <p>And it worked pretty well ... I was able to get a remote control and use it to track the IR LED that lights up when you press a button.&nbsp; The next step will be to start building the <a href="http://en.wikipedia.org/wiki/Total_internal_reflection#Frustrated_total_internal_reflection">FTIR</a> surface.&nbsp; Stay tuned :-P</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2009-02-22 12:07:07</wp:post_date>
		<wp:post_date_gmt>2009-02-22 17:07:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>converting-a-lifecam-vx-5000-to-see-ir</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>669</wp:comment_id>
			<wp:comment_author><![CDATA[MRComment]]></wp:comment_author>
			<wp:comment_author_email>NTT_PUS@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.122.183.176</wp:comment_author_IP>
			<wp:comment_date>2009-04-26 05:36:36</wp:comment_date>
			<wp:comment_date_gmt>2009-04-26 10:36:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think that quick cam pro 9000 is the best choice today. You can compare it with other webcams at <a href="http://www.coolcheapest.com/Webcams/194--Logitech_QuickCam_Pro_9000_Webcam.aspx" rel="nofollow">http://www.coolcheapest.com/Webcams/194--Logitech_QuickCam_Pro_9000_Webcam.aspx</a> or find other webcams at <a href="http://www.coolcheapest.com/webcams.aspx" rel="nofollow">http://www.coolcheapest.com/webcams.aspx</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>918</wp:comment_id>
			<wp:comment_author><![CDATA[Shaun Husain]]></wp:comment_author>
			<wp:comment_author_email>shaun.husain@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.shaunhusain.com</wp:comment_author_url>
			<wp:comment_author_IP>67.163.30.6</wp:comment_author_IP>
			<wp:comment_date>2010-02-20 23:37:27</wp:comment_date>
			<wp:comment_date_gmt>2010-02-21 04:37:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
Cool to hear someone else is going down the same path right now, I've got a lifecam followed the instructions here: http://ghonis2.ho8.com/lifecam/lifecam1.html to get it all apart good pictures and whatnot too.  I've got my surface put together a 2x3 foot piece of endlighten acrylic with all four sides lined with LEDs one every inch.  I also got a filter from knight optical (set me back 100 bucks though) passes 940nm through at 50% my LEDs emit 940nm according to the sticker and the specs online (LiteOn LEDs I ordered from Ebay .06 cents a piece).  I plan to do a full write up once I have things working well just at the final steps, good luck.
Shaun Husain]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>InstantRails: First Impression</title>
		<link>http://codecube.net/2009/02/instantrails-first-impression/</link>
		<pubDate>Thu, 26 Feb 2009 18:25:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/02/instantrails-first-impression/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So on a lark, I installed <a href="http://instantrails.rubyforge.org">InstantRails</a> last night to see what all the hubbub was about.&nbsp; I grabbed the latest (v2.0) and set to following some getting started steps from a book.&nbsp; </p> <p>Unfortunately, it seems that things aren't quite as easy as just downloading and getting started.&nbsp; Just trying to start up a sample/demo site responded with a bunch of errors ... so I ended up having to do a bunch of updates to the environment.&nbsp; These are the commands I had to run to get to a point that I could run "rails demo"</p> <blockquote> <p>gem update rails --include-depencies<br>gem install activerecord<br>gem install rake<br>gem install actionpack<br>gem install actionmailer<br>gem install activeresource<br>gem update --system</p></blockquote> <p>I mean, it was ultimately not too bad, but at the same time, not a great first impression.&nbsp; So far, lots of the same concepts that I've gotten used to in ASP.NET MVC seem like they found their roots in RoR ... so it's good to see them in their original context.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2009-02-26 13:25:19</wp:post_date>
		<wp:post_date_gmt>2009-02-26 18:25:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>instantrails-first-impression</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:comment>
			<wp:comment_id>674</wp:comment_id>
			<wp:comment_author><![CDATA[Dan]]></wp:comment_author>
			<wp:comment_author_email>neumadr@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.6.49.70</wp:comment_author_IP>
			<wp:comment_date>2009-04-29 13:46:04</wp:comment_date>
			<wp:comment_date_gmt>2009-04-29 18:46:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm sitting here following the Agile Web Dev for Rails book, updated Rails like they said, and ran into errors after even trying to check "rails -v" and using "rake".

ended up just running "gem update" and updating all the gems. seems to work now, but wish i knew about just those gems before i sat here an hour on the slow school connection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MapReduce in C# using LINQ</title>
		<link>http://codecube.net/2009/02/mapreduce-in-c-using-linq/</link>
		<pubDate>Fri, 27 Feb 2009 06:00:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/02/mapreduce-in-c-using-linq/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I recently remembered reading this article by Dare Obasanjo (<a href="http://www.25hoursaday.com/weblog/CommentView.aspx?guid=3D5755BF-43CF-4D47-A7EC-B60F6B536702">Functional Programming in C# 3.0: How Map/Reduce/Filter can Rock your World</a>) a long while ago, which was partly a response to Joel Spolsky's article (<a href="http://www.joelonsoftware.com/items/2006/08/01.html">Can Your Programming Language Do This</a>).&nbsp; In that article, Dare maps the map/reduce/filter functions to the following Linq equivalents:</p> <ul> <li>map -&gt; Enumerable.Select  <li>reduce -&gt; Enumerable.Aggregate  <li>filter -&gt; Enumerable.Where</li></ul> <p>At the time, I hadn't really had a business need to play with Linq aside from casual curiosity ... all of the projects at work were using other techniques for data access.&nbsp; But more recently, we've been using linq more and more, and I experimented with how a rewrite of a feature might look if it had been written using a functional programming style with LINQ.</p> <p>My experience with that reminded me of something I had read even longer ago, Google's famous MapReduce paper (<a href="http://labs.google.com/papers/mapreduce.html">MapReduce: Simplified Data Processing on Large Clusters</a>). Now, most of that paper deals with how they distribute the load across a large cluster of computers.&nbsp; But near the very beginning, they have some small examples of the types of problems that could easily be solved by mapreduce, and even a sample pseudocode implementation of one of those programs.</p> <blockquote><pre>map(String key, String value):
    // key: document name
    // value: document contents
    for each word w in value:
        EmitIntermediate(w, "1");

reduce(String key, Iterator values):
    // key: a word
    // values: a list of counts
    int result = 0;
    for each v in values:
        result += ParseInt(v);
    Emit(AsString(result));</pre></blockquote>
<p>Note the structure of the various inputs and outputs ... in particular, the output of map (which serves as the input to reduce).&nbsp; It's a key along with an iterator of values that matched that key.&nbsp; That sounds <strong>exactly</strong> like what GroupBy does.&nbsp; Check out the description from <a href="http://msdn.microsoft.com/en-us/library/bb308959.aspx">this article</a>:</p>
<blockquote></blockquote>
<blockquote>
<p>The standard query operators also include the GroupBy operator, which <strong>imposes a partitioning over a sequence of values based on a key extraction function.</strong></p></blockquote>
<p>Using linq, I can implement the mapreduce program described above:</p>
<blockquote><pre>var wordOccurrences = words
                .GroupBy(w =&gt; w)
                .Select(intermediate =&gt; new
                {
                    Word = intermediate.Key,
                    Frequency = intermediate.Sum(w =&gt; 1)
                })
                .Where(w =&gt; w.Frequency &gt; 10)
                .OrderBy(w =&gt; w.Frequency);</pre></blockquote>
<p>as you can see ... based on google's definition of MapReduce, I think that Dare was incorrect in asserting that select maps to map (no pun intended), and aggregate maps to reduce.&nbsp; In this example, the GroupBy method is acting as the map, while the Select method does the job of reducing the intermediate results into the final list of results.</p>
<p>The obvious caveat here is that this isn't distributed, it will run locally in memory.&nbsp;&nbsp; But even without the massive scaling that google's mapreduce data center can provide, it can be useful to think of problems in this mindset.&nbsp; And when the <a href="http://msdn.microsoft.com/en-us/magazine/cc163329.aspx">parallel extensions for linq</a> are finally released, you might even be able to easily take advantage of multiple cores.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2009-02-27 01:00:20</wp:post_date>
		<wp:post_date_gmt>2009-02-27 06:00:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mapreduce-in-c-using-linq</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>626</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>160.254.108.24</wp:comment_author_IP>
			<wp:comment_date>2009-02-27 10:55:50</wp:comment_date>
			<wp:comment_date_gmt>2009-02-27 15:55:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here's another implementation:

DryadLINQ
"the following line of code is a complete implementation of the Map-Reduce computation framework in DryadLINQ: public static IQueryable MapReduce(this IQueryable source, Expression&gt; mapper, Expression&gt; keySelector, Expression, TResult&gt;&gt; reducer) { return source.SelectMany(mapper).GroupBy(keySelector).Select(reducer); } "

http://research.microsoft.com/en-us/projects/dryadlinq/default.aspx

I hope they bring this to Azure...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>888</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>68.204.174.115</wp:comment_author_IP>
			<wp:comment_date>2009-12-31 15:13:42</wp:comment_date>
			<wp:comment_date_gmt>2009-12-31 20:13:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes, you are right that distributed is more than multiple core. However, the point of the article wasn't to comment on the distributed nature of the popular mapreduce implementations, but to "map" linq operations into the mapreduce paradigm.  Map/Reduce is not inherently distributed anyways, that was just google's implementation :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>884</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>884</wp:comment_id>
			<wp:comment_author><![CDATA[Maxi]]></wp:comment_author>
			<wp:comment_author_email>maxi0361@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://maxi326.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>59.120.52.126</wp:comment_author_IP>
			<wp:comment_date>2009-12-27 22:47:34</wp:comment_date>
			<wp:comment_date_gmt>2009-12-28 03:47:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think Linq still has a long way to go to match with MapReduce.
I don't think distributed simply means multi-cores but multi-machines.
I am currently using Linq and try to make it distributed, but its strong connection state will gets in your way since your result set are not independent. I think MapReduce ideas is not only the syntax but the whole architecture.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA GS 3.1 and Scurvy.Media</title>
		<link>http://codecube.net/2009/03/xna-gs-31-and-scurvymedia/</link>
		<pubDate>Tue, 31 Mar 2009 23:11:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/03/xna-gs-31-and-scurvymedia/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>So unless you’ve been living&#160; under a rock (and/or don’t care about XNA :-P ), you obviously know that v3.1 was announced last week during the GDC.&#160; Not a lot of info has really been put out there as far as specifics go, this seems to be one of the best sources so far:   <br /><a href="http://blogs.msdn.com/astebner/archive/2009/03/24/9506368.aspx">http://blogs.msdn.com/astebner/archive/2009/03/24/9506368.aspx</a></p>  <ul>   <ul>     <li>Support for customized Avatars </li>      <li>Support for Xbox LIVE Party features </li>      <li><strong><font color="#ff0000" size="5">Video playback</font></strong> </li>      <li>Updated audio APIs for “fire-and-forget” scenarios </li>      <li>Support for XACT3 </li>      <li><a href="http://blogs.msdn.com/shawnhar/archive/2009/03/25/automatic-xnb-serialization-in-xna-game-studio-3-1.aspx">Automatic XNB serialization</a></li>      <li>XNA Framework multi-targeting in the Visual Studio 2008 and/or Visual C# 2008 Express Edition IDE </li>      <li>Downloadable content for Xbox LIVE Arcade titles that use XNA Game Studio 3.1 </li>      <li>Consumer notifications when an Xbox LIVE Community Game that they have purchased has been updated</li>   </ul> </ul>  <p>Of course, the video playback feature stood out for me, as it would seem that it will affect the <a href="http://scurvymedia.codeplex.com/">Scurvy.Media</a> project.&#160; I’ve been getting some questions on the matter so I figured I’d just put my current thoughts out there.</p>  <p>Basically, I think it’s great :-) even if it ends up making the library completely obsolete.&#160; I imagine that they will have ways around some of the roadblocks I encountered such as large filesize issues, and texture compression.&#160; Depending on how their feature is factored, there *may* still be a place for Scurvy.Media … for example, I believe I read somewhere on the forums that it will only support WMV (don’t quote me on this, I may have misread or am not remembering right).&#160; But if this is the case, and they’ve factored some level of extensibility into their API, then Scurvy.Media may add support for AVI videos.</p>  <p>In the end, I’m quite happy to see this and the other features coming out … looking forward to giving the beta a shot when it’s announced eventually :-D</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2009-03-31 18:11:37</wp:post_date>
		<wp:post_date_gmt>2009-03-31 23:11:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-gs-31-and-scurvymedia</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>664</wp:comment_id>
			<wp:comment_author><![CDATA[Björn Graf]]></wp:comment_author>
			<wp:comment_author_email>bjoern.graf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.131.214.197</wp:comment_author_IP>
			<wp:comment_date>2009-04-01 09:58:22</wp:comment_date>
			<wp:comment_date_gmt>2009-04-01 14:58:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One would assume they do the same for video as they did for audio: convert the best at build time - although for video this could be rather annoying.

Anyway, the way SL3 supports managed only codec implementations would be interesting to get adopted by/for the XNA FX (if we ignore the perf isues of the 360 for now ;))]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>687</wp:comment_id>
			<wp:comment_author><![CDATA[Kerrmedia]]></wp:comment_author>
			<wp:comment_author_email>scott.kerr@kerrmedia.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kerrmedia.com</wp:comment_author_url>
			<wp:comment_author_IP>207.19.62.200</wp:comment_author_IP>
			<wp:comment_date>2009-05-20 17:41:43</wp:comment_date>
			<wp:comment_date_gmt>2009-05-20 22:41:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I was trying to use Scurvy.Media with the New XNA 3 with C#, but I could not compile the avi video, I guess it was too large, so I would like to load the external file, but I don't know how to go about that. All I have seen with your code samples is the following:

 ContentManager content = new VideoContentManager(Services);
            vid = content.Load("f_050E.avi");
            vid.Loop = true; //or false
            vid.Play();

If you could point me in the right direction, I would appretiate it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Innovation and Startups in Orlando, FL</title>
		<link>http://codecube.net/2009/04/innovation-and-startups-in-orlando-fl/</link>
		<pubDate>Sun, 19 Apr 2009 14:37:23 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/04/innovation-and-startups-in-orlando-fl/</guid>
		<description></description>
		<contentencoded><![CDATA[So I’m reading this book, <a href="http://www.foundersatwork.com/">Founders at Work</a>.  In the book Jessica Livingston, one of the co-founders of <a href="http://www.ycombinator.com/">Y-Combinator</a>, interviews a bunch of founders of famous companies who started off in basements and bedrooms. I haven’t completely finished it yet, but I wanted to make an observation that so far has been almost universal in all of the founder interviews.

Many of them took Venture Capital to get them started, and many of them <strong>moved to the west coast</strong>.

Now, much has been written and said by people like Joel Spolsky on the benefits of <a href="http://www.clubenetwork.com/index.php?option=com_seyret&amp;task=videodirectlink&amp;id=69">bootstrapping your business</a> instead of taking VC.  But that’s not really the part that I wanted to comment on (perhaps another day).  I wanted to comment on the exodus from the east coast that always seemed to happen (if they weren’t already on the west coast).

Brewster Kahle, of Alexa says in the book:
<blockquote>Boston, especially back in 1990/91, was in recession and having trouble. California was also in recession, but <strong>in California there were dreamers</strong>. There were people who wanted to think about new and different things and wouldn’t think we were crazy to try to build this thing.</blockquote>
Even YCombinator itself <a href="http://ycombinator.com/ycca.html">moved out to California</a>:
<blockquote>But we did worry that the Boston groups were losing out. Boston just doesn't have the startup culture that the Valley does. It has more startup culture than anywhere else, but the gap between number 1 and number 2 is huge</blockquote>
Now, despite the fact that the two examples I chose moved out of Boston specifically, you can find lots of other examples if you look hard enough. Living here in Orlando, fl … it kind of makes me wonder what it is about the culture over there that seems to breed such innovation.  Or rather, what attracts it.  I know for a fact that innovation is happening here every day.

For example, a local developer (Paul Varcholik) is doing some awesome research at UCF on <a href="http://www.bespokesoftware.org/wordpress/?page_id=41">Multi-Touch interfaces</a>.  Bill Reiss is starting up a venture to host and monetize <a href="http://silverarcade.com/">games written in Silverlight</a> (Tampa, but close enough :-P ). And locally run blog GameJobHunter (written by Paul Teall) has a post detailing <a href="http://gamejobhunter.com/blog/local-video-game-companies-orlando/">local Video Game studios in Orlando</a>.  These are definitely bright spots … however, what will happen when they create their inevitable innovation or breakthrough? Will these pioneers feel that they need to move out west for people to take them seriously or to fund them?  Will they find a lack of community, or even talent to help them locally?

I’m hopeful that this is not the case.  The number and size of user groups in the area have been steadily growing of the last few years. There are a large number of <strong>free</strong> <a href="http://orlandocodecamp.com/">codecamps</a> put on in Florida which offer a huge amount of sessions.  There has never been as much community available as there is now … and that’s great!  However, the mere presence of these user groups does not equal success.

On both sides of the fence, I feel that things need be brought to the proverbial “next step”. The opportunities for brainstorming, sharing knowledge, and even recruiting help from like-minded individuals are there. Everyone needs to start dreaming bigger, taking chances, executing on ideas. And I’m not the only one that sees this … <a href="http://davetroy.blogspot.com/2008/04/building-tech-startups-on-east-coast.html">others have made similar observations</a>,
<blockquote>The fact is that we can't expect to improve the tech startup climate on the east coast if we don't come together and make it what we want it to be. And that means we need to stop looking over our shoulder at the west coast and start building businesses here and now …</blockquote>
This is a <strong>call to action</strong> to the local development community … show up to that next <a href="http://onetug.org">user group meeting</a>.  Bring your ideas with you, there are lots of ways to foster discussion about your idea without talking about it directly (if you fear it’ll be poached by others).  And if you don’t think you could actually execute on your idea, talk freely about it.  Perhaps it will spark someone else’s imagination.  I want to see Central Florida in the news touting our innovative startups, products, and high-tech services.

I’d love to hear other’s thoughts on how we can encourage this :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2009-04-19 09:37:23</wp:post_date>
		<wp:post_date_gmt>2009-04-19 14:37:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>innovation-and-startups-in-orlando-fl</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>665</wp:comment_id>
			<wp:comment_author><![CDATA[Healy]]></wp:comment_author>
			<wp:comment_author_email>jhealy@microsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.devfish.net</wp:comment_author_url>
			<wp:comment_author_IP>96.228.210.46</wp:comment_author_IP>
			<wp:comment_date>2009-04-19 10:27:42</wp:comment_date>
			<wp:comment_date_gmt>2009-04-19 15:27:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reiss is out of Tampa, his partners on the venture are out of Tallahassee.  And dont forget about BIZSPARK if you're a startup.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>666</wp:comment_id>
			<wp:comment_author><![CDATA[Jay]]></wp:comment_author>
			<wp:comment_author_email>jayhill@jayhill.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.230.126.137</wp:comment_author_IP>
			<wp:comment_date>2009-04-19 14:44:35</wp:comment_date>
			<wp:comment_date_gmt>2009-04-19 19:44:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Driving home from the Central Florida Fair along Highway 50 (W. Colonial), my wife asked me why or how it comes to be that a particular stretch of highway develops a monoculture -- in this case, car dealerships.

I think it is similar to what you are talking about -- it is easier and maybe less frightening to be among people who are doing things like what you are or want to be doing, and comforting to run into others who have been there and done that.

That doesn't mean that you CAN'T have a great car dealership or startup success in another place, but the path is less traveled and there may be some startup infrastructure out West that is lacking here.  Clearly the government of California has fostered this activity for decades.

At this point, I think VC is the number 2 reason to be in the Valley, and people/networking is the number 1 reason.

There is probably a larger, but pretty well-defined set of factors that contributed to this phenomenon.  Someone has studied it, I'm sure.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>667</wp:comment_id>
			<wp:comment_author><![CDATA[Indavidualist]]></wp:comment_author>
			<wp:comment_author_email>sevedd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.indavidualist.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2009-04-20 12:28:23</wp:comment_date>
			<wp:comment_date_gmt>2009-04-20 17:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you make a great point about the culture between Cali and FL. The mindset in Cali tends to be anything is possible just go for it, as opposed to finding reasons why you can't do it in FL. Neither is important it's up to each person or group of people to stay focused and dedicated to a goal to be successful. If the user's group goal is to help the Central Florida commuinity grow then every meeting should incorporate something towards the growth of the members such as skill level, exposure, or group size. I do know that reading this blog has made me want to attend a user group meeting to further my knowledge in developing and networking to meet others in the field. Maybe I will see you at the next meeting..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Twitter Search via C#</title>
		<link>http://codecube.net/2009/04/twitter-search-via-c/</link>
		<pubDate>Mon, 27 Apr 2009 12:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/04/twitter-search-via-c/</guid>
		<description></description>
		<contentencoded><![CDATA[While there are some examples of accessing the <a href="http://apiwiki.twitter.com/">Twitter API</a> via C# on the web, I couldn’t really find any good samples of how to do a search.  There were some examples that took the REST route and used raw http requests.  While others explored the JSON formatting capabilities of the twitter API.  In the end, I didn’t really care for a lot of the code I saw, and I wasn’t really concerned with what format I got the results in, just that I got the results.

After a bit of fiddling about, I decided to use the ATOM format, and the SyndicationFeed API that came with WCF.  I came up with this simple command line tool that lets you type a search query, and it’ll list the top 10 results.  The code is quite short and simple to understand.
<pre>    class Program
    {
        static void Main(string[] args)
        {
            Console.Write("twitter -&gt; ");
            var input = Console.ReadLine();

            while (input != "exit")
            {
                var scrubbed = HttpUtility.UrlEncode(input);
                var reader = XmlReader.Create(
                     string.Format("http://search.twitter.com/search.atom?lang=en&amp;q={0}", scrubbed));
                var feed = SyndicationFeed.Load(reader);

                foreach (SyndicationItem item in feed.Items)
                {
                    Console.WriteLine("\t{0} - {1}", item.Authors[0].Name, item.Title.Text);
                }

                Console.Write("\ntwitter -&gt; ");
                input = Console.ReadLine();
            }
        }
    }</pre>
To use it, you just need to add references to System.ServiceModel.dll, and System.Web.dll.

Enjoy!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2009-04-27 07:56:00</wp:post_date>
		<wp:post_date_gmt>2009-04-27 12:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>twitter-search-via-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>696</wp:comment_id>
			<wp:comment_author><![CDATA[Trevor]]></wp:comment_author>
			<wp:comment_author_email>trevor@merrows.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.lixels.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>86.135.149.253</wp:comment_author_IP>
			<wp:comment_date>2009-05-25 10:25:30</wp:comment_date>
			<wp:comment_date_gmt>2009-05-25 15:25:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I am using .NET 1.1, can your code be adapted to 1.1?

Trevor]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>670</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>160.254.108.24</wp:comment_author_IP>
			<wp:comment_date>2009-04-27 15:28:36</wp:comment_date>
			<wp:comment_date_gmt>2009-04-27 20:28:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Where is the download? (I'm lazy)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>671</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>208.51.208.145</wp:comment_author_IP>
			<wp:comment_date>2009-04-27 15:31:26</wp:comment_date>
			<wp:comment_date_gmt>2009-04-27 20:31:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it's easy:

	Open Visual Studio
	Go to file - new - project, and select a console app
	paste the code above into the program.cs file

and Bam! the code has been downloaded ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>670</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>828</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>66.151.113.66</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 11:05:56</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 16:05:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Reg, I honestly don't know the answer to those questions :-) I honestly just got where I got by browsing the API documentation (http://apiwiki.twitter.com/) ... I'm sure that the answer to your questions and more can be found there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>826</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>827</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>66.151.113.66</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 11:04:27</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 16:04:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Trevor, unfortunately no, this code uses WCF classes that I believe are only present in the latest framework (3.5) ... or at best, 3.0.  so it wouldn't work in 1.1]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>696</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>826</wp:comment_id>
			<wp:comment_author><![CDATA[Reg]]></wp:comment_author>
			<wp:comment_author_email>regmi.amit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.249.136.194</wp:comment_author_IP>
			<wp:comment_date>2009-08-18 09:53:34</wp:comment_date>
			<wp:comment_date_gmt>2009-08-18 14:53:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, 

Why does the (feed) have 15 items for searches ?
Is there a way to search and locate the latest 100 tweets ?? or all the tweets starting from a certain date ?? How to extend the search ?? 

When using twitter search through http://search.twitter.com , we can browse the older tweets through "older" link at the bottom of the page. How to get all those tweets ?

Any idea ?

-Reg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1228</wp:comment_id>
			<wp:comment_author><![CDATA[Swartskaap]]></wp:comment_author>
			<wp:comment_author_email>wireborn@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.18.13.156</wp:comment_author_IP>
			<wp:comment_date>2011-02-10 12:40:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-10 17:40:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great but,

I have been searching like a mad man for the API you used!! Where can i download System.ServiceModel.dll, and System.Web.dll to reference in my application? Would be very cool if you could answer quickly , cause im writing a project for varsity!! Thanks!

Regards :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1297359608.0743";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1233</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>67.83.128.108</wp:comment_author_IP>
			<wp:comment_date>2011-02-25 00:08:41</wp:comment_date>
			<wp:comment_date_gmt>2011-02-25 05:08:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[those two assemblies are part of the .net framework.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1228</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1298610521.1137";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1363</wp:comment_id>
			<wp:comment_author><![CDATA[Apoorv Kumar Upadhyay]]></wp:comment_author>
			<wp:comment_author_email>apoorvkumarupadhyay@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.173.52.109</wp:comment_author_IP>
			<wp:comment_date>2011-08-17 01:40:09</wp:comment_date>
			<wp:comment_date_gmt>2011-08-17 06:40:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
 I tried Your Code. I am getting some Weird Error. I work on .net 4.0 Client Profile framework(VS 2010) .I pasted the code included the needed service references(System.Web) and System.ServiceModel and tried to run that code. it gives me two errors
1)The name "HttpUtility" doesnt exist in the current context
2)The name 'SyndicationFeed' does not exist in the current context

I edited the .csobj file but the reference is always there of the added references.
I changed the .net Framework from .net 4.0 Client framework to .net Framework 4 , The HttpUtility issue has been resolved but still the second error remains the same... Unable to run the code.Help me out]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313563209.1495";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Computing for Children</title>
		<link>http://codecube.net/2009/05/computing-for-children/</link>
		<pubDate>Mon, 04 May 2009 12:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/05/computing-for-children/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I’ve mentioned to a few people that I recently set my kids up with PCs.&#160; I think back to my first interactions with a computer when I was very young.&#160; My parents bought an Acer IBM Clone from Fingerhut.&#160; I learned so much from using that machine … in an effort to play prince of persia at school, my brother taught me how to make a boot disk to boot the library computer’s into DOS, then launch the game from the command line.&#160; It really taught me a lot about the basics of how the computer works … knowledge that I know has been useful in my career.</p>  <p>So I wanted them to have that same opportunity.&#160; I wanted them to be able to play games, and access learning tools on the internet; but wanted them to do it in as safe an environment as I could manage. So to that end, here’s their setup:</p>  <ul>   <li>Hardware: <a href="http://en.wikipedia.org/wiki/Acer_Aspire_One">Acer Aspire One</a> netbook</li>    <li>OS: Windows XP</li>    <li>Browser: <a href="http://getfirefox.com">Firefox</a> with <a href="https://addons.mozilla.org/en-US/firefox/addon/1865">AdBlock Plugin</a></li>    <li>Virus Protection: <a href="http://www.avast.com/eng/avast_4_home.html">Avast Home Edition</a></li>    <li>Parental Control: <a href="http://www.internetsafety.com/safe-eyes-parental-control-software.php">Safe Eyes</a></li>    <li>Whitelist only email: <a href="http://www.zoobuh.com/">Zoobuh</a></li>    <li>Art: <a href="http://getpaint.net">Paint.NET</a></li> </ul>  <p>I did quite a bit of research before running out and getting the kids the netbooks.&#160; Although they were relatively cheap in the grand scheme of things, I didn’t want to spend $600 bucks (for two of them) if it wasn’t going to be safe.&#160; I made sure that their user account was *not* an administrator, and the use of Firefox with adblock gave me a pretty good feeling that they’d be safe from exploits.&#160; </p>  <p>My choice of Safe Eyes was done after reading a lot of reviews.&#160; One of my favorite features was that you could log in and manage the site whitelist from any browser … so if there was some site they needed that was getting blocked, I could just unblock it from work after a phone call from them.&#160; Also, safe eyes can do partial filtering of sites like youtube and google search pages so they can still use the sites, without inadvertently running into content I didn’t want them seeing.</p>  <p>Another little trick I set up was that I made network shortcuts to each other’s laptop and taught them how to move files back and forth.&#160; Unfortunately, this wasn’t very easy … it involved having to manually set some permissions via the command line.&#160; I wish I would have written the steps down so I could share, but alas.&#160; At least they can do some simple file sharing.&#160; I figure that as long as I log on with my admin account periodically and do the windows updates, that they should remain safe.</p>  <p>Of course, I know that nothing is foolproof … we also employ other counter-measures such as making sure to monitor their use.&#160; This ensures that even if there was a way around the parental controls, that there was a physical deterrent, and also it ensured that my investment is secured (ie, they don’t break them).</p>  <p>Wow … It literally *just* occurred to me that both my first computer, and my kid’s first computers were Acers. Go figure :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2009-05-04 07:02:00</wp:post_date>
		<wp:post_date_gmt>2009-05-04 12:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>computing-for-children</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bayesian Filtering with C#</title>
		<link>http://codecube.net/2009/05/bayesian-filtering-with-c/</link>
		<pubDate>Fri, 08 May 2009 06:17:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/05/bayesian-filtering-with-c/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>Introducing nBayes, a new open source project<a href="http://codecube.net/bloguploads/BayesianFilteringwithC_2015/nbayes_logo.png"><img title="nbayes_logo" style="border-top-width: 0px; display: inline; border-left-width: 0px; border-bottom-width: 0px; margin-left: 0px; margin-right: 0px; border-right-width: 0px" height="95" alt="nbayes_logo" src="http://codecube.net/bloguploads/BayesianFilteringwithC_2015/nbayes_logo_thumb.png" width="240" align="right" border="0" /></a> which can be found here:</p>  <p><a href="http://nbayes.codeplex.com/">http://nbayes.codeplex.com/</a></p>  <p>nBayes is a simple implementation of the naive bayesian spam filter described by Paul Graham in his essay &quot;<i>A Plan for Spam</i>&quot; (<a href="http://www.paulgraham.com/spam.html">http://www.paulgraham.com/spam.html</a>). The API is very simple, there are just 3 classes that you need to be familiar with.</p>  <ul>   <li><a href="http://nbayes.codeplex.com/Wiki/View.aspx?title=Index">Index</a> </li>    <li><a href="http://nbayes.codeplex.com/Wiki/View.aspx?title=Entry">Entry</a> </li>    <li><a href="http://nbayes.codeplex.com/Wiki/View.aspx?title=Analyzer">Analyzer</a> </li> </ul> You can train the Index by adding entries to it, and then use an Analyer to categorize a new entry as belonging to one index or another. In the spam filtering example, one index would be the Spam, while the other would be the &quot;not-Spam&quot;.   <h4>Sample Code</h4>  <pre>Index spam = Index.CreateMemoryIndex();
Index notspam = Index.CreateMemoryIndex();

// train the indexes
spam.Add(Entry.FromString(&quot;want some viagra?&quot;));
spam.Add(Entry.FromString(&quot;cialis can make you larger&quot;));
notspam.Add(Entry.FromString(&quot;Hello, how are you?&quot;));
notspam.Add(Entry.FromString(&quot;Did you go to the park today?&quot;));

Analyzer analyzer = new Analyzer();
CategorizationResult result = analyzer.Categorize(
     Entry.FromString(&quot;cialis viagra&quot;), 
     spam, 
     notspam);

switch (result)
{
    case CategorizationResult.First:
        Console.WriteLine(&quot;Spam&quot;);
        break;
    case CategorizationResult.Undetermined:
        Console.WriteLine(&quot;Undecided&quot;);
        break;
    case CategorizationResult.Second:
        Console.WriteLine(&quot;Not Spam&quot;);
        break;
}</pre>

<p>The example above uses an extremely small index of words ... however, the reported result is indeed that it categorizes it as spam. Larger indexes are required to get better results. The sample project provided in the source code shows how to create two indexes by doing a search of twitter for two different terms. The top 100 results of that twitter API query will be trained into each respective index, and then it will ask you to type in a sample phrase. This phrase will be categorized into one of each index.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2009-05-08 01:17:30</wp:post_date>
		<wp:post_date_gmt>2009-05-08 06:17:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>bayesian-filtering-with-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>903</wp:comment_id>
			<wp:comment_author><![CDATA[dylan]]></wp:comment_author>
			<wp:comment_author_email>dvhthomas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dylandoesdigits.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>66.192.117.66</wp:comment_author_IP>
			<wp:comment_date>2010-02-09 19:03:29</wp:comment_date>
			<wp:comment_date_gmt>2010-02-10 00:03:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for sharing this - i really needed to get my head around this concept quickly, and your source is excellent. just stepping through the debugger now... so thanks again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1135</wp:comment_id>
			<wp:comment_author><![CDATA[scott]]></wp:comment_author>
			<wp:comment_author_email>scott@bracket-design.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.monyta.com</wp:comment_author_url>
			<wp:comment_author_IP>78.86.122.43</wp:comment_author_IP>
			<wp:comment_date>2010-05-14 11:20:24</wp:comment_date>
			<wp:comment_date_gmt>2010-05-14 16:20:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, 

I am looking for a spam filter as well. Do you know where I could get a pretrained index file? 

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1137</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>68.204.174.115</wp:comment_author_IP>
			<wp:comment_date>2010-05-18 20:08:08</wp:comment_date>
			<wp:comment_date_gmt>2010-05-19 01:08:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, here's the thing about Bayesian filters. They are actually very tuned to each individual user (over time). To use an extreme example, content about Viagra may be spam to some, but for a pharmacist may be perfectly valid. So I'd suggest just starting your own index, and it will eventually tune itself :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1135</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>VSClean Command Line Tool</title>
		<link>http://codecube.net/2009/05/vsclean-command-line-tool/</link>
		<pubDate>Mon, 18 May 2009 11:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/05/vsclean-command-line-tool/</guid>
		<description></description>
		<contentencoded><![CDATA[I don’t know about you, but I have a lot of code on my computer.  As anyone who <a href="http://twitter.com/joelmartinez">follows me on Twitter</a> knows, I’m often running out of space on my laptop.  So yesterday, I was running <a href="http://windirstat.info/">WinDirStat</a> on my harddrive to see what I could clean up.  I found that I had a significant amount of space spent on the contents of my /bin/* folders.  As any developer would know, this is where Visual Studio places binary files when it compiles.  So any time I have a visual studio solution from some old project, inevitably, I’ll have tons and tons dlls and exes just sitting around, not to mention content that may be part of the solution such as .mdb files, and in the more extreme cases, XNA game content.

So I started opening the folders and deleting them when I lamented that I wished I could just tell visual studio to run a Clean Solution command on all these files.  Then it hit me, visual studio uses MSBuild to do it’s compiling.  So why not write a simple tool that recurses through my dev directory and runs the msbuild clean command on all the solutions it finds.  Brilliant!

To that end, I’d like to introduce the command line tool VSClean.
Download here: <span style="text-decoration: line-through;">http://codecube.net/bloguploads/VSClean.zip</span>

<em><strong>Update</strong>: This project has been moved to CodePlex: <a href="http://vsclean.codeplex.com/"><span style="font-style: normal;">http://vsclean.codeplex.com/</span></a></em>

The zip file above is the source code.  Once you compile it, just run it from the command line and pass in your root source code directory as the first parameter:
<blockquote>&gt; VSClean “c:\dev”</blockquote>
Once you run this, it’ll iterate through all the folders in that directory looking for .sln files.  Once it finds them, it runs this command:
<blockquote>C:\Windows\Microsoft.NET\Framework\v3.5\MSBuild.exe “c:\dev\theSolution.sln” /m /t:clean</blockquote>
Of course, if you’ve installed the framework in a different path, you’ll have to change the const variable at the top of the class.  Once this is done, you can feel good that all of your old source code isn’t taking up unnecessary space :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2009-05-18 06:00:00</wp:post_date>
		<wp:post_date_gmt>2009-05-18 11:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>vsclean-command-line-tool</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>685</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>160.254.108.24</wp:comment_author_IP>
			<wp:comment_date>2009-05-18 11:52:06</wp:comment_date>
			<wp:comment_date_gmt>2009-05-18 16:52:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice - I will definitely use this!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>688</wp:comment_id>
			<wp:comment_author><![CDATA[Bob Baker]]></wp:comment_author>
			<wp:comment_author_email>bbaker@microapplications.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.microapplications.com</wp:comment_author_url>
			<wp:comment_author_IP>65.34.20.78</wp:comment_author_IP>
			<wp:comment_date>2009-05-20 20:35:14</wp:comment_date>
			<wp:comment_date_gmt>2009-05-21 01:35:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sweet! Get thee to CodePlex.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Avoid Caching of Ajax Requests</title>
		<link>http://codecube.net/2009/05/avoid-caching-of-ajax-requests/</link>
		<pubDate>Wed, 20 May 2009 14:40:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/05/avoid-caching-of-ajax-requests/</guid>
		<description></description>
		<contentencoded><![CDATA[So we recently experienced a subtle little bug in an ajax enabled asp.net mvc application that only showed up in IE7.  Turns out that the browser was caching an ajax request.  To get around it, we made the following addition to the global.asax http application class:
<blockquote>public abstract class MyWebApplication : HttpApplication
{
    protected MyWebApplication()
    {
        this.BeginRequest += new EventHandler(MyWebApplication_BeginRequest);
    }

    void MyWebApplication_BeginRequest(object sender, EventArgs e)
    {
        string requestedWith = this.Request.Headers["x-requested-with"];
        if (!string.IsNullOrEmpty(requestedWith) &amp;&amp; requestedWith.Equals("XMLHttpRequest", StringComparison.InvariantCultureIgnoreCase))
        {
            this.Response.Expires = 0;
            this.Response.ExpiresAbsolute = DateTime.Now.AddDays(-1);
            this.Response.AddHeader("pragma", "no-cache");
            this.Response.AddHeader("cache-control", "private");
            this.Response.CacheControl = "no-cache";
        }
    }
}</blockquote>
Basically, any request that comes in with the x-requested-with header (which most or all ajax libs use) will get these extra headers added to the response to tell the browser to avoid caching.

Hope it helps someone else out there :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2009-05-20 09:40:09</wp:post_date>
		<wp:post_date_gmt>2009-05-20 14:40:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>avoid-caching-of-ajax-requests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>693</wp:comment_id>
			<wp:comment_author><![CDATA[Mike]]></wp:comment_author>
			<wp:comment_author_email>mikemail343@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://vkontakte.com/</wp:comment_author_url>
			<wp:comment_author_IP>91.124.38.5</wp:comment_author_IP>
			<wp:comment_date>2009-05-23 15:39:00</wp:comment_date>
			<wp:comment_date_gmt>2009-05-23 20:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, nice posts there :-) thank's for the interesting information]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>703</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>graphain@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>219.90.177.242</wp:comment_author_IP>
			<wp:comment_date>2009-05-29 08:04:52</wp:comment_date>
			<wp:comment_date_gmt>2009-05-29 13:04:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks - I pretty much came to the same conclusion on a recent app.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>747</wp:comment_id>
			<wp:comment_author><![CDATA[curious]]></wp:comment_author>
			<wp:comment_author_email>curious_bastard@hush.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.10.166.189</wp:comment_author_IP>
			<wp:comment_date>2009-07-14 10:03:08</wp:comment_date>
			<wp:comment_date_gmt>2009-07-14 15:03:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And how exactly did this bug manifest itself?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>748</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>24.73.149.228</wp:comment_author_IP>
			<wp:comment_date>2009-07-14 10:51:46</wp:comment_date>
			<wp:comment_date_gmt>2009-07-14 15:51:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had an ajax application that was doing some polling to determine whether a long running server-side operation had completed.  After long hours of troubleshooting a strange bug in IE7 where the request wouldn't properly update to completed because of the caching.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>747</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MVC Pattern with Javascript</title>
		<link>http://codecube.net/2009/06/mvc-pattern-with-javascript/</link>
		<pubDate>Wed, 03 Jun 2009 14:01:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/06/mvc-pattern-with-javascript/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>We’ve been pushing pretty hard at work recently to become masters of the javascript language.&#160; Since we use it so extensively, and recent browser improvements such as compilation to native code of javascript … it means that it’s certainly not going away.&#160; On the server-side, we use ASP.NET MVC and have come to be quite fond of the pattern. I wanted to explore what it would look like to use the MVC pattern in javscript so that we can use it some of our more complex pages.</p>  <p>The first thing I did was poke around on the web to see if there were any existing frameworks I could simply use.&#160; I found a few such as:</p>  <ul>   <li><a href="http://javascriptmvc.com/">http://javascriptmvc.com/</a></li>    <li><a href="http://activerecordjs.org/">http://activerecordjs.org/</a></li>    <li><a href="http://jamal-mvc.com/">http://jamal-mvc.com/</a></li> </ul>  <p>Most of what I saw was either a bit too heavyweight for my tastes, or had the wrong focus, such as moving databinding from the server to the client.&#160; So I decided to try my hand at implementing it for myself.&#160; </p>  <p>The sample app/page that I implemented was a super simple list application that lets you type in some text, which gets sent to the server in an ajax call.&#160; The status of the operations would be collected in a list on the page.&#160; Although this is a fairly simplistic example, it has enough moving parts to show off the pattern.</p>  <h2>The Dependencies</h2>  <p><a href="http://jquery.com/">jQuery</a>, my favorite uber framework of choice.</p>  <p>I tried to make this as simple of an example as possible. However, I recently purchased the book “<em><a href="http://jsdesignpatterns.com/">Pro JavaScript Design Patterns</a>”</em>, and there was a pattern in there that I really liked and wanted to use.&#160; This pattern is the observer pattern.&#160; I didn’t take the full code provided in the book, just what I needed.</p>  <blockquote>   <p>//-- publisher class --     <br />function Publisher() {      <br />&#160;&#160;&#160; this.subscribers = [];      <br />}; </p>    <p>Publisher.prototype.deliver = function(data) {     <br />&#160;&#160;&#160; this.subscribers.forEach(function(fn) { fn(data); });      <br />}; </p>    <p>//-- subscribe method to all existing objects     <br />Function.prototype.subscribe = function(publisher) {      <br />&#160;&#160;&#160; var that = this;      <br />&#160;&#160;&#160; var alreadyExists = publisher.subscribers.some(function(el) {      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; if (el === that) {      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; return;      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; }      <br />&#160;&#160;&#160; }); </p>    <p>&#160;&#160;&#160; if (!alreadyExists) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; publisher.subscribers.push(this);      <br />&#160;&#160;&#160; }      <br />&#160;&#160;&#160; return this;       <br />};</p> </blockquote>  <p>I used this so that the model can essentially raise events that the controller can listen to.</p>  <h2>The View</h2>  <p>Getting started, the first thing I implemented was the view.&#160; I started with a few very simple html elements.</p>  <blockquote>   <p>&lt;input type=&quot;text&quot; id=&quot;name&quot; /&gt;     <br />&lt;input type=&quot;button&quot; value=&quot;add&quot; id=&quot;addButton&quot; /&gt;      <br />&lt;ul id=&quot;list&quot;&gt;      <br />&lt;/ul&gt;</p> </blockquote>  <p> Then I implemented the view.&#160; Note that I’m using the literal object notation instead of the classic object oriented syntax to declare these classes.&#160; I did this because I only need one instance of these classes.</p>  <blockquote>   <p>var view = { </p>    <p>&#160;&#160;&#160; init: function() {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.name = $(&quot;#name&quot;);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.addButton = $(&quot;#addButton&quot;);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.list = $(&quot;#list&quot;); </p>    <p>&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.addButton.click(function() {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; controller.addItem(view.name.val());      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; });      <br />&#160;&#160;&#160; }, </p>    <p>&#160;&#160;&#160; appendItemToList: function(item) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.list.append($(&quot;&lt;li&gt;&quot;).text(item));      <br />&#160;&#160;&#160; }      <br />};</p> </blockquote>  <p>The init function uses jquery to pull references to the UI elements and also to set event handlers.&#160; It also exposes the “appendItemToList” function, which concerns itself with taking a line of text and adding it to the list.</p>  <h2>The Model</h2>  <p>Next, I wrote the model, which would be responsible for communicating with the server in this case.&#160; All of the issues surrounding server communication would be handled in this class (ie. ajax calls, callbacks, etc.).&#160; </p>  <blockquote>   <p>var model = { </p>    <p>&#160;&#160;&#160; itemAddedEvent: new Publisher(), </p>    <p>&#160;&#160;&#160; submitNewItem: function(item) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; $.getJSON(&quot;/home/addnewitem/&quot; + escape(item), null, this.submitNewItemCallback);      <br />&#160;&#160;&#160; }, </p>    <p>&#160;&#160;&#160; submitNewItemCallback: function(data) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; model.itemAddedEvent.deliver(data.result);      <br />&#160;&#160;&#160; }      <br />};</p> </blockquote>  <p>Note also that there is an itemAddedEvent which uses the Publisher class defined above.&#160; This is used so that the model can notify the controller once the ajax call has returned.</p>  <h2>The Controller</h2>  <p>Finally, the controller … which can contain all of the business logic for the page without having to be muddied up with any knowledge of the page’s html structure, or any knowledge of how to communicate with the server.</p>  <blockquote>   <p>var controller = { </p>    <p>&#160;&#160;&#160; addItem: function(item) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; var valueToDisplay = 'entered: ' + item;      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; view.appendItemToList(valueToDisplay);      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; model.submitNewItem(item);      <br />&#160;&#160;&#160; }, </p>    <p>&#160;&#160;&#160; serverItemAdded: function(item) {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; view.appendItemToList(item);      <br />&#160;&#160;&#160; }, </p>    <p>&#160;&#160;&#160; init: function() {     <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; this.serverItemAdded.subscribe(model.itemAddedEvent);      <br />&#160;&#160;&#160; }      <br />};</p> </blockquote>  <p>The server-side action method is defined as such using ASP.NET MVC:</p>  <blockquote>   <p>public ActionResult AddNewItem(string id)     <br />{      <br />&#160;&#160;&#160; return Json(new      <br />&#160;&#160;&#160; {      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160; result = string.Format(&quot;'{0}' was added by the server&quot;, id)      <br />&#160;&#160;&#160; });      <br />}</p> </blockquote>  <h2>Putting it all together</h2>  <p>The last bit is simply some glue code that lets the view and controller initialize themselves.</p>  <blockquote>   <p>$(document).ready(function() {     <br />&#160;&#160;&#160; view.init();      <br />&#160;&#160;&#160; controller.init();      <br />});</p> </blockquote>  <p>As you can see, with just a few very simple techniques, the code ends up very clean and easy to maintain.&#160; Although for smaller/simple forms even this would probably end up being way too much complexity … some of the more complex forms will certainly benefit from the added separation of concerns.</p>  <p>I would love to get feedback on pros/cons of this approach.&#160; Any alternative ideas would greatly be appreciated :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2009-06-03 09:01:30</wp:post_date>
		<wp:post_date_gmt>2009-06-03 14:01:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mvc-pattern-with-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>751</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>mattbeedle@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://1000jobboersen.de</wp:comment_author_url>
			<wp:comment_author_IP>84.191.210.241</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 12:29:08</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 17:29:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks really good.  I've just implemented some code based on this, and it all works great.  How would you go about testing this code though, with jspec for example?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>752</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>24.73.149.228</wp:comment_author_IP>
			<wp:comment_date>2009-07-21 13:18:57</wp:comment_date>
			<wp:comment_date_gmt>2009-07-21 18:18:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Honestly, I haven't done a whole lot of javascript unit testing.  If I did though, I would probably evaluate one of these two products:

	http://fireunit.org/
	http://watin.sourceforge.net/
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>751</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>848</wp:comment_id>
			<wp:comment_author><![CDATA[Luis]]></wp:comment_author>
			<wp:comment_author_email>LTellony@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.116.55.55</wp:comment_author_IP>
			<wp:comment_date>2009-10-21 06:09:03</wp:comment_date>
			<wp:comment_date_gmt>2009-10-21 11:09:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you provide a working example.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1230</wp:comment_id>
			<wp:comment_author><![CDATA[switcherdav]]></wp:comment_author>
			<wp:comment_author_email>dcz.switcher@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.108.192.139</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 08:14:31</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 13:14:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wahou, really simple !

First I try to use : http://welcome.totheinter.net/tutorials/model-view-controller-in-jquery/phase-1/

But, to many code and painful to maintain, for example if I want to and a listener on a new Button, I must write too many lines of code

Your (with book helping) implementation of the observer pattern is more simple to understand and maintain, I'll try to use it in a middle weight application and give you my feedback

Thanks to share it]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1298034871.1915";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1298610410.5284";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5079</wp:comment_id>
			<wp:comment_author><![CDATA[james f]]></wp:comment_author>
			<wp:comment_author_email>jamesfitness@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.165.210.5</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 06:36:55</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 11:36:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tut but surely you're appending the item twice here? First you append it in the controllers additem method when the user clicks the button but then you're adding it again once the model publishes that the new item has been added server side - the controllers serverItemAdded event gets notified and fires the views appendItemToList again. Am I missing something?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1354275415.3995";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>On Personal Productivity</title>
		<link>http://codecube.net/2009/07/on-personal-productivity/</link>
		<pubDate>Thu, 16 Jul 2009 22:48:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/07/on-personal-productivity/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>There are many different types of productivity, today I’m going to talk about the things that you do on a day to day basis.&#160; A few years ago, I found myself unhappy with my level of productivity and decided to figure out a way to manage my time better.&#160; As one would do when trying to improve the performance of code, I profiled myself.&#160; For a week, I wrote down in painful detail each task I’d do … even if it was just goofing off and browsing the web.&#160; Then at the end of the week I tallied up my results and found that I spent an inordinate amount of time doing the following 3 things.</p>  <ul>   <li>checking email</li>    <li>reading blogs/news</li>    <li>trying to remember things and manage my daily tasks</li> </ul>  <p>I was actually kind of surprised that I was spending so much time doing these non-essential tasks so I started thinking of ways to improve.&#160; I’ve tried a number of techniques over the years, and this is my current setup.</p>  <h3>RSS Reader</h3>  <p>The first thing I wanted to improve was how much time I spent surfing the web.&#160; This was in my mind the thing that contributed the least to my work output (at least I need to read email and manage my tasks to do my job).&#160; Then one day, I discovered the venerable RSS Reader.</p>  <p>My first RSS reader was <a href="http://rssbandit.org/">RSS Bandit</a>.&#160; It’s a desktop client and works pretty well … however, I had issues synchronizing the subscription list between my home PC and work PC (newer versions have solutions for this).&#160; Then google decided to launch <a href="http://reader.google.com">Google Reader</a> and I haven’t looked back since :-)</p>  <p>I go through every once in a while and clean out feeds that are too chatty, and add new ones that are relevant to my daily workload.&#160; For example, when I started working on an <a href="http://www.asp.net/mvc/">ASP.NET MVC</a> Project, I added several new feeds like <a href="http://haacked.com/">Phil Haack’s</a> blog.</p>  <p>Nowadays, I’ve got it tuned so that I spend no more than about 5 minutes catching up and reading blogs in the morning.</p>  <h3>Email</h3>  <p>I use <a href="http://gmail.com/">GMail</a> as my email provider and have since the service was in Beta (funny, I know).&#160; Since I use this email address in public forum comments, posts, and to register for websites – I get a considerable amount of extraneous email.&#160; It got to the point where I was checking my account every 5-10 minutes because I got so much mail that I didn’t want to miss the important ones in the noise.</p>  <p>These days, I use gmail’s label and filter system quite extensively.&#160; I identified a few groups of emails that came with great frequency and had some marginal value … enough that I didn’t want to unsubscribe or remove them entirely.&#160; These are things like newsletters from companies that I’ve legitimately done business with, social networking site notifications, and receipts.&#160; So what I’ve done is to create 3 labels:</p>  <ul>   <li>Receipts</li>    <li>Social Networking</li>    <li>Newsletters</li> </ul>  <p>And then created filters that immediately apply the appropriate label to the incoming message and archives it out of my inbox.&#160; That way, I can choose when I want to look over my social network activity instead of having it blast me in the face everytime one of the emails comes in.</p>  <p>The result is that I’m able to focus on core conversations that matter to me.&#160; And when a conversation is done, I can archive it and still feel confident that I can find it using gmail’s search if I ever need to refer back to it. Coupled with GMail’s excellent spam filtering, and I couldn’t really ask for a better email solution.</p>  <h3>TODO List</h3>  <p>Completing the trilogy of productivity is my beloved TODO list.&#160; For years I simply used notepad (whether virtual or physical).&#160; I’d start the day by collecting all of the tasks that I need to accomplish for the day.&#160; As much&#160; detail as I could think of for each task would be logged, and then I just start checking them off one at a time.</p>  <p>That actually works fairly well for me, the only problem is that there is more going on in my life than just my work tasks.&#160; I’d find that multiple things would bump into one another (“take kids to the park when I get home”, “call the insurance company tomorrow at work”, etc.) and purge my brain’s L2 cache, much to my detriment. I was forgetting important things all the time.</p>  <p>Now, I’d heard about the <em><a href="http://en.wikipedia.org/wiki/Getting_Things_Done">Getting Things Done</a></em> system before. As with all self-help advice, I discounted it almost immediately and would never read about it.&#160; However, when <a href="http://www.rememberthemilk.com/">Remember The Milk</a> launched I started seriously evaluating how I process the incoming stream of things I need to do.</p>  <p>I came across a few articles that talked about how to apply the GTD system in RTM (which I had recently started using at the time).</p>  <ul>   <li><a href="http://szafranek.net/blog/2006/08/22/getting_things_done_with_remember_the_milk/">http://szafranek.net/blog/2006/08/22/getting_things_done_with_remember_the_milk/</a></li>    <li><a href="http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember-the-milk/">http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember-the-milk/</a></li> </ul>  <p>I must say that it works extremely well for me. I’m able to put things on the list and put my mind at ease that I won’t forget it.&#160; But more importantly, by using the special saved searches to create “Contexts”, stuff that I don’t have to worry about right now is conveniently out of site so it doesn’t clutter up my brain.</p>  <h3>Conclusion</h3>  <p>I’m always looking for ways to improve my workflow and to use technology to help me manage the information overload that this modern age throws at me.&#160; Although this setup is currently working pretty well, I’ve noticed that I constantly have to be adjusting little things about the process (email filters, RTM context queries, RSS subscriptions).</p>  <p>I feel like there’s an impending breakthrough just waiting in the wings that will greatly improve everyone’s workflow … I’ll keep my eye out for it :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2009-07-16 17:48:29</wp:post_date>
		<wp:post_date_gmt>2009-07-16 22:48:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>on-personal-productivity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>749</wp:comment_id>
			<wp:comment_author><![CDATA[Victor Chelaru]]></wp:comment_author>
			<wp:comment_author_email>VicChelaru@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.flatredball.com</wp:comment_author_url>
			<wp:comment_author_IP>75.165.228.253</wp:comment_author_IP>
			<wp:comment_date>2009-07-19 10:23:51</wp:comment_date>
			<wp:comment_date_gmt>2009-07-19 15:23:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Since you're 2/3 for Google, let's make it a perfect 3.  There's a google labs feature where you can add a small to-do list in your gmail. You can minimize it so it's out of the way, but it beats notepad in that you have it everywhere like work.

I use it, but I don't use it extensively.

In fact, you've inspired me to blog about this very topic :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>851</wp:comment_id>
			<wp:comment_author><![CDATA[dblanchard]]></wp:comment_author>
			<wp:comment_author_email>dblanchard@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dlblanchard.posterous.com/rss.xml</wp:comment_author_url>
			<wp:comment_author_IP>130.76.32.16</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 18:17:18</wp:comment_date>
			<wp:comment_date_gmt>2009-10-22 23:17:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Two suggestions: AutoHotkey, and TiddlyWiki.

AutoHotkey (AHK) is a tool for automating MS Windows. I have set it up to run from my thumbdrive (no trick there) so I can carry all my keyboard shortcuts and other utilities with me. The key value I get from it is when I switch tasks. I simply hit control-alt-shift-w to open all the applications, directories and files I need for my general work (Outlook, Remote Desktop Connection, specific web pages, etc.), hitting the same combo again saves all the open files and closes everything. For each project, I have a control-alt-shift-x command where x is changed depending on the name of the project. This allows me to switch tasks smoothly without taking time to deal with the mundane. I'm posting soon about my set up, you can follow me on posterous if you're interested to see a sample.

autohotkey.com

TiddlyWiki is also portable and is a great way to store, and more importantly, retrieve information. I use one TiddlyWiki for all my work, and my AHK project specific scripts leave it alone. My control-alt-shift-w hotkey opens, and saves and closes it.

tiddlywiki.com]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cross-Platform Javascript WebWorker</title>
		<link>http://codecube.net/2009/07/cross-platform-javascript-webworker/</link>
		<pubDate>Fri, 24 Jul 2009 04:39:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/07/cross-platform-webworker/</guid>
		<description></description>
		<contentencoded><![CDATA[If you’ve been keeping up with the new developments in the web world, no doubt you’ve heard about Web Workers.  A new technology for browsers that will let you take advantage of the client’s true multi-threading capabilities.  Currently, it’s only supported in Firefox 3.5, Safari 4, and some of the latest nightly Chrome builds.

I of course am very excited that the platform is moving ahead.  However, I am disheartened by the fact that it will take *ages* for the majority of the population to move to a browser that supports this feature.  So naturally started thinking about how I might be able to take advantage of this new feature, while still supporting older browsers.

Below you will find a relatively small script that will conditionally declare the Worker class if it’s not currently declared.  I tested it and it worked in IE8 in addition to Chrome (not the nightly with worker support), and of course FireFox 3.5, where it executes using the new feature rather than the wrapper.

<em>please note: This code has a small dependency on <a href="http://jquery.com/">jQuery</a> to do the ajax call.  It should be pretty easy to substitute that with another framework's analogous feature if you so prefer.</em>
<h3>The Worker Class</h3>
<blockquote>if (!Worker) {
function Worker(path) {
function InternalWorker(p) {
this.onmessage = function(m) {
if (trace)
trace('received ' + m);
};

$.get(p, function(data) {
setTimeout(function() {
eval(data);
}, 1);
});
}

var iworker = new InternalWorker(path);

function postMessage(m) {
setTimeout(function() { iworker.onmessage({ data: m }) }, 1);
}

return iworker;
}
}</blockquote>
<h3>The Usage</h3>
Once you’ve included the above script, you can use it as such:
<blockquote>&lt;script&gt;
var worker = new Worker('Scripts/worker.js');
worker.onmessage = function(event) {
$("#result").text(event.data);
};
&lt;/script&gt;

&lt;div id="result"&gt;&lt;/div&gt;</blockquote>
<h3>The Worker Script</h3>
The file mentioned above (Scripts/worker.js) is defined in my sample as follows:
<blockquote>postMessage("this is from the web worker");</blockquote>
I know, simple … all it does is post a message back to the main gui thread.
<h3>How it Works</h3>
The premise is very simple. If we need to fall back to manually supporting the feature on a downlevel browser, then we take the path to the script file which is passed into the constructor and download the contents of it using the $.get method.  We take that and use the setTimeout method to execute said script using the eval method.

This is of course not production-ready code. More of a proof of concept as I’ve only implemented the basic execution of the remote script, and passing messages back to the client.  If you actually try to do some heavy computation, the main thread will obviously get bogged down.  This will of course prompt IE to ask the user if they want to cancel the script.

However, I still see some value in being able to code using this API on all browsers.  The concept of message passing forces you to have clearly defined boundaries between functionality.  If your DOM modifying code can only talk to the validation functionality using messages, there’s a much higher chance that your code will be easy to maintain.

Please let me know if anyone is interested in further development of this little wrapper.  I’d like to collaborate on it and perhaps release a more fully featured and minified version on codeplex.

Thanks!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2009-07-23 23:39:21</wp:post_date>
		<wp:post_date_gmt>2009-07-24 04:39:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cross-platform-javascript-webworker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1170</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email>james.maroney@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.23.1.176</wp:comment_author_IP>
			<wp:comment_date>2010-09-03 15:47:44</wp:comment_date>
			<wp:comment_date_gmt>2010-09-03 20:47:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, I know this is an old post, but it made a great start toward what I was looking for. I expanded on your solution a bit to support communication both ways and wanted to post it back here for others to use and comment on.

function FakeWorker(path) {
    function InternalWorker() {
        var __w = this;
        var messageq = [];
        __w.postMessage = function(m){messageq.push(m);};
        this.__bindBody = function(data){
            var __win = { postMessage : function(m){
                    if(__w.onmessage){
                         setTimeout(function(){ __w.onmessage({data: m});}, 1);
                    }
                }
            };
            with(__win){
                eval(data);
                __w.postMessage = (onmessage)
                            ? function(m) { setTimeout(function() {onmessage({data: m+" (via FakeWorker)"});}, 1); }
                            : function(){};
                for(var i=0,msg;msg=messageq[i];i++){
                    __w.postMessage(msg);
                }
            }
        }
    }

    var iworker = new InternalWorker();
    $.get(path, function(data) {
                iworker.__bindBody(data);
        }); 
    return iworker;
}

I didn't want to define the "Worker" class, just because that felt a little misleading to me. Instead, this is how I use it:

var w = (typeof(Worker)==='undefined')
            ? new FakeWorker("Worker.js") 
            : new Worker("Worker.js");]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Peeking Under the Hood: Unit Tests</title>
		<link>http://codecube.net/2009/07/peeking-under-the-hood-unit-tests/</link>
		<pubDate>Fri, 31 Jul 2009 03:24:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/07/peeking-under-the-hood-unit-tests/</guid>
		<description></description>
		<contentencoded><![CDATA[<p>I don’t know about you guys, but I really like to learn by example.&#160; Much better to see someone else’s working code – provided you have an understanding of the underlying principles of course ;-)</p>  <p>Unit tests are a topic that’s often a hot debate.&#160; In my opinion, it’s because a lot of people don’t really know how to “do it right”.&#160; To that end, in case you hadn’t seen this, Microsoft generously provides all of the source code to the ASP.NET MVC project on CodePlex.&#160; And codeplex has this cool feature where you can browse the repositories right from your browser.&#160; So you can dig right into the MVC/test/SystemWebMvcTest folder and see how they do it first hand :-)</p>  <p><a title="http://aspnet.codeplex.com/SourceControl/BrowseLatest" href="http://aspnet.codeplex.com/SourceControl/BrowseLatest">http://aspnet.codeplex.com/SourceControl/BrowseLatest</a></p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2009-07-30 22:24:46</wp:post_date>
		<wp:post_date_gmt>2009-07-31 03:24:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>peeking-under-the-hood-unit-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>Blogging from the iPhone</title>
		<link>http://codecube.net/2009/08/blogging-from-the-iphone/</link>
		<pubDate>Sat, 01 Aug 2009 23:19:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2009/08/blogging-from-the-iphone/</guid>
		<description></description>
		<contentencoded><![CDATA[I suppose I should have expected there to be "an app for that". But I'm pleasantly surprised that there is a free wordpress app. Sweet.

Thaat being said there seems to be a bug with posting pictures taken from the app. That's ok though, still pretty cool ]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2009-08-01 18:19:12</wp:post_date>
		<wp:post_date_gmt>2009-08-01 23:19:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blogging-from-the-iphone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
	</item>
	<item>
		<title>IServiceProvider Extension Method</title>
		<link>http://codecube.net/2009/08/iserviceprovider-extension-method/</link>
		<pubDate>Fri, 21 Aug 2009 20:43:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=169</guid>
		<description></description>
		<contentencoded><![CDATA[I love extension methods, 'nuff said:
<blockquote>
<pre>public static class ServiceProviderExtension
{
    public static T GetService&lt;T&gt;(this IServiceProvider provider) where T: class
    {
        return provider.GetService(typeof(T)) as T;
    }

    public static K GetService&lt;T, K&gt;(this IServiceProvider provider)
        where T : class, K
        where K : class
    {
        return provider.GetService() as K;
    }

    public static K GetService&lt;K&gt;(this IServiceProvider provider, Type type)
        where K : class
    {
        return provider.GetService(type) as K;
    }

    public static K GetService&lt;K&gt;(this IServiceProvider provider, string type)
        where K : class
    {
        return provider.GetService(Type.GetType(type)) as K;
    }
}</pre>
</blockquote>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2009-08-21 15:43:11</wp:post_date>
		<wp:post_date_gmt>2009-08-21 20:43:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>iserviceprovider-extension-method</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>853</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin Driedger]]></wp:comment_author>
			<wp:comment_author_email>linuxbox@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://extremedesigners.ca</wp:comment_author_url>
			<wp:comment_author_IP>66.46.92.242</wp:comment_author_IP>
			<wp:comment_date>2009-11-03 10:18:14</wp:comment_date>
			<wp:comment_date_gmt>2009-11-03 15:18:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The code snippet did not compile.  Perhaps the following is better:
    public static class ServiceProviderExtension
    {
        public static T GetService(this IServiceProvider provider) where T : class
        {
            return provider.GetService(typeof(T)) as T;
        }

        public static K GetService(this IServiceProvider provider)
            where T : class, K
            where K : class
        {
            return provider.GetService(typeof(T)) as K;
        }

        public static K GetService(this IServiceProvider provider, Type type)
            where K : class
        {
            return provider.GetService(type) as K;
        }

        public static K GetService(this IServiceProvider provider, string type)
            where K : class
        {
            return provider.GetService(Type.GetType(type)) as K;
        }
    }]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Simple Pipeline Event model with C#</title>
		<link>http://codecube.net/2009/08/simple-pipeline-event-model-with-c/</link>
		<pubDate>Sat, 22 Aug 2009 16:08:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=173</guid>
		<description></description>
		<contentencoded><![CDATA[After declaring my love for extension methods in the last post, it only seemed appropriate that it would come up again in an <a href="http://stackoverflow.com/questions/1316254/c-pipeline-style-event-model/1316269#1316269">answer I gave</a> to a stackoverflow question.  The question stated:
<blockquote>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">In ASP.NET Web Apps , events are fired in particluar order :</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">for simplicity <strong>Load =&gt; validation =&gt;postback =&gt;rendering</strong></p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Suppose I want to develop such pipeline -styled event</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Example :</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Event 1 [ "Audiance are gathering" ,Guys{ Event 2 and Event 3 Please wait until i signal }]</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;"><strong>after Event 1 finished it task</strong></p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Event 2 [ { Event 2, Event 3 "Audiance gathered! My task is over } ]</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;"><strong>Event 2 is taking over the control to perform its task</strong></p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Event 2 [ " Audiance are Logging in " Event 3 please wait until i signal ]</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;"><strong>after Event 2 finished it task</strong></p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">.....</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">Event 3 [ "Presentation By Jon skeet is Over :) "]</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">With very basic example can anybody explain ,how can i design this ?</p>
</blockquote>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1em; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; clear: both; background-position: initial initial; padding: 0px; border: 0px initial initial;">My answer again leveraged an extension method to simplify the notification of events to each individual handler:</p>

<pre style="margin-top: 0px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: #f5f5f5; font-family: Consolas, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New'; overflow-x: auto; overflow-y: auto; width: auto; max-height: 600px; background-position: initial initial; padding: 5px; border: 0px initial initial;"><code style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; font-family: Consolas, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New'; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">public</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> abstract </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">class</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handler</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">{</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
  </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">public</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> abstract </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">void</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handle</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">string</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">event</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">);</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">}</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">

</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">public</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">static</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">class</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">HandlerExtensions</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">{</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
  </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">public</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">static</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">void</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">RaiseEvent</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">this</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">IEnumerable</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&lt;</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handler</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&gt;</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">,</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">string</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">event</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">)</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
  </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">{</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
     </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">foreach</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">var</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> handler </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">in</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">)</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">{</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> handler</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handle</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">event</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">);</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">}</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">    
  </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">}</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">}</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">

</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">...</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">

</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">List</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&lt;</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handler</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&gt;</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> handlers </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">=</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">new</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> </span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">List</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&lt;</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Handler</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">&gt;();</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Add</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">new</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> Handler1</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">());</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">Add</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #00008b; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">new</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;"> Handler2</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">());</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">

handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">RaiseEvent</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: maroon; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">"event 1"</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">);</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">RaiseEvent</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: maroon; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">"event 2"</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">);</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">
handlers</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">.</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: #2b91af; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">RaiseEvent</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">(</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: maroon; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">"event 3"</span><span style="font-size: 14px; vertical-align: baseline; background-image: initial; background-repeat: initial; background-attachment: initial; -webkit-background-clip: initial; -webkit-background-origin: initial; background-color: transparent; color: black; background-position: initial initial; padding: 0px; margin: 0px; border: 0px initial initial;">);</span></code></pre>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2009-08-22 11:08:49</wp:post_date>
		<wp:post_date_gmt>2009-08-22 16:08:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>simple-pipeline-event-model-with-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Static Access to Request-Specific Data</title>
		<link>http://codecube.net/2009/11/static-access-to-request-specific-data/</link>
		<pubDate>Tue, 03 Nov 2009 04:13:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=178</guid>
		<description></description>
		<contentencoded><![CDATA[I wrote a post over on the <a title="nGenSoft Blog" href="http://blog.ngensoft.net/">nGenSoft Blog</a> talking about how to gain <em><a href="http://blog.ngensoft.net/2009/11/02/static-access-to-request-specific-data/">Static Access to Request-Specific Data</a></em>:
<blockquote>As we have all come to learn in the last decade plus of web development, web applications are inherently stateless.  Unlike their native client cousins, every request must be treated as if it was done in isolation from any other user action.  This can tend to complicate application level concerns.  More often than not people just end up polluting their application by mixing code that is related to servicing the http request, with their business logic.

We wanted a way to maintain application related plumbing such as database connections neatly maintained, without having to always worry about the stateless nature of http requests.  We noticed that ASP.NET has a really nice pattern that works really well in the HttpContext.Current property.  This is a static property that contains information about only the current request … at first I couldn’t figure out how this works because ASP.NET is by nature a multi-threaded environment.  How was it segregating the information, which is accessed statically, to each individual requests?</blockquote>
<hr /><em>Update: repost of original text can now be found below
</em>

As we have all come to learn in the last decade plus of web development, web applications are inherently stateless.  Unlike their native client cousins, every request must be treated as if it was done in isolation from any other user action.  This can tend to complicate application level concerns.  More often than not people just end up polluting their application by mixing code that is related to servicing the http request, with their business logic.

We wanted a way to maintain application related plumbing such as database connections neatly maintained, without having to always worry about the stateless nature of http requests.  We noticed that ASP.NET has a really nice pattern that works really well in the HttpContext.Current property.  This is a static property that contains information about only the current request ... at first I couldn't figure out how this works because ASP.NET is by nature a multi-threaded environment.  How was it segregating the information, which is accessed statically, to each individual requests?

After doing some research online, I finally figured out a great way to maintain request level state across different components (ie. http module --&gt; http handler --&gt; mvc action filter --&gt; etc.). I did a good bit of searching, but found it was succinctly put in a blog post by hanselman:

<a href="http://www.hanselman.com/blog/ATaleOfTwoTechniquesTheThreadStaticAttributeAndSystemWebHttpContextCurrentItems.aspx" target="_blank">http://www.hanselman.com/blog/ATaleOfTwoTechniquesTheThreadStaticAttributeAndSystemWebHttpContextCurrentItems.aspx</a>

I started off by looking at (ie. Reflectoring) how the enigmatic HttpContext.Current works. Turns out there’s a lot of magic going on under the hood there with the web hosting framework and further .net remoting. In the end, looks like there are two simple ways to solve this problem:
<ul>
	<li>[ThreadStatic] attribute lets you have an instance of your static *per* thread.</li>
	<li>HttpContext.Current.Items, only usable in the context of <a href="http://asp.net/" target="_blank">asp.net</a> obviously, but correctly manages your scope for the lifetime of the request.</li>
</ul>
As hanselman puts it:
<blockquote>Today's lesson learned:the [<a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpref/html/frlrfsystemthreadstaticattributeclasstopic.asp" target="_blank">ThreadStatic</a>] attribute is only useful when YOU control the ThreadPool (and the lifecycle of the threads).</blockquote>
So it seems that in order to solve the problem we need to adapt our strategy.  If our app is running in a local client (ie. stateful), we can either use the threadstatic attribute, or nothing at all if we don't plan on doing complex multithreading.  However, if we are executing our application's code in an asp.net app, we need to use HttpContext.Current.Items.  Armed with this knowledge, we could have a small initialization step that lets you set up the strategy for how to manage session information. So in the app_start method of the global asax, we can do something like:
<pre>AppContext.SetEnvironment(new AppEnvironment());</pre>
Thus, in <a href="http://asp.net/" target="_blank">ASP.NET</a> you have an implementation that can know how to provide the proper scoping for that hosting environment. AppContext is defined as:
<pre>public interface IAppEnvironment
{
    public AppContext Current { get; set; }
}
public class AppContext
{
    // instance data
    public IDatabase Database { get; set; }

    // static lifecycl
    private static IAppEnvironment environment;

    public static void SetEnvironment(IAppEnvironment env) { environment = env; }

    public static AppContext Current
    {
        get { return environment.Current; }
        set { environment.Current = value; }
    }
}</pre>
The instance data can be whatever you want … in the case of a data-driven app, it can maintain a request level database connection and whatever other information we need to refer to (which you can easily do by just saying “AppContext.Current.Database”). The static “Current” property that everyone would use simply defers to the environment implementation. Below are two implementations of the IAppEnvironment that you can use from <a href="http://asp.net/" target="_blank">ASP.NET</a> and a custom one  that you can use in a console app, or unit test.
<pre>public class WebEnvironment : IAppEnvironment
{
    public AppContext Current
    {
        get { return HttpContext.Current.Items["appcontext"] as AppContext; }
        set { HttpContext.Current.Items["appcontext"] = value; }
    }
}

public class CustomEnvironment : IAppEnvironment
{
    [ThreadStatic]
    private static AppContext context;

    public AppContext Current
    {
        get { return context; }
        set { context = value; }
    }
}</pre>
The CustomEnvironment implementation above just uses the simple thread static attribute since it’s assuming that you will be managing the hosting environment (threading and all) … where in the WebEnvironment, you can defer to the httpcontext stuff since that is handled for you.

Techniques such as these let you focus on your application, while limiting the amount of time that you have to spend worrying complexities of adapting your application to run in a web application.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2009-11-02 23:13:22</wp:post_date>
		<wp:post_date_gmt>2009-11-03 04:13:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>static-access-to-request-specific-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Executing PowerShell Scripts via C#</title>
		<link>http://codecube.net/2009/11/executing-powershell-scripts-via-c/</link>
		<pubDate>Fri, 13 Nov 2009 12:08:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=180</guid>
		<description></description>
		<contentencoded><![CDATA[When <a href="http://davidrbrown.com/">Dave</a> asked me for some help with a little side project of his that he was researching, I jumped at the chance.  The requirement was to execute a powershell script programmatically and pass in some parameters that were gathered from a simple form.

I had been wanting to learn more about powershell since it came out (the original codename was called monad) and this was the perfect opportunity.  The end result is a simple little static class that you can use to execute a powershell script and pass in some parameters in a strongly typed fashion.

Here's a sample usage:
<pre>string result = PowerShell.Execute(
    @"c:\users\joel\dev\script.ps1",
    () =&gt; new
    {
        server = formserver,
        fname = formname
    });</pre>
Although there are quite a few little nuances involved in the execution from a command line, once you figure them out it's quite easy.  The class basically just does a Process.Execute on the PowerShell.exe command and passes in some command line arguments that executes the ps1 file.

I opted to do this instead of the cleaner API that is available via hosting the powershell runtime because that has an additional requirement on System.Management.Automation.dll which must be installed with the windows sdk.  I didn't want to introduce this dependency for the project, so the command line method was preferrable.

Below is the class ... you'll obviously have to include a few extra using statements at the top of your file, but you can find those easily.  Enjoy!
<pre>public static class PowerShell
{
    public static string Execute(string scriptPath, Expression&lt;Func&lt;object&gt;&gt; parameters)
    {
        string shellPath = "powershell.exe";
        StringBuilder sb = new StringBuilder();
        sb.AppendFormat("\"&amp; '{0}'\" ", scriptPath);

        NewExpression n = parameters.Body as NewExpression;

        for (int i = 0; i &lt; n.Members.Count; i++)
        {
            var member = n.Members[i];
            var value = n.Arguments[i];
            string paramValue;
            if (value is MemberExpression)
            {
                paramValue = Expression.Lambda(value).Compile().DynamicInvoke().ToString();
            }
            else
            {
                paramValue = value.ToString().Replace("\"", string.Empty);
            }
            sb.AppendFormat(" -{0} {1}", member.Name.Replace("get_", ""), paramValue);
        }

        string result = ExecuteCommand(shellPath, sb.ToString());
        return result;
    }

    private static string ExecuteCommand(string shellPath, string arguments)
    {
        arguments = "-noprofile " + arguments;
        var process = new Process();
        var info = process.StartInfo;

        process.StartInfo.UseShellExecute = false;
        process.StartInfo.FileName = shellPath;
        process.StartInfo.Arguments = arguments;
        process.StartInfo.RedirectStandardError = true;
        process.StartInfo.RedirectStandardOutput = true;

        process.Start();

        var output = process.StandardOutput;
        var error = process.StandardError;

        string result = output.ReadToEnd();
        process.WaitForExit();
        return result;
    }
}</pre>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2009-11-13 07:08:46</wp:post_date>
		<wp:post_date_gmt>2009-11-13 12:08:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>executing-powershell-scripts-via-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>861</wp:comment_id>
			<wp:comment_author><![CDATA[Makoto]]></wp:comment_author>
			<wp:comment_author_email>makoto@makotosan.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.makotosan.com</wp:comment_author_url>
			<wp:comment_author_IP>24.173.163.222</wp:comment_author_IP>
			<wp:comment_date>2009-11-14 00:30:44</wp:comment_date>
			<wp:comment_date_gmt>2009-11-14 05:30:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Second!

Nice work by the way.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>859</wp:comment_id>
			<wp:comment_author><![CDATA[David R Brown]]></wp:comment_author>
			<wp:comment_author_email>dbrown@davidrbrown.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.DavidRBrown.com</wp:comment_author_url>
			<wp:comment_author_IP>66.151.113.66</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 12:27:30</wp:comment_date>
			<wp:comment_date_gmt>2009-11-13 17:27:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great Post! Thanks again for the assist.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Qizmt: MapReduce Framework in C#</title>
		<link>http://codecube.net/2009/11/qizmt-mapreduce-framework-in-c/</link>
		<pubDate>Sun, 29 Nov 2009 16:51:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=184</guid>
		<description></description>
		<contentencoded><![CDATA[I was recently surprised to find that MySpace had open sourced a distributed "MapReduce Framework" called Qizmt (<a href="http://qizmt.myspace.com/">http://qizmt.myspace.com/</a>).  From the site's description:
<blockquote>MySpace Qizmt [kiz-mit] is a mapreduce framework for both developing and executing distributed computing applications on large clusters of Windows servers.</blockquote>
This has been a topic that I've been <a href="http://codecube.net/2009/02/mapreduce-in-c-using-linq/">interested in</a> for a while so I'm glad to see that someone has been making progress in this space for the .NET world.  <a href="http://research.microsoft.com/en-us/projects/Dryad/">Dryad</a> remains an interesting prospect which is apparently even seen production use in Microsoft's ad service, however it's clear that it hasn't been "productionized" yet.

One interesting aspect of Qizmt is that it seems they paid a lot of attention to making it easy to <a href="http://code.google.com/p/qizmt/wiki/MySpaceQizmtSingleMachineQuickStart#Run_MSI_to_install_driver_on_development_machine">deploy</a>.  In my opinion, the ability for a developer to easily get started with a one machine install is a key enabler for the uptake of any new technology.  Hopefully with more competition for technologies such as this, we will see some cool options become available to us as developers for high performance computing.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date>2009-11-29 11:51:12</wp:post_date>
		<wp:post_date_gmt>2009-11-29 16:51:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qizmt-mapreduce-framework-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Semi-Literate Programming with C#</title>
		<link>http://codecube.net/2009/12/semi-literate-programming-with-c/</link>
		<pubDate>Tue, 22 Dec 2009 04:44:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=186</guid>
		<description></description>
		<contentencoded><![CDATA[Recently, I've been reading the book <a href="http://www.amazon.com/Coders-at-Work-Peter-Seibel/dp/1430219483%3FSubscriptionId%3D08WX39XKK81ZEWHZ52R2%26tag%3Dws%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1430219483"><em>Coders at Work</em></a>, where author Peter Seibel interviews lots of well known developers.  One of the questions that he often asks is whether they have tried <a href="http://en.wikipedia.org/wiki/Literate_programming">Literate Programming</a>, an idea introduced by Donald Knuth in the 70s.  Although most of them say no, some of them have tried it briefly.  They usually come to the conclusion that it's an interesting idea, but a lot of the tooling doesn't really make it a realistic solution.

The author's insistence at asking them about this got me thinking about some of the problems that I've encountered during my career.  Could literate programming be applied in this modern day and age to help solve some of the problems that we all face?
<h4>A Use Case</h4>
I started thinking about the types of code where these questions tend to come up with. It's usually around code where business analysts make up some business rules.  Let's use an example.  Say you work at a company that needs to creating billing statements for clients.  When you process the statements, there are a series of fees which you must attach to the bill based on certain conditions.

The rules may have been explained to the developer in a face to face meeting like this:
<ul>
	<li>Apply a 7% tax on the principal when the client is in Florida</li>
	<li>A $50 flat fee will be applied when a New York based client maintains a principal of more than $1000</li>
</ul>
So I, as a developer will scuttle away and create the program per specifications. The application goes to production and everyone is happy. Two years pass by, most of the original staff that was working when the system was originally deployed has turned over, and the new staff has a question about why some fees are being charged for a given client.

In an ideal world, the business will refer back to documentation that they created when wanting to know about the behavior of some system that you programmed. However, in the real world, a more likely scenario is that they will end up asking you over the phone about some obscure section of the code and you end up having to crack open the source to figure out what the code is doing in that piece.
<h3>The Solution?</h3>
I want a solution that lets me write code, and without manual intervention, allow other developers and the end user to understand what the business logic is doing.  Of course, most people will point to the <a href="http://msdn.microsoft.com/en-us/library/b2s063f7%28VS.80%29.aspx">XML documentation</a> feature of C# along with auto-documentation products like <a href="http://sandcastle.codeplex.com/">SandCastle</a>, and suggest that this is enough.  However, maintaining XML comments violates the "without manual intervention" part of my own requirements. It also creates output that is not really consumable by end users.

There is also another issue that most people probably don't really think about. A lot of the code in today's projects is not really ... useful, to document. Serialization code, parsing code, data access code ... most of that is pretty standard.  Developers will easily understand it assuming they already know how to use the APIs like ADO.NET, and WCF.  And users won't care about it.  So that really just leaves the fundamental logic that is the raison d'être for your application in the first place. This is what I am interested in making easily available for a human to read.

For the solution, I wrote a simple Rule class:
<blockquote>
<pre>public class Rule&lt;T&gt;
{
    private Expression&lt;Action&lt;T&gt;&gt; expression;
    private Expression&lt;Func&lt;T, bool&gt;&gt; evalExpression;
    private Action&lt;T&gt; compiled;
    private Func&lt;T, bool&gt; evalCompiled;

    public void Execute(T context)
    {
        if (this.evalCompiled(context))
        {
            this.compiled(context);
        }
    }

    public Expression&lt;Func&lt;T, bool&gt;&gt; Evaluation
    {
        get { return this.evalExpression; }
        set
        {
            this.evalExpression = value;
            this.evalCompiled = value.Compile();
        }
    }

    public Expression&lt;Action&lt;T&gt;&gt; Action
    {
        get { return this.expression; }
        set
        {
            this.expression = value;
            this.compiled = value.Compile();
        }
    }

    public override string ToString()
    {
        return string.Format("if {0} then {1}",
                                    this.Evaluation.Body,
                                    this.Action.Body);
    }
}</pre>
</blockquote>
This class takes, as a generic parameter a context which represents one item that needs to be processed.  You will set two lambda expressions: the Evaluation, and the Action.  The evaluation will return true if the action is to be applied.  An example can be seen below:
<blockquote>
<pre>List&lt;Rule&lt;BizContext&gt;&gt; rules = new List&lt;Rule&lt;BizContext&gt;&gt;();

rules.Add(new Rule&lt;BizContext&gt;()
{
    Evaluation = c =&gt; c.State == Florida,
    Action = c =&gt; c.Fees.Add(c.Principal * .07M)
});

rules.Add(new Rule&lt;BizContext&gt;()
{
    Evaluation = c =&gt; c.State == NewYork &amp;&amp; c.Principal &gt; 1000.00M,
    Action = c =&gt; c.Fees.Add(50.00M)
});</pre>
</blockquote>
"BizContext" in the above code can contain anything that pertains to the item that needs to be processed.  In our case, the analyst's rules say that we need to operate based on the principal and client's state, and add fees.  So those are the properties that the context contains. Because the rules were added to a list, you can iterate through the list and call the rule class' "Execute" method.
<blockquote>
<pre>foreach (var rule in rules)
{
    rule.Execute(context);
}</pre>
</blockquote>
So far, there's nothing groundbreaking about the Rule class.  I'm sure many of you have written something similar time and time again. But here's where the literate programming comes into play. Because the "Evaluation" and "Action" methods are actually Expressions ... we have access to the textual representations of the code, in addition to having the ability to execute it.

The overridden .ToString method on the class will output an easy to understand string of the business rules using actual code that will execute when it's run.  So for the two rules defined above, you can get a printout like this:
<blockquote>
<pre>if (c.State = Florida) then c.Fees.Add((c.Principal * 0.32))
if ((c.State = NewYork) &amp;&amp; (c.Principal &gt; 1000.00)) then c.Fees.Add(50.00)</pre>
</blockquote>
The end user gets a realistic printout of the actual business logic in the system on-demand; And the developer doesn't have to do anything to update this when the business logic changes.

So there you have it; I wouldn't exactly call it full fledged literate programming with C# in the way that it was described originally.  But I think that it embodies the qualities of literate programming, where documentation and code are one and the same. It's a compromise, and it would be interesting to see if this approach can be implemented in a real-world scenario.

Any takers? :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2009-12-21 23:44:25</wp:post_date>
		<wp:post_date_gmt>2009-12-22 04:44:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>semi-literate-programming-with-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="literate-programming"><![CDATA[literate programming]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>878</wp:comment_id>
			<wp:comment_author><![CDATA[Tyler]]></wp:comment_author>
			<wp:comment_author_email>hishighness@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>151.118.137.169</wp:comment_author_IP>
			<wp:comment_date>2009-12-22 01:27:49</wp:comment_date>
			<wp:comment_date_gmt>2009-12-22 06:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very clever! This is my first exposure to literate programming, but I have a fair bit of history with Object Role Modeling. Seems like this is a great complementary idea to generating code using domain-specific languages.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cleaning up after MSTest</title>
		<link>http://codecube.net/2009/12/cleaning-up-after-mstest/</link>
		<pubDate>Mon, 28 Dec 2009 08:29:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=208</guid>
		<description></description>
		<contentencoded><![CDATA[For those of you that use MSTest, you've no doubt noticed a folder called "TestResults" which can get quite large.  This is because each test run copies all of the project output into that folder to store the results of the run.

Well, I updated my little open source tool to take care of it: <a title="VSClean" href="http://vsclean.codeplex.com">http://vsclean.codeplex.com</a>

As it's traversing the directories, it will delete any of those "TestResults" folders that it comes across.  Download now!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2009-12-28 03:29:04</wp:post_date>
		<wp:post_date_gmt>2009-12-28 08:29:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cleaning-up-after-mstest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mstest"><![CDATA[MSTest]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="vsclean"><![CDATA[VSClean]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Next Decade in Software</title>
		<link>http://codecube.net/2009/12/the-next-decade-in-software/</link>
		<pubDate>Thu, 31 Dec 2009 08:18:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=210</guid>
		<description></description>
		<contentencoded><![CDATA[The scientists are already hard at work at <a title="Decades of future science" href="http://cosmiclog.msnbc.msn.com/archive/2009/12/22/2159108.aspx">coming up with predictions</a> for the next 10 years. I thought it would be interesting to extract from the list, the predictions that are directly related to software ... along with a few recommendations on how to get started today.
<ul>
	<li><strong>Augmented Reality</strong>
This one is almost already a reality. A number of iPhone apps use the compass, gps, and camera as a viewport to <a href="http://www.youtube.com/watch?v=5fZk0HaIs4s">overlay information on top of the world</a>. A few years ago, Johnny Lee posted<a href="http://www.youtube.com/watch?v=Jd3-eiid-Uw"> some amazing videos</a> on how to use cheap consumer hardware to meld real and virtual worlds. It is clear that 3D graphics programming will be very helpful in this field ... why not <a title="XNA Creator's Club" href="http://creators.xna.com">start learning now</a>?</li>
	<li><strong>True artificially intelligent computer programs
</strong>This one seems to be the most far fetched. Not because the field is not progressing, <a href="http://www.youtube.com/watch?v=HluWsMlfj68">because it is</a>, but because it's been promised for so long. The biggest problem I think is lack of a clear goal; you can say you want something that learns, but learns what? There needs to be a catalyst that makes it clear what people really want/need from an intelligence. In my opinion, the game industry is <a title="AI Game Dev" href="http://aigamedev.com/">pushing the state of the art</a> here.</li>
	<li><strong>Cell phone apps that will act as a health monitor</strong> <strong>... Sort of an OnStar system for the body</strong>
Since the iPhone proved to everyone that you can have a powerful computer in your pocket, new devices have started appearing that try to <a title="Square" href="https://squareup.com/">piggyback off of the success</a>. I'm looking forward to more people making symbiotic peripherals for phones like the iphone, android based devices, and hopefully WinMo if they ever get their act together.  Mobile programming will surely be a skill to watch in the next decade.</li>
	<li><strong>Cloud computing
</strong>I was a little surprised to see a reference to cloud computing in a science article. But it makes sense when you think about it, because scientists need to make increasingly complex models to prove their theories and solve problems, they will need more and more processing power to do it.

I don't think that it will be worth it for the average "you and me" to invest time into learning how to make cloud computing infrastructures. The big 3 (Microsoft, Google, and Amazon) will commoditize these infrastructures and make them easily available ... for a price of course. Learning how to make programs that thrive in the clouds however, will prove to be useful. I've <a href="http://codecube.net/2009/02/mapreduce-in-c-using-linq/">written some</a> about <a href="http://codecube.net/2009/11/qizmt-mapreduce-framework-in-c/">this topic</a> recently. You can start programming in functional languages like <a href="http://en.wikipedia.org/wiki/F_Sharp_%28programming_language%29">F#</a>, or learn how to program shaders using <a href="http://en.wikipedia.org/wiki/High_Level_Shader_Language">HLSL</a> to teach your brain how to think in highly parallelizable terms.</li>
</ul>
Time is always the ultimate author of history, so we will have to wait and see how many of these predictions turn out to be true.  But one thing is clear, if you learn how to make games, there is a good chance you will be successful in the next decade ;-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2009-12-31 03:18:21</wp:post_date>
		<wp:post_date_gmt>2009-12-31 08:18:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-next-decade-in-software</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>889</wp:comment_id>
			<wp:comment_author><![CDATA[David Stein]]></wp:comment_author>
			<wp:comment_author_email>david@djstein.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.djstein.com</wp:comment_author_url>
			<wp:comment_author_IP>68.228.176.89</wp:comment_author_IP>
			<wp:comment_date>2009-12-31 16:14:38</wp:comment_date>
			<wp:comment_date_gmt>2009-12-31 21:14:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1) Augmented reality applications are already here. Do a search for the acrossair iPhone app. Of course, it will come into play in a big way in the '10s.

2) AI is stuck in the same stalemate it's been in for 20+ years. Milo is simply a chatbot with a graphical interface: it fails the Turing test in 60 seconds flat.

We now realize that the field isn't limited by a shortage of computing power - which we now have - but rather by a completely inadequate understanding of the mechanics of intelligence. Neural networks and Bayesian networks simply don't scale to anything resembling intelligence. The good news is that the field is (FINALLY) undergoing a reboot, so maybe we'll see some real progress in the (indeterminate) future.

3) Cellphones as health monitors - probably not. Compare the costs of the extra sensors that you'd have to jam into the cellphone (and the disadvantages, e.g., weight, size, and battery draw) on the prospective advantages. We will certainly have in-home health monitoring equipment, but will it be part of your portable device? Probably not.

4) Cloud computing - absolutely, but the basic model will be very different from what any of the major players are proposing. People are (very rightfully) attached to the concept of owning their data, so any company that insists on keeping YOUR data on THEIR servers is going to lose. People will own a huge home fileserver, and all data (email, apps, logs, photos, music, movies, recorded TV) will be stored there. Other than that discrepancy, Microsoft's Azure platform is probably closest to the mark.

Regards,

David Stein]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Snap-Circuits: Review</title>
		<link>http://codecube.net/2009/12/snap-circuits-review/</link>
		<pubDate>Sun, 27 Dec 2009 18:21:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=220</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://codecube.net/wp-content/uploads/2009/12/IMG_01831.jpg"><img class="alignleft size-medium wp-image-221" title="circuit" src="http://codecube.net/wp-content/uploads/2009/12/IMG_01831-300x225.jpg" alt="Completed Snap Circuit" width="300" height="225" /></a>

In the months leading up to Christmas '09, I was pondering what to buy for my kids. Instead of the normal brainless and easy gifts like transformers, gi-joes, and barbies, I wanted to get them something that matters, something that will benefit them. As I browsed around the internet, I came across microscopes, chemistry kits, telescopes, bird watching kits. Those were all fine enough gifts ... but they didn't really jump out at me for some reason.  Until I found ...

<a href="http://snapcircuits.net/">Snap-Circuits</a>
<blockquote>"Elenco's Snap Circuits makes learning electronics easy and fun! Just follow the colorful pictures in your manual and build exciting projects such as AM radios, burglar alarms, doorbells and much more! You can even play electronic games with your friends. All parts are mounted on plastic modules and snap together with ease. Enjoy hours of educational fun while learning about electronics. No tools required. Uses "AA" batteries. Not included."</blockquote>
Wow, the thought that electronics can be packaged up and easily explained to an eight year old was fascinating. I found one at my local Radio Shack, picked it up, and wrapped it. So far I have to say that I am very impressed with the product and my kids both seem genuinely interested. I thought I was going to have to carefully walk them through it, but they have picked it up quickly and have started doing projects on their own.

The manual is fantastic, very easy to follow instructions, and great descriptions of what's going on in the circuit.
<p style="text-align: left;"><a href="http://codecube.net/wp-content/uploads/2009/12/IMG_01851.jpg"><img class="size-medium wp-image-222 aligncenter" title="IMG_0185[1]" src="http://codecube.net/wp-content/uploads/2009/12/IMG_01851-300x225.jpg" alt="The manual" width="300" height="225" /></a></p>
<p style="text-align: left;">Of course, the only drawback so far is that the batteries drain pretty quickly ... I've already had to replace one set. However, the kids like it so much that I'm considering picking up one of the larger sets along with this awesome <a href="http://www.snap-circuits.com/phpstore/catalog/Snap-Circuits-TM-AC-SNAP-Battery-Eliminator-133.html">battery eliminator</a> that lets you draw power from a wall plug.</p>
<p style="text-align: left;"><a href="http://codecube.net/wp-content/uploads/2009/12/IMG_01841.jpg"><img class="size-medium wp-image-223 aligncenter" title="IMG_0184[1]" src="http://codecube.net/wp-content/uploads/2009/12/IMG_01841-300x225.jpg" alt="" width="300" height="225" /></a></p>
<p style="text-align: left;">I will definitely rate this a buy if you've got kids ... or heck, even if you want to learn more about electronics yourself and don't already have the background :-)</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2009-12-27 13:21:45</wp:post_date>
		<wp:post_date_gmt>2009-12-27 18:21:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>snap-circuits-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="christmas"><![CDATA[christmas]]></category>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="snap-circuits"><![CDATA[snap-circuits]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA Resource Pool</title>
		<link>http://codecube.net/2010/01/xna-resource-pool/</link>
		<pubDate>Tue, 05 Jan 2010 08:36:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=231</guid>
		<description></description>
		<contentencoded><![CDATA[This is likely an old topic at this point, considering the XNA framework has been out for several years. However, I meant to follow up on the topic of Resource Pooling after I posted the <a href="http://codecube.net/2009/02/onetug-xna-presentation-files/">presentation materials</a> from my <a href="http://onetug.org">ONETUG</a> presentation on XNA last February. This is a simple resource pool that you can use to mitigate memory allocation issues in the XNA framework.

The canonical example of where a pool is useful, is a game entity firing bullets.  If you simply create a new instance of a bullet each time you fire, you will soon run out of memory.  To avoid allocating new memory each time, you can reuse bullets that have moved off-screen or have collided with something.  There are several implementations that have been posted online such as:
<ul>
	<li><a href="http://www.xnawiki.com/index.php?title=Generic_Resource_Pool">http://www.xnawiki.com/index.php?title=Generic_Resource_Pool</a></li>
	<li><a href="http://swampthingtom.blogspot.com/2007/06/generic-pool-collection-class.html">http://swampthingtom.blogspot.com/2007/06/generic-pool-collection-class.html</a></li>
</ul>
These are great, they definitely do the job.  However, they have a common issue in that they want to take on too much responsibility. In both cases, the resource pool acts as an array to hold all known instances in addition to being concerned with object construction logic.

I wanted a simple resource pool which provided the functionality of providing a "new" instance of an object when I needed one. So I created my own; The basic design is that there are only two methods: "New", and "Return".  The new method returns a new instance that is ready to use, while the return method adds a previously obtained object back into the pool.
<blockquote>
<pre>using System;
using System.Collections.Generic;

namespace Scurvy
{
    public class Pool&lt;T&gt; where T : class, new()
    {
        private Queue&lt;T&gt; queue;
        private Action&lt;T&gt; newRoutine;

        public Pool(int capacity)
        {
            this.queue = new Queue&lt;T&gt;(capacity);
        }

        public Pool()
        {
            this.queue = new Queue&lt;T&gt;();
        }

        public Pool(Action&lt;T&gt; newRoutine)
            : this()
        {
            this.newRoutine = newRoutine;
        }

        public int Count { get { return this.queue.Count; } }

        public T New()
        {
            T item;

            item = queue.Count &gt; 0 ? queue.Dequeue() : new T();
            if (this.newRoutine != null) this.newRoutine(item);

            return item;
        }

        public void Return(T item)
        {
            queue.Enqueue(item);
        }
    }
}
</pre>
</blockquote>
An interesting feature of this pool is that you can control the object initialization logic by providing a simple lambda to the constructor.  Any initialization logic (such as resetting "isdead" fields, or resetting positions) can be done there and it will be executed for each new instance.

I'd love to get feedback on this class if you end up using it in a project.  Thanks!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2010-01-05 03:36:51</wp:post_date>
		<wp:post_date_gmt>2010-01-05 08:36:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-resource-pool</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="resource-pool"><![CDATA[Resource Pool]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>894</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>68.204.174.115</wp:comment_author_IP>
			<wp:comment_date>2010-01-05 23:30:36</wp:comment_date>
			<wp:comment_date_gmt>2010-01-06 04:30:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I actually originally had a Func, but it's actually more useful to just have a custom initialization function. Because in the case where you are reusing a previously existing object, you will likely just want to reset certain values instead of creating a new instance as you would with the Func :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>893</wp:comment_id>
			<wp:comment_author><![CDATA[George Tsiokos]]></wp:comment_author>
			<wp:comment_author_email>george@tsiokos.com</wp:comment_author_email>
			<wp:comment_author_url>http://george.tsiokos.com</wp:comment_author_url>
			<wp:comment_author_IP>97.100.66.175</wp:comment_author_IP>
			<wp:comment_date>2010-01-05 07:33:05</wp:comment_date>
			<wp:comment_date_gmt>2010-01-05 12:33:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you back it with .NET 4's (or .NET 3.5's via RX) BlockingCollection, then you can easily make it thread-safe and have the ability to block instead of creating a new instance. Of course, you may continue the same behavior as well with SyncronizedQueue. In addition, you may want to have a Func in the constructor to use as the factory so you can get rid of the new() generic constraint. 

--
Sent from my iPhone]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Resource Pool in F#</title>
		<link>http://codecube.net/2010/01/resource-pool-in-f/</link>
		<pubDate>Wed, 13 Jan 2010 01:59:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=238</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://gradbot.blogspot.com/">Erik Schulz</a>, who has written a bunch of articles on how to make XNA games with F# has ported the <a href="http://codecube.net/2010/01/xna-resource-pool/">Resource Pool</a> class I wrote about in F#.  Cool!

<blockquote><pre>type FPool&lt;'a&gt;(newRoutine, capacity : int) =
    let queue = Queue&lt;'a&gt; capacity

    member this.Count = queue.Count

    member this.New() =
        if queue.Count &gt; 0 then queue.Dequeue() else newRoutine()

    member this.Return(item) =
        queue.Enqueue(item)</pre></blockquote>

I've been toying around with F# recently, it's good to see an example that you can easily compare and contrast with the C# version.  Has anyone else tried out F#?]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>238</wp:post_id>
		<wp:post_date>2010-01-12 20:59:55</wp:post_date>
		<wp:post_date_gmt>2010-01-13 01:59:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>resource-pool-in-f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="f"><![CDATA[F#]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ScurvyTest v.next under way</title>
		<link>http://codecube.net/2010/01/scurvytest-v-next-coming-up/</link>
		<pubDate>Fri, 15 Jan 2010 23:06:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=240</guid>
		<description></description>
		<contentencoded><![CDATA[I finally had a chance to do some long planned work on <a href="http://scurvytest.codeplex.com">ScurvyTest</a>, my flexible unit testing framework that was design from the ground up to be friendly to XNA project unit testing.

Specifically, one of the drawbacks to the previous version was that unit test status was only communicated via an easy to miss write to the debug output.  This next release will improve that by introducing an official status reporting mechanism. You will be able to replace this reporting channel with your own implementation to let you integrate with any custom game or engine.

I'm also adding more methods which will be available to you on the Assert class, and fixing a few bugs that have been reported in the exit criteria feature.

Check out the latest change set if you're curious as to the latest, otherwise you can wait for the official release here in the next weeks :-)

<a href="http://scurvytest.codeplex.com/SourceControl/list/changesets">http://scurvytest.codeplex.com/SourceControl/list/changesets</a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2010-01-15 18:06:03</wp:post_date>
		<wp:post_date_gmt>2010-01-15 23:06:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvytest-v-next-coming-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scurvy.Test v1.2 Released</title>
		<link>http://codecube.net/2010/01/scurvy-test-v1-2-released/</link>
		<pubDate>Sat, 16 Jan 2010 20:29:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=245</guid>
		<description></description>
		<contentencoded><![CDATA[Quick on the heals of yesterday's post, I've released<a href="http://scurvytest.codeplex.com/"> v1.2 of Scurvy.Test</a>. This is the first official release of the framework and improvements over the initial announcement are mainly centered around the status reporting of test pass/failure.  I also upgraded the solution to vs 2k8 and xnags 3.1.

Here's the changelog if you're interested:
<ul>
	<li>Introduced TestStatusReporter to make reporting test status easier. DefaultReporter writes to the debug output, while the test console app implements a custom ConsoleReporter that writes it out to the stdout instead.</li>
	<li>Added additional methods and overloads to the Assert class for more assert options and the ability to replace your own custom TestStatusReporter instance.</li>
	<li>Added XBox version of Scurvy.Test assembly</li>
	<li>Upgraded solution to visual studio 2008</li>
	<li>now using SVN bindings instead of TFS Explorer</li>
	<li>Upgraded sample xna project to GS 3.1</li>
	<li>Added custom XNA test status reporter to sample project</li>
</ul>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2010-01-16 15:29:13</wp:post_date>
		<wp:post_date_gmt>2010-01-16 20:29:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>scurvy-test-v1-2-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="scurvy-media"><![CDATA[Scurvy Media]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Custom Transactions</title>
		<link>http://codecube.net/2010/02/custom-transactions/</link>
		<pubDate>Mon, 08 Feb 2010 17:01:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=248</guid>
		<description></description>
		<contentencoded><![CDATA[If you haven't used TransactionScope from the System.Transactions namespace, you don't know what you're missing.  This system, introduced with .NET 2.0 provides a flexible mechanism for allowing your code to take part in transactions.  Many of the built-in subsystems such as ADO.NET automatically enlist in these transactions, but the real power comes from the fact that you can allow your own custom code to also take part in ambient transactions.

Recently at work, I wanted to perform a transaction across several unrelated modules with a custom resource. Of course TransactionScope was the first solution brought up. Unfortunately, after some analysis, I realized that this wasn't going to work for us; We have existing database code in those modules that have different conditions in which the transaction would be rolled back.

We needed a way to have multiple transaction scopes, each with different conditions of success or failure. I started thinking about how to accomplish this, and decided to write my own implementation which mimics the TransactionScope, but lets me control things a bit closer.  So I came up with a class which can be used like this:
<blockquote>
<pre>using (Txn scope = Txn.New&lt;MyScope&gt;())
{
    // ... do work

    scope.Commit();
}</pre>
</blockquote>
Notice that the usage pattern is nearly identical to the TransactionScope API ... put the scope in a using statement, and call .Commit if the work was completed.  In the example above, the MyScope class is defined quite simply as:
<blockquote><pre>public class MyScope : Txn
{
    protected override void OnStart()
    {
        Console.WriteLine(&quot;\tstarting&quot;);
    }

    protected override void OnCommit()
    {
        Console.WriteLine(&quot;\tcommitting&quot;);
    }

    protected override void OnRollback()
    {
        Console.WriteLine(&quot;\trolling back&quot;);
    }
}</pre></blockquote>
All you have to do is inherit from the Txn class, and implement three methods:  OnStart, which occurs when the transaction is first beginning; OnCommit, which is invoked only when the top-most scope exits and all sub transactions were committed successfully; And OnRollback, which as you might imagine is only called if the transaction (or a subtransaction) was not committed successfully.

One difference between this API and the regular TransactionScope is that only one instance of "MyScope" will be created when the top-most transaction is first created.  As I've alluded to, you can nest transactions just as you can with TransactionScope.  And each scope must be committed if the entire transaction is to be completed.

The Txn class can be found below:
<blockquote><pre>public abstract class Txn : IDisposable
{
    private Queue&lt;bool&gt; committed = new Queue&lt;bool&gt;();

    public Txn()
    {
    }

    [ThreadStatic]
    public static bool committable = true;

    [ThreadStatic]
    public static int depth = 0;

    [ThreadStatic]
    public static Txn current;

    protected abstract void OnStart();
    protected abstract void OnCommit();
    protected abstract void OnRollback();

    public void Commit()
    {
        this.committed.Enqueue(true);
    }

    void IDisposable.Dispose()
    {
        if (committed.Count == 0 || !committed.Dequeue())
        {
            committable = false;
        }

        depth--;
        if (depth == 0)
        {
            if (committable)
            {
                this.OnCommit();
            }
            else
            {
                this.OnRollback();
            }

            current = null;
        }
    }


    public static T New&lt;T&gt;() where T : Txn, new()
    {
        depth++;

        if (current == null)
        {
            current = new T();
        }

        if (depth == 1)
        {
            // first transaction, assume committable
            committable = true;
            current.OnStart();
        }

        return current as T;
    }

    #region IDisposable Members

    #endregion
}</pre></blockquote>
There is one caveat to mention. My requirement was to run this code in a windows service. The entire scope of the transaction would be single threaded, but there would be multiple ongoing transactions at once. To support this scenario, notice that some of the internal state of the Txn class uses the [ThreadStatic] attribute. This means that the API can be used from multiple threads at once and each thread would have its own state.  

Of course, this might be a problem if you want to use this in an ASP.NET project. I've <a href="http://blog.ngensoft.net/2009/11/02/static-access-to-request-specific-data/">written about this issue</a> before. There is probably a way to make this work using the techniques I outlined in that article, but I haven't given it a lot of thought (because I didn't need to).  But I thought I'd share the work I did in case it is useful for anyone else.  ]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date>2010-02-08 12:01:10</wp:post_date>
		<wp:post_date_gmt>2010-02-08 17:01:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>custom-transactions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="transaction"><![CDATA[Transaction]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>State of Multitouch with XNA</title>
		<link>http://codecube.net/2010/02/state-of-multitouch-with-xna/</link>
		<pubDate>Sat, 13 Feb 2010 02:53:43 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=257</guid>
		<description></description>
		<contentencoded><![CDATA[I've been very interested in multitouch every since I saw Johnny Lee's awesome <a href="http://www.youtube.com/watch?v=0awjPUkBXOU&amp;feature=youtube_gdata">finger tracking</a> videos. Specifically, multitouch as it relates to game development. With the impending release of windows 7 tablet PCs, I have hopes that it might open up new possibilities and markets for games on the windows platform. I'm planning on picking up a <a href="http://accessories.us.dell.com/sna/products/Displays/productdetail.aspx?c=us&amp;l=en&amp;s=dhs&amp;cs=19&amp;sku=320-1172">Dell SX2210 monitor</a> to start playing with it.

I sought out to find out the state of multitouch. So far, I'm not too impressed. Here are two great references to get you started:
<ul>
	<li><a href="http://www.brianpeek.com/blog/archive/2010/01/13/multi-touch-madness-slides-and-code.aspx">Multitouch Madness</a>: Brian Peek posted the slides and source code to a presentation he gave on multitouch. I really wish I could have been there but the source code and slides are a great resource.</li>
	<li><a href="http://xna-uk.net/blogs/randomchaos/archive/2010/02/10/xna-and-windows-7-multi-touch.aspx">XNA And Windows 7 Multitouch</a>: Great article that shows how to get a touch enabled xna window rendering in windows forms.</li>
</ul>
The thing that I walked away with is that the solutions that Microsoft seems to be proposing have pretty specific dependencies on windows forms, wpf, and silverlight.  All things that I would rather not really deal with when I am making an XNA game. I would really prefer not to have to resort to making and managing my own window. In addition to the APIs not even really being available; Brian's slides mention that System.Windows.Input.Manipulations isn't even redistributable yet until .NET 4.0 is released.

So I'm going to be looking into how one can take advantage of the built-in touch APIs without onerous dependencies on unreleased assemblies and hacking windows forms in the near future. Anyone have any tips on where to get started?]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2010-02-12 21:53:43</wp:post_date>
		<wp:post_date_gmt>2010-02-13 02:53:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>state-of-multitouch-with-xna</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Will Steam Publish XNA Games?</title>
		<link>http://codecube.net/2010/02/will-steam-publish-xna-games/</link>
		<pubDate>Wed, 17 Feb 2010 01:32:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=261</guid>
		<description></description>
		<contentencoded><![CDATA[<em>Update: The short answer is, Yes ... the longer answer is here: <a href="http://codecube.net/2010/02/steam-and-xna-redux/">Steam and XNA Redux</a></em>

After all this <a href="http://www.engadget.com/2010/01/06/the-hp-slate/">tablet</a> <a href="http://www.dancewithshadows.com/tech/x2-itablet-windows-7-web-tablet-announced/">hype</a> started, I began to get excited about the possibilities of new markets emerging for touch enabled windows games. As Steam is currently one of the most robust and popular game distribution networks on windows, I was curious to know whether a game written with XNA could be published via Steam.

I visited their <a href="http://www.steampowered.com/steamworks/index.php">Steamworks developer site</a> and the offering is very attractive: Anti-Piracy/DRM, Cloud Storage, Matchmaking, DLC. coupled with the fact that many gamers I know (a statistically insignificant metric, I know) trust and use Steam, and it warranted a further look.  So I emailed them and asked simply (edited for further brevity):
<blockquote>From: Joel Martinez
To: steamworks@valvesoftware.com

Hello, I was wondering if the Steamworks API is usable from a game written in C# ... [I] would like to know if Steam would support games written using the XNA Framework.</blockquote>
Took them a few weeks to get back to me, but they answered succinctly:
<blockquote>From: Steam
To: Joel Martinez

Hello Joel,
We do not directly support games written using the XNA framework.  Steamworks is written in C++</blockquote>
A shame really.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2010-02-16 20:32:35</wp:post_date>
		<wp:post_date_gmt>2010-02-17 01:32:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>will-steam-publish-xna-games</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>911</wp:comment_id>
			<wp:comment_author><![CDATA[Erik Schulz]]></wp:comment_author>
			<wp:comment_author_email>gradbot@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://gradbot.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>216.220.192.132</wp:comment_author_IP>
			<wp:comment_date>2010-02-17 13:41:43</wp:comment_date>
			<wp:comment_date_gmt>2010-02-17 18:41:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[C++/cli interop isn't hard.  It is however time consuming boilerplate code that isn't interesting to write.  I imagine as the demand for language bindings grows they may release something.  If they make their header files publicly available someone will make an interop project.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>907</wp:comment_id>
			<wp:comment_author><![CDATA[Björn]]></wp:comment_author>
			<wp:comment_author_email>bjoern.graf@gmx.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.sgtconker.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.131.206.116</wp:comment_author_IP>
			<wp:comment_date>2010-02-16 22:21:48</wp:comment_date>
			<wp:comment_date_gmt>2010-02-17 03:21:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That doesn't mean anything: writing a (simple) C++/CLI wrapper aroung the Steamworks stuff won't be hard -- and I would be available to do it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>908</wp:comment_id>
			<wp:comment_author><![CDATA[Nick]]></wp:comment_author>
			<wp:comment_author_email>nick@gravelyn.com</wp:comment_author_email>
			<wp:comment_author_url>http://nickgravelyn.com</wp:comment_author_url>
			<wp:comment_author_IP>67.170.82.103</wp:comment_author_IP>
			<wp:comment_date>2010-02-16 23:04:17</wp:comment_date>
			<wp:comment_date_gmt>2010-02-17 04:04:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This also just means the Steamworks stuff isn't there. I know for a fact that a few XNA games are already available on Steam such as Blueberry Garden and Lucidity.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>909</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>alex@alexhogan.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.121.180.30</wp:comment_author_IP>
			<wp:comment_date>2010-02-16 23:33:49</wp:comment_date>
			<wp:comment_date_gmt>2010-02-17 04:33:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's really a shame that Steam doesn't seem to have a C# API supported already! I like making games in C# and XNA -- the only thing that doesn't seem to be there is online awareness of stuff like leaderboards and achievements - it would be rad to have those available, and Steam has a nice system for doing that sort of thing.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>910</wp:comment_id>
			<wp:comment_author><![CDATA[X-Tatic]]></wp:comment_author>
			<wp:comment_author_email>colesym@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.xtaticware.com</wp:comment_author_url>
			<wp:comment_author_IP>188.26.184.55</wp:comment_author_IP>
			<wp:comment_date>2010-02-17 06:42:44</wp:comment_date>
			<wp:comment_date_gmt>2010-02-17 11:42:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't see the problem. You can still interop with steamworks, XNA still uses D3D.. 

As for XNA framework based games, there are already some sold via steam, I just don't think they have the steamworks integration.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1283</wp:comment_id>
			<wp:comment_author><![CDATA[Zag]]></wp:comment_author>
			<wp:comment_author_email>gkeene@sandsweptstudios.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.89.247.201</wp:comment_author_IP>
			<wp:comment_date>2011-06-04 17:54:29</wp:comment_date>
			<wp:comment_date_gmt>2011-06-04 22:54:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,
(Also posted this on the redux, and I know the topic is old, but hey...)

Geoff from Sandswept Studios. We just released DETOUR awhile back on Steam. It is built in XNA. We sent our C# wrapper dll to Valve and told them they could send it to Steam developers who might need it (since we noticed no one else before us gave one out)

Hope that helps some of the XNA-to-Steam devs who might be wondering, or save them a bit of work anyway. (We’re not really offering any support for it though, so you’re own your own from there.)

-Geoff
sandswept.net]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307228069.1384";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1264</wp:comment_id>
			<wp:comment_author><![CDATA[Timo]]></wp:comment_author>
			<wp:comment_author_email>timo.hellmund@gmx.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.167.180.35</wp:comment_author_IP>
			<wp:comment_date>2011-04-17 10:46:16</wp:comment_date>
			<wp:comment_date_gmt>2011-04-17 15:46:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eufloria is written in C# and partly used SDL. So I do not see any problem in writing a game in C# and publishing it on Steam. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303055176.7674";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Steam and XNA Redux</title>
		<link>http://codecube.net/2010/02/steam-and-xna-redux/</link>
		<pubDate>Wed, 17 Feb 2010 23:45:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=269</guid>
		<description></description>
		<contentencoded><![CDATA[I love it when information travels at the speed of internet. I posted a little blurb yesterday about whether or not <a href="http://codecube.net/2010/02/will-steam-publish-xna-games/">Steam would publish XNA games</a>. It was based on an email that I sent them, and the response I got back. Very quickly, a few commenters mentioned that it would be trivial to write some c++ interop code to interface with the steamworks API. <a href="http://nickgravelyn.com/">Nick</a> also mentioned that there had in fact been several XNA games already published.

After a bit of online sleuthing (ie. searching Bing for "<a href="http://www.bing.com/search?q=xna+steam">xna steam</a>") I came  across said XNA games on steam and, via one of the developer's websites sent him an email. He was very nice and responded with:
<blockquote>Too bad they responded in such a way... usually they are very nice at Valve.

But yeah, they wrote a little C# wrapper for their Steamworks-dll.
They also made their installer script look for the dependencies (.NET
&amp; XNA redist)
...
I didn't really do anything to achieve this, they had
already decided to release the game when we ran into problems because
of the code being in C#, so they just put a guy on solving it.</blockquote>
This of course correlates with some of the other comments on my post saying that it would be trivial to write the wrapper; and in fact, even with my own assumptions before I even posted the blog entry. But the point I was trying to make was that I find Steam's approach to developers rather strange. One of the <a href="http://www.steampowered.com/steamworks/FAQ.php">FAQs from the steamworks site</a> reads:
<blockquote><strong>10. My game is in early development stages, don't I need to plan for the SDK integration now?</strong>
The Steamworks SDK is easy to integrate, so you can wait until your game is further along in the development cycle before worrying about it.</blockquote>
Their approach is basically one of don't call us, we'll call you. Unless your game gets lots of publicity (for example, winning an indie contest) you will have to actively seek them out and pitch your game to them.

Contrast this with the approach that Microsoft is taking with <a href="http://creators.xna.com">XBox Live Indie Games</a>. They provide an SDK, they provide hosting, they provide distribution, they provide some marketing ... all for less than ten bucks a month ($99 a year). This model is so much more appealing to me as a developer because it is low risk (yes, $99 a year is low risk). If I end up not developing anything, or development goes longer than expected ... I'm out $99 bucks at most.

If only Microsoft would extend <a href="http://www.microsoft.com/games/en-US/index.aspx">xblig onto Windows</a> ...]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>269</wp:post_id>
		<wp:post_date>2010-02-17 18:45:05</wp:post_date>
		<wp:post_date_gmt>2010-02-17 23:45:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>steam-and-xna-redux</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1114</wp:comment_id>
			<wp:comment_author><![CDATA[Bane]]></wp:comment_author>
			<wp:comment_author_email>zorakbane@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.121.214.32</wp:comment_author_IP>
			<wp:comment_date>2010-04-05 23:49:14</wp:comment_date>
			<wp:comment_date_gmt>2010-04-06 04:49:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["But yeah, they wrote a little C# wrapper for their Steamworks-dll"

Where is this wrapper? I've searched everywhere for it.  If they = steamworks, you previously posted this "We do not directly support games written using the XNA framework.  Steamworks is written in C++".  Is this a contradiction or where can I find this wrapper.. 

I also tried interop assistant, but it returns an error that says "The module was expected to contain an assembly manifest"]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1115</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>68.204.174.115</wp:comment_author_IP>
			<wp:comment_date>2010-04-06 17:47:25</wp:comment_date>
			<wp:comment_date_gmt>2010-04-06 22:47:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The C# wrapper is not (to my knowledge) publicly available. As the FAQ states, if your game is chosen for publication on the steam network, you will, at that point be provided with the SDK (and presumably the C# wrapper) to integrate into your game.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1282</wp:comment_id>
			<wp:comment_author><![CDATA[Zag]]></wp:comment_author>
			<wp:comment_author_email>gkeene@sandsweptstudios.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>70.89.247.201</wp:comment_author_IP>
			<wp:comment_date>2011-06-04 17:53:37</wp:comment_date>
			<wp:comment_date_gmt>2011-06-04 22:53:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,
Geoff from Sandswept Studios. We just released DETOUR awhile back on Steam. It is built in XNA. We sent our C# wrapper dll to Valve and told them they could send it to Steam developers who might need it (since we noticed no one else before us gave one out)

Hope that helps some of the XNA-to-Steam devs who might be wondering, or save them a bit of work anyway. (We're not really offering any support for it though, so you're own your own from there.)

-Geoff
sandswept.net]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1307228017.9545";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Which MultiTouch Monitor To Buy?</title>
		<link>http://codecube.net/2010/02/which-multitouch-monitor-to-buy/</link>
		<pubDate>Sat, 20 Feb 2010 01:45:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=275</guid>
		<description></description>
		<contentencoded><![CDATA[Last week, I pondered the <a href="http://codecube.net/2010/02/state-of-multitouch-with-xna/">state of multitouch with XNA</a>. And I mentioned that I was considering buying a multi-touch enabled monitor from Dell. Well, over the last few days I have been shopping around on line and I've been pleasantly surprised to find that there are several others on the market.

<strong>Acer t230h</strong>

<a href="http://us.acer.com/acer/product.do?LanguageISOCtxParam=en&amp;rcond5e.c2att92=169&amp;inu49e.current.c2att92=169&amp;link=ln314e&amp;CountryISOCtxParam=US&amp;kcond47e.c2att92=169&amp;rcond159e.att21k=1&amp;kcond48e.c2att101=62721&amp;rcond190e.att21k=1&amp;acond23=US&amp;rcond4e.att21k=1&amp;sp=page17e&amp;rcond157e.c2att92=169&amp;ctx1g.c2att92=169&amp;rcond42e.att21k=1&amp;kcond50e.c2att92=169&amp;rcond45e.att21k=1&amp;rcond158e.c2att1=0&amp;ctx2.c2att1=0&amp;inu53e.current.c2att92=169&amp;rcond38e.c2att1=25&amp;var13e=US&amp;rcond44e.c2att1=0&amp;rcond186e.c2att92=169&amp;rcond3e.c2att1=0&amp;rcond28e.attN2B2F2EEF=3264&amp;rcond189e.c2att1=0&amp;ctx1.att21k=1&amp;CRC=2844506398#wrAjaxHistory=2"><img class="alignnone size-full wp-image-277" title="Acer T230H" src="http://codecube.net/wp-content/uploads/2010/02/Acer-T230H.jpg" alt="" width="300" height="254" /></a>

<strong>Dell SX2210</strong>

<a href="http://accessories.us.dell.com/sna/products/Displays/productdetail.aspx?c=us&amp;l=en&amp;s=dhs&amp;cs=19&amp;sku=320-1172"><img class="alignnone size-full wp-image-278" title="Dell SX2210" src="http://codecube.net/wp-content/uploads/2010/02/Dell-SX2210.jpg" alt="" width="379" height="439" /></a>

<strong>HP L2105tm</strong>

<a href="http://accessories.us.dell.com/sna/products/Displays/productdetail.aspx?c=us&amp;l=en&amp;s=dhs&amp;cs=19&amp;sku=320-1172"></a><a href="http://h10010.www1.hp.com/wwpc/us/en/sm/WF06a/382087-382087-64283-3181050-3181048-4031739.html"><img class="size-full wp-image-276" title="HP L2105tm" src="http://codecube.net/wp-content/uploads/2010/02/HP-L2105tm.jpg" alt="" width="400" height="400" /></a>

Because of the technique they're using to do finger tracking, all the monitors only support two touchpoints at a time. Makes me wish that a homegrown solution like the optical <a href="../2009/02/converting-a-lifecam-vx-5000-to-see-ir/">webcam based solution</a> I experimented with a while back was more feasible.

The HP L2105tm is the most inexpensive offering, but also, seems to have other deficiencies such as a slower response time than the other two monitors. The Dell monitor is nice because it has a built-in webcam, which is something that I've been interested in having for a while, but is ultimately secondary. The Acer T230H is the one that is currently capturing my interest; it's the largest monitor of the three at 23 inches, and according to the specs has the best contrast ratio.

So, does anyone have any suggestions on which monitor I should go with? My primary goal is to have hardware that I can program multitouch enabled XNA games with :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date>2010-02-19 20:45:50</wp:post_date>
		<wp:post_date_gmt>2010-02-20 01:45:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>which-multitouch-monitor-to-buy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="multitouch"><![CDATA[multitouch]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>913</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Harris]]></wp:comment_author>
			<wp:comment_author_email>chrisandharris@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://chrisandharris.spaces.live.com</wp:comment_author_url>
			<wp:comment_author_IP>98.114.26.159</wp:comment_author_IP>
			<wp:comment_date>2010-02-20 12:20:37</wp:comment_date>
			<wp:comment_date_gmt>2010-02-20 17:20:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[From my experience anything &lt; 10ms response time was more than acceptable, however I&#039;m not sure what &quot;5ms (on and off)&quot; means in that HP product description.  Kind of sketchy, yeah?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>916</wp:comment_id>
			<wp:comment_author><![CDATA[Erik]]></wp:comment_author>
			<wp:comment_author_email>gradbot@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>174.31.146.100</wp:comment_author_IP>
			<wp:comment_date>2010-02-20 20:30:41</wp:comment_date>
			<wp:comment_date_gmt>2010-02-21 01:30:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One of these would be great for my mame cabinet though I'd have to make some sort of gesture based UI. Could be an interesting project.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>917</wp:comment_id>
			<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
			<wp:comment_author_email>suroot.chmod777@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.138.200.101</wp:comment_author_IP>
			<wp:comment_date>2010-02-20 21:51:26</wp:comment_date>
			<wp:comment_date_gmt>2010-02-21 02:51:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I love that Dell monitor; would love to get one of those and set it up as a control unit next to my keyboard.  Might have to look at doing that!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Reusing PHPBB&#039;s Authentication System</title>
		<link>http://codecube.net/2010/02/reusing-phpbbs-authentication-system/</link>
		<pubDate>Mon, 22 Feb 2010 06:00:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=281</guid>
		<description></description>
		<contentencoded><![CDATA[Question:

What's the easiest way to let a custom application re-use accounts from a PHPBB installation?

Answer:

The first thing that occurred to me was that I'd have to look over the PHPBB user tables, connect to mysql, and read the user's password (which I assume is hashed) to do the authentication. The second idea I had was to write a proxy service in PHP that I could call from my custom app.

Both of those options seemed like an awful pain in the butt. Then I had an epiphany, if you take a look at the ideals behind REST services, one could reason that PHPBB already exposes a REST service for logging in.

What if I simply used the already exposed HTML form as a sort of pseudo web service?

Making HTTP posts with C# is pretty easy, but I didn't want to try to remember what the syntax was for the API; So I did a quick search online and found a nice little class that makes it really easy:
<a href="http://geekswithblogs.net/rakker/archive/2006/04/21/76044.aspx">http://geekswithblogs.net/rakker/archive/2006/04/21/76044.aspx</a>

With this class in hand, I used <a href="http://getfirebug.com/">FireBug</a> while logging in to the PHPBB and inspected the post variables. Easy, there were only four variables posted:
<ul>
	<li>autologin=on</li>
	<li>login=Login</li>
	<li>username=<em>[My Username]</em></li>
	<li>password=<em>[My Password]</em></li>
</ul>
I grabbed the URL it was posting to and added the variables (see the example below). Once I get the result back, a simple regular expression parses through the HTML and figures out if the login was successful or not. The result worked surprisingly well ... the method below takes a username, password, and url. The URL will look something like this:
http://mywebsite.com/forum/ucp.php?mode=login&amp;sid=9cd8b8da2649060b9d22d297f27a1dc7
<blockquote>
<pre>private static bool Authenticate(string username, string password, string url)
{
    PostSubmitter post = new PostSubmitter();
    post.Url = url;

    post.PostItems.Add("autologin", "on");
    post.PostItems.Add("login", "Login");
    post.PostItems.Add("username", username);
    post.PostItems.Add("password", password);
    post.Type = PostSubmitter.PostTypeEnum.Post;
    string result = post.Post();

    string loggedinstring = string.Format("Logout \\[ {0} \\]", username);
    Regex r = new Regex(loggedinstring, RegexOptions.IgnoreCase);
    var match = r.Match(result);

    return match.Success;
}</pre>
</blockquote>
<em>Disclaimer:</em> I've only tried this code with one instance of phpbb, not sure if it will work with other versions. The point of this was that we can trivially reuse existing user stores that are already exposed on the web via simple html forms.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2010-02-22 01:00:42</wp:post_date>
		<wp:post_date_gmt>2010-02-22 06:00:42</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>reusing-phpbbs-authentication-system</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_1e1433559d9acfde17cad6854609640a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2fa49484b6487f773f3e4d2eda58855c</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>920</wp:comment_id>
			<wp:comment_author><![CDATA[David Brown]]></wp:comment_author>
			<wp:comment_author_email>sevedd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.DavidRBrown.com</wp:comment_author_url>
			<wp:comment_author_IP>66.151.113.66</wp:comment_author_IP>
			<wp:comment_date>2010-02-22 07:34:46</wp:comment_date>
			<wp:comment_date_gmt>2010-02-22 12:34:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post! I have been looking forward to working with Single Sign On integration through PHPBB and this is a good start.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1279</wp:comment_id>
			<wp:comment_author><![CDATA[Mughtruff]]></wp:comment_author>
			<wp:comment_author_email>davidfoster753@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://London</wp:comment_author_url>
			<wp:comment_author_IP>199.15.234.78</wp:comment_author_IP>
			<wp:comment_date>2011-05-17 06:00:32</wp:comment_date>
			<wp:comment_date_gmt>2011-05-17 11:00:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wassup everybody, just became a member of codecube.net . Ive spent five hours researching in online, until i've discovered this discussion board! I think, I would be here for a long time. kool forum.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305630032.7238";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Of Choppers, Physics, and Challenge</title>
		<link>http://codecube.net/2010/03/of-choppers-physics-and-challenge/</link>
		<pubDate>Tue, 09 Mar 2010 04:46:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=290</guid>
		<description></description>
		<contentencoded><![CDATA[After receiving some sage advice from <a href="http://www.indiegameguy.com/blogs/zman/default.aspx">Andy "The ZMan" Dunn</a>, I posted up the prototype of a game that I am working on for play test on the XNA Creator's Club site:
<a href="http://forums.xna.com/forums/t/49219.aspx">http://forums.xna.com/forums/t/49219.aspx</a>

<a href="http://forums.xna.com/forums/t/49219.aspx"><img class="alignnone size-thumbnail wp-image-296" title="playtest 1 gamebox" src="http://codecube.net/wp-content/uploads/2010/02/gamebox-150x150.jpg" alt="" width="150" height="150" /></a>

The game focuses on controlling a small 2d chopper through a maze. There are "fans" which push and pull the chopper into the walls which of course will make it more difficult to navigate.

I got the idea after my brother-in-law received a small indoor helicopter for christmas. We all had so much fun trying to carefully control it (as much as one can control those tiny copters) and even trying to land it strange places like the blade of a ceiling fan. I thought that it would be fun to play a game that required the same skill. I was able to fairly quickly make a simple prototype (even simpler than what I posted up for playtest) using the <a href="http://flatredball.com">FlatRedBall engine</a>'s built in acceleration and collision functions.

The prototype I posted up is quite rough around the edges as it is just a prototype; But the idea is to get the community's feedback early, before you have invested a lot of blood, sweat, and tears into a game. If you wait until the end to get a playtest, you will be so invested in what you've been working on that you will resist they playtester's feedback. I hope to get some good ideas about possible directions that I could take it in ... and hopefully it will validate the direction that I've already got in my mind. But who knows, I might get an idea that I was not expecting. That's the great thing about getting it in front of other people early.

We will see just how far along I can get before my<a href="http://www.orlandocodecamp.com"> Orlando Code Camp</a> presentation, which incidentally, is about actually finishing a game (this game). I'll definitely have more to post on this topic after the codecamp :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2010-03-08 23:46:33</wp:post_date>
		<wp:post_date_gmt>2010-03-09 04:46:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>of-choppers-physics-and-challenge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Acer t230h Review</title>
		<link>http://codecube.net/2010/03/acer-t230h-review/</link>
		<pubDate>Sat, 06 Mar 2010 15:32:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=291</guid>
		<description></description>
		<contentencoded><![CDATA[I <a href="http://codecube.net/2010/02/which-multitouch-monitor-to-buy/">settled</a> on the Acer T230H multitouch monitor

<a href="http://codecube.net/wp-content/uploads/2010/02/Acer-T230H.jpg"><img class="aligncenter size-full wp-image-277" title="Acer T230H" src="http://codecube.net/wp-content/uploads/2010/02/Acer-T230H.jpg" alt="" width="300" height="254" /></a>

So far, I'm happy enough with it. When I plugged it into the USB port on my computer, windows 7 already had drivers for it so it was kind of nice that I did not have to install any extra software; Though I haven't installed the software disc that came with the monitor so I don't know if there are any extra niceties that come with it.

The first thing that hit me was how large and nice the screen is. Definitely a great picture. Of course the first thing I did was fire up MS Paint, which natively supports multiple touch points. Single finger manipulation (I'll have to trademark that one) works really well and is quite accurate. Two fingers however seems to be pretty buggy, especially when you move the touchpoints near each other.

I'm looking forward to programming against some of the <a href="http://codecube.net/2010/02/state-of-multitouch-with-xna/">APIs</a> that are available. In particular, I'm looking forward to experimenting with new interface models rather than the usual textboxes, buttons, tree views, and menus.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2010-03-06 10:32:39</wp:post_date>
		<wp:post_date_gmt>2010-03-06 15:32:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>acer-t230h-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="multitouch"><![CDATA[multitouch]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get Googling Orlando!</title>
		<link>http://codecube.net/2010/03/get-googling-orlando/</link>
		<pubDate>Fri, 12 Mar 2010 15:39:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=299</guid>
		<description></description>
		<contentencoded><![CDATA[I'm pretty happy to see the City of Orlando kicking off this effort: <a href="http://www.getgoogling.com/">http://www.getgoogling.com/</a>

<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="425" height="344" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always" /><param name="src" value="http://www.youtube.com/v/RTnJNVHBPMk&amp;rel=0&amp;color1=0x6699&amp;color2=0x54abd6&amp;hl=en_US&amp;feature=player_embedded&amp;fs=1" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/RTnJNVHBPMk&amp;rel=0&amp;color1=0x6699&amp;color2=0x54abd6&amp;hl=en_US&amp;feature=player_embedded&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>

If you are reading this blog and live in the Orlando area, please take a few moments and map yourself and at least fill out the google survey. Then spread the word, it would be pretty awesome to see this come to Orlando :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2010-03-12 10:39:37</wp:post_date>
		<wp:post_date_gmt>2010-03-12 15:39:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>get-googling-orlando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="highspeed"><![CDATA[highspeed]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Windows Phone 7 Flashlight</title>
		<link>http://codecube.net/2010/03/windows-phone-7-flashlight/</link>
		<pubDate>Mon, 15 Mar 2010 21:09:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=307</guid>
		<description></description>
		<contentencoded><![CDATA[Now that the developer tools for Windows Phone 7 are <a href="http://developer.windowsphone.com">out in the wild</a>, I wondered how long before we see the ubiquitous "flashlight" app. I decided to grab the bull by the horns and put it out there myself. So find below the steps required to make your own flashlight app
<ol>
	<li>Create a new XNA Game Project for the phone</li>
	<li>Add this line of code to the Draw method:</li>
</ol>
<pre>graphics.GraphicsDevice.<strong>Clear</strong>(Color.White);
</pre>
And BAM! that's it!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date>2010-03-15 16:09:51</wp:post_date>
		<wp:post_date_gmt>2010-03-15 21:09:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows-phone-7-flashlight</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="wp7"><![CDATA[wp7]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1070</wp:comment_id>
			<wp:comment_author><![CDATA[GoGo-Robot]]></wp:comment_author>
			<wp:comment_author_email>aporritt@gogo-robot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gogo-robot.com</wp:comment_author_url>
			<wp:comment_author_IP>86.22.54.231</wp:comment_author_IP>
			<wp:comment_date>2010-03-19 07:03:00</wp:comment_date>
			<wp:comment_date_gmt>2010-03-19 12:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bah! Comments mangled the code :( I've posted it here: http://www.gogo-robot.com/2010/03/19/windows-phone-7-flashlight-with-sos/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1069</wp:comment_id>
			<wp:comment_author><![CDATA[GoGo-Robot]]></wp:comment_author>
			<wp:comment_author_email>aporritt@gogo-robot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gogo-robot.com</wp:comment_author_url>
			<wp:comment_author_IP>86.22.54.231</wp:comment_author_IP>
			<wp:comment_date>2010-03-19 06:53:12</wp:comment_date>
			<wp:comment_date_gmt>2010-03-19 11:53:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Couldn't resist :)

graphics.GraphicsDevice.Clear(
                /* Check for touch panel being pressed */
            TouchPanel.GetState().Count == 0 ?
                /* Touch panel released, so reset the timer. This is stored in the target elapsed time, so we don't have to create any variables :) We also turn off IsFixedTimeStep, so that TargetElapsedTime isn't used. */
                ((((this.IsFixedTimeStep = false) == false) &amp;&amp; ((this.TargetElapsedTime = TimeSpan.FromMilliseconds(Math.Max(1.0f, gameTime.TotalGameTime.TotalMilliseconds))) == TimeSpan.Zero)) ? Color.Gray : Color.Gray) :
                /* Touch panel pressed, so do SOS */
                (gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 2) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 4) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 7) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 10) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 13) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 17) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 19) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds = 21) &amp;&amp; ((gameTime.TotalGameTime - this.TargetElapsedTime).Seconds &lt; 22)) ? Color.White :
                Color.Black);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1035</wp:comment_id>
			<wp:comment_author><![CDATA[Zachary Snow]]></wp:comment_author>
			<wp:comment_author_email>zachary.snow@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://zacharysnow.net</wp:comment_author_url>
			<wp:comment_author_IP>83.236.128.58</wp:comment_author_IP>
			<wp:comment_date>2010-03-16 02:36:17</wp:comment_date>
			<wp:comment_date_gmt>2010-03-16 07:36:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Isn't the XNA Framework amazing? The flashlight app in one line of code.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1036</wp:comment_id>
			<wp:comment_author><![CDATA[Leaf]]></wp:comment_author>
			<wp:comment_author_email>leafgarland@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.14.151.103</wp:comment_author_IP>
			<wp:comment_date>2010-03-16 02:41:29</wp:comment_date>
			<wp:comment_date_gmt>2010-03-16 07:41:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pah, my real flashlight can send out "SOS" in morse code. Let's see that in one line :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Approximating Touch Points</title>
		<link>http://codecube.net/2010/03/approximating-touch-points/</link>
		<pubDate>Thu, 18 Mar 2010 23:00:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=310</guid>
		<description></description>
		<contentencoded><![CDATA[<img class="alignright size-thumbnail wp-image-313" title="phone7" src="http://codecube.net/wp-content/uploads/2010/03/phone7-150x150.jpg" alt="" width="150" height="150" /> The <a href="http://go2.wordpress.com/?id=725X1342&amp;site=designingagile.wordpress.com&amp;url=http%3A%2F%2Fbit.ly%2FbHGWOF">Windows Phone 7 Phone UI Guidelines</a> calls out that the minimum touch target size should be about 9mm (34px) and I started to think about what it would take to implement this in an XNA game. Of course the first thing that comes to mind is that I can define a simple bounding box for each entity that wishes to be touched. This box would have to be of the correct size, and would have to be kept in sync with the entity's position on the screen. Easy enough I guess.

One of the things that I've been thinking a lot about recently is writing software that, instead of strictly defining things can infer a user's intent. As I pondered the solution above, it occurred to me that defining a bounding box exactly 34 pixels in size was doing just that ... limiting the ability for the software to infer the user's intent in touching the screen. What if his touch point is 35 pixels away from his intended target?

Instead, what if you compare the user's touch point against the entity positions and simply select the closest one (regardless of whether it's 35 or 36 pixels away)?

The method below does just that given an array of entities and a touch location:
<blockquote>
<pre>private static Entity FindNearestEntity(Entity[] entities, ref TouchLocation touch)
{
    Entity selectedEntity = null;
    float currentDistance = 0;

    // The entity with the nearest
    for (int i = 0; i &lt; entities.Length; i++)
    {
        var entity = entities[i];

        float distance = Vector2.DistanceSquared(touch.Position, entity.Position);
        if (distance &lt; currentDistance)
        {
            selectedEntity = entity;
            currentDistance = distance;
        }
    }
    return selectedEntity;
}</pre>
</blockquote>
This assumes single finger data entry, meaning that it's probably best served for things like menus and options.

It's pretty exciting now that XNA has these touch APIs available to it. I am looking forward to doing more research in this space, and playing around with different "natural user interfaces".

For some great additional resources, be sure to drop by the natural user interface group on the web at: <a href="http://nuigroup.com/">http://nuigroup.com/</a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>310</wp:post_id>
		<wp:post_date>2010-03-18 18:00:27</wp:post_date>
		<wp:post_date_gmt>2010-03-18 23:00:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>approximating-touch-points</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="multitouch"><![CDATA[multitouch]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1112</wp:comment_id>
			<wp:comment_author><![CDATA[Roy]]></wp:comment_author>
			<wp:comment_author_email>roy-t@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://roy-t.nl</wp:comment_author_url>
			<wp:comment_author_IP>85.145.137.210</wp:comment_author_IP>
			<wp:comment_date>2010-03-25 14:54:38</wp:comment_date>
			<wp:comment_date_gmt>2010-03-25 19:54:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's a really good idea, and why limit it to touch devices, sometimes I miss-click with my mouse as well. This way I could have smaller buttons, maybe just text, thus showing more of the game it self, while (if I keep the spacing equal) having the same user experience.

Of course a mouse is a lot preciser than a touch screen (mostly in intuition) so this is a great feature to have.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Windows Phone 7 Game Archetypes</title>
		<link>http://codecube.net/2010/03/windows-phone-7-game-archetypes/</link>
		<pubDate>Mon, 22 Mar 2010 23:00:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=316</guid>
		<description></description>
		<contentencoded><![CDATA[Now that the .NET landscape has a new "screen" to design for in the form of Windows Phone 7 (WM6.x doesn't count ;-) ), we need to start thinking about how to provide users with consistent metaphors and input mechanisms.

Microsoft's patterns and practices group wrote the book on web and desktop application architectures (<a href="http://apparchguide.codeplex.com/">literally</a>). One of the sections in that book is application archetypes which describes the types of applications that you can build. This is useful because an ecosystem can spring up around each archetype (controls, usability studies, tutorials) which can provide a lot of feedback and guidance for new projects to follow.

To that end I wanted to start a list of the different archetypes that might be available to choose from when designing a game for windows phone 7. Don't confuse this with a discussion about game genres ... those are already well known and documented. This list covers types of applications, game mechanics, and input styles that you can use to directly affect your game's design in a fundamental way.
<ul>
	<li><strong>The Mini-Console</strong>
If you already have a game that you've written (using XNA for example) and you want to do a direct port to the phone, then you are writing a Mini-Console game. Games like this will generally be played in landscape mode, which gives the developer enough room to provide a virtual d-pad and button(s) on the bottom left/right of the screen. The idea here is that the user will feel like they are playing a handheld console like the DS or PSP.</li>
	<li><strong>The ARG</strong>
Alternate Reality Games are growing in popularity. They typified by involving real world elements in one way or another. This can involve using the player's real world lat-lon location to have in-game effects (using the <a href="http://msdn.microsoft.com/en-us/library/system.device.location%28v=VS.92%29.aspx">System.Device.Location namespace</a>), or using the device's camera as an input mechanism. I don't see much of these, but it's an interesting space which I hope more people will investigate.</li>
	<li><strong>The Physical</strong>
These types of games involve the user physically manipulating either the screen, or the device itself to affect the game play. Games like this have to take this analog data and approximate the user's intent in making that motion or touch. I often see games which should be mini-consoles try to use this type of physical input just because they can ... and it sometimes results in awkward gameplay. More research and testing needs to be done in this space to figure out what works and what doesn't. For an example of the types of things we should be thinking about, check out my article on <a href="http://codecube.net/2010/03/approximating-touch-points/">approximating touch points</a>.</li>
	<li><strong>The Casual</strong>
Casual Games are tearing their way through the game industry. Read this report from the recent game developer's conference for some of that commentary (<a rel="nofollow" href="http://www.designer-notes.com/?p=195" target="_blank">http://www.designer-notes.com/?p=195</a>). Regardless of which side of that divide you land on, I think one thing everyone can agree on is that casual games are here to stay. WP7's push notifications and <a href="http://www.ozymandias.com/asynchronous-games-future-of-casual-gaming">asynchronous game</a> features will be very useful for games like these.</li>
</ul>
I'd love to keep updating this post with links to more resources on each archetype ... if you find something please don't hesitate to post it as a comment and I will update the post as time goes on :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2010-03-22 18:00:11</wp:post_date>
		<wp:post_date_gmt>2010-03-22 23:00:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows-phone-7-game-archetypes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gamedev"><![CDATA[gamedev]]></category>
		<category domain="post_tag" nicename="wp7"><![CDATA[wp7]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1181</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan]]></wp:comment_author>
			<wp:comment_author_email>jonny@jonnyrocks.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.129.76.132</wp:comment_author_IP>
			<wp:comment_date>2010-10-06 16:11:18</wp:comment_date>
			<wp:comment_date_gmt>2010-10-06 21:11:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I heard that ARG will not be possible on first release because we wont have access to cmaera streaming (my own word). Meaning, you can't display what the lens sess. If you know different I would love for you to prove me wrong. I heard this a while back.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1182</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>166.137.137.147</wp:comment_author_IP>
			<wp:comment_date>2010-10-07 05:55:11</wp:comment_date>
			<wp:comment_date_gmt>2010-10-07 10:55:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, I unfortunately do believe you are right on that point. I'm sure the capability will come though in the future :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1181</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>XNA Slides from Orlando CodeCamp 2010</title>
		<link>http://codecube.net/2010/03/xna-slides-from-orlando-codecamp-2010/</link>
		<pubDate>Sun, 28 Mar 2010 20:54:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=328</guid>
		<description></description>
		<contentencoded><![CDATA[The 2010 Orlando CodeCamp has now come to an end. It was a great event, and I'm glad I was a part of it. Many congratulations go out to Esteban, Will, and the rest of the board and volunteers that put it together. With almost 600 .NET developers in attendance, it shows that the central florida area is brimming with talent.

I've uploaded the slides to my presentation which was titled, "<em>How to Finish a Game with XNA</em>". You can download them here:
<a href="http://codecube.net/wp-content/uploads/2010/03/XNA_CodeCamp_2010_Slides.ppt">XNA_CodeCamp_2010_Slides</a>

If you attended the meeting, please don't hesitate to contact me if you have a question about XNA, Windows Phone, or any other topic that we spoke about :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date>2010-03-28 15:54:41</wp:post_date>
		<wp:post_date_gmt>2010-03-28 20:54:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-slides-from-orlando-codecamp-2010</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="codecamp"><![CDATA[codecamp]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<category domain="post_tag" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Enslaving Twitter</title>
		<link>http://codecube.net/2010/03/enslaving-twitter/</link>
		<pubDate>Thu, 01 Apr 2010 02:21:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=331</guid>
		<description></description>
		<contentencoded><![CDATA[I've noticed that in recent years, twitter has become the near defacto "engine" for a number of things:
<ul>
	<li><strong>Random list data for demos</strong>
Scott Guthrie's recent <a href="http://weblogs.asp.net/scottgu/archive/2010/03/18/building-a-windows-phone-7-twitter-application-using-silverlight.aspx">MIX keynote demo</a> is a perfect example of this. He uses twitter to populate a simple listbox using his own feed. I do something similar in the sample project for <a href="http://nbayes.codeplex.com/">nBayes </a>where I let the user choose two different search terms to populate the two indices from twitter.

It's convenient because you don't have to manage the data set. It's a bottomless well of perfectly randomized sample data which makes it perfect for this purpose.</li>
	<li><strong>Using it as a data communication channel</strong>
One of the more interesting usage patterns, the use of Twitter to enable large scale communications and/or data transfer. Jeremy Hilton shows how to use it to <a href="http://socialenchilada.com/blog/post/leveraging-twitter-as-a-voting-engine-free-socks/">manage a voting campaign</a>. Other more "ambiguously practical" projects include <a href="http://blogs.msdn.com/coding4fun/archive/2009/04/01/9525376.aspx">TwitterDrive</a>, and even a <a href="http://www.codeproject.com/KB/WCF/WcfOverTwitter.aspx">WCF Communication Channel</a>!</li>
</ul>
The only unfortunate thing is that whenever I see this stuff used in a demo, they almost always use some xml parsing api to parse out results from the xml API. This can tend to be ugly and error prone. <a href="http://linqtotwitter.codeplex.com/">Linq2Twitter </a>seems like an interesting solution because it lets you write  nice strongly typed linq queries and get back the results.

Depending on what you're doing, having organic sample data can be very useful, there have been <a href="http://bloggingabout.net/blogs/mglaser/archive/2007/06/14/creating-a-custom-data-generator-for-vste-dbpro-aka-datadude.aspx">many </a>projects <a href="http://excel.tips.net/Pages/T002077_Generating_Random_Testing_Data.html">attempting </a>to <a href="http://norefuge.net/vgng/vgng.html">address</a> this in the past. And the use of twitter as a communication channel could be nice because it's infrastructure you wouldn't have to manage and maintain (just be prepared to handle <a href="http://failwhale.com/">fail whales</a>).]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2010-03-31 21:21:29</wp:post_date>
		<wp:post_date_gmt>2010-04-01 02:21:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>enslaving-twitter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Smooth Control with Touch</title>
		<link>http://codecube.net/2010/04/smooth-control-with-touch/</link>
		<pubDate>Mon, 05 Apr 2010 13:01:17 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=338</guid>
		<description></description>
		<contentencoded><![CDATA[The new touch capabilities that are present in XNA 4.0/windows phone 7 present new opportunities for letting the user take control of the games that we can write. Unlike the input from the xbox 360 gamepad, or the mouse though, the user is not restricted to incremental analog adjustments (ie. moving the mouse by 5 pixels per frame, or having the left stick pushed up to a value of .5). So it is completely possible for the user to press his finger in the bottom left of the screen, drag it 20 pixels, lift for 5 seconds, and then press it down somewhere in the upper right of the screen.

In a naive implementation of handling touch input, you could just take the touch point as fact, and the entity would snap directly over to the user's finger in the scenario described above. This may be visually jarring, which of course may be ok for your game. However, if you want your entity to have more of a realistic presence in the game world, to feel more "real", the you probably don't want it teleporting around the screen; At the same time, you want the user's input not to feel laggy or non-responsive.

So how do we handle this fundamental difference in user input techniques?

The problem of incomplete or inconsistent input reminded me of the network prediction sample, which is available on the XNA Creator's Club site (<a href="http://creators.xna.com/en-US/sample/networkprediction">http://creators.xna.com/en-US/sample/networkprediction</a>). In that sample, they present two solutions to deal with the issues brought on by network latency. Particularly, I was interested in their smoothing solution because it solves my problem.
<blockquote>Smoothing is a simple concept. When a network packet is received, rather than teleporting immediately to the new position, we can interpolate gradually from the previous position toward this new location, giving the illusion of continuous motion ...</blockquote>
I took that smoothing concept and applied it here so that when the user re-touches in another location, the onscreen entity will smoothly accelerate towards his current touch point. And because it's using interpolation, it will always catch up to the current location after half a second regardless of where the user is moving his finger.
<ul>
	<li>Required: Windows Phone CTP</li>
	<li>Download: <a href="http://codecube.net/bloguploads/XNATouchSmoothing.zip">XNATouchSmoothing.zip</a></li>
</ul>
The entity class from the project is listed below. The important bits are the "isCatchingUp" and "currentSmoothing" variables. When the input handling code realizes that it needs to catch up, it starts to decay the "currentSmoothing" variable, which is then used in the interpolation to smoothly transition to the current location (via Vector2.Lerp).
<blockquote>
<pre>class Entity
{
    private Vector2 lastKnownPosition;
    private Vector2 touchPosition;
    private float currentSmoothing;

    public Vector2 Position;
    public Texture2D Texture;

    public void Update()
    {
        var touches = TouchPanel.GetState();
        float decay = 1f / 15f;

        bool isTouching = touches.Count &gt; 0;
        bool isCatchingUp = currentSmoothing &gt; 0;

        if (isTouching)
        {
            if (isCatchingUp)
            {
                currentSmoothing -= decay;
            }

            foreach (var touch in touches)
            {
                touchPosition = touch.Position;
            }
        }
        else if (!isCatchingUp)
        {
            currentSmoothing = 1;
        }

        if (!isCatchingUp)
        {
            lastKnownPosition = touchPosition;
        }

        Vector2 positionToDraw = lastKnownPosition;
        if (isCatchingUp)
        {
            Vector2.Lerp(
                ref touchPosition,
                ref lastKnownPosition,
                currentSmoothing,
                out positionToDraw);
        }

        this.Position = new Vector2(
            positionToDraw.X - Texture.Width / 2,
            positionToDraw.Y - Texture.Height / 2);
    }
}</pre>
</blockquote>
Little touches like this add an extra level of polish that players will appreciate ... and yes, I intended the pun ;-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date>2010-04-05 08:01:17</wp:post_date>
		<wp:post_date_gmt>2010-04-05 13:01:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>smooth-control-with-touch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="multitouch"><![CDATA[multitouch]]></category>
		<category domain="post_tag" nicename="wp7"><![CDATA[wp7]]></category>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ASP.NET MVC Charts</title>
		<link>http://codecube.net/2010/06/asp-net-mvc-charts/</link>
		<pubDate>Thu, 10 Jun 2010 05:54:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=352</guid>
		<description></description>
		<contentencoded><![CDATA[There are a few references online about how to get the new ASP.NET Charting controls working with the MVC framework. However, some of them are outdated, and the corresponding information to make it work with MVC2 are spread out. So in an effort to organize the info all in one place, here's a quick step by step guide on how to get this working :-)

First step is to add a reference to the System.Web.DataVisualization assembly

Next create a new charting controller (or simply add the action method below to an existing controller).
<blockquote>
<pre>using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Web.Mvc;
using System.Web.UI.DataVisualization.Charting;

namespace Phoenix.Portal.Controllers
{
    public class ChartController : Controller
    {
        private Font font = new Font("Trebuchet MS", 14, FontStyle.Bold);
        private Color color = Color.FromArgb(26, 59, 105);

        public ActionResult Index()
        {
            <span style="color: #339966;">// Define the Data ... this simple example is just a list of values from 0 to 50</span>
            List&lt;float&gt; values = new List&lt;float&gt;();
            for (int i = 0; i &lt; 50; i++)
            {
                values.Add(i);
            }

            <span style="color: #339966;">// Define the Chart</span>
            Chart Chart2 = new Chart()
            {
                Width = 800,
                Height = 296,
                RenderType = RenderType.BinaryStreaming,
                Palette = ChartColorPalette.BrightPastel,
                BorderlineDashStyle = ChartDashStyle.Solid,
                BorderWidth = 2,
                BorderColor = color
            };
            Chart2.BorderSkin.SkinStyle = BorderSkinStyle.Emboss;

            Chart2.Titles.Add(new Title("Do The Wave!", Docking.Top, font, color));
            Chart2.ChartAreas.Add("Waves");
            Chart2.Legends.Add("Legend");

            <span style="color: #339966;">//Bind the model data to the chart</span>
            var series1 = Chart2.Series.Add("Sin");
            var series2 = Chart2.Series.Add("Cos");

            foreach (int value in values)
            {
                series1.Points.AddY((float)Math.Sin(value * .5) * 100f);
            }

            foreach (int value in values)
            {
                series2.Points.AddY((float)Math.Cos(value * .5) * 100f);
            }

            <span style="color: #339966;">// Stream the image to the browser</span>
            MemoryStream stream = new MemoryStream();
            Chart2.SaveImage(stream, ChartImageFormat.Png);
            stream.Seek(0, SeekOrigin.Begin);
            return File(stream.ToArray(), "image/png");
        }
    }
}</pre>
</blockquote>
Finally, show the chart by pointing to the controller's path:
<blockquote>
<pre>&lt;img src="/chart" /&gt;</pre>
</blockquote>
And that's it! You get a sweet chart as seen below:

<a href="http://codecube.net/wp-content/uploads/2010/06/chart.png"><img class="aligncenter size-medium wp-image-354" title="chart" src="http://codecube.net/wp-content/uploads/2010/06/chart-300x111.png" alt="" width="300" height="111" /></a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>352</wp:post_id>
		<wp:post_date>2010-06-10 00:54:10</wp:post_date>
		<wp:post_date_gmt>2010-06-10 05:54:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>asp-net-mvc-charts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mvc"><![CDATA[mvc]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1149</wp:comment_id>
			<wp:comment_author><![CDATA[Nick]]></wp:comment_author>
			<wp:comment_author_email>nicholas_shippers@urmc.rochester.edu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>128.151.71.16</wp:comment_author_IP>
			<wp:comment_date>2010-06-29 15:17:49</wp:comment_date>
			<wp:comment_date_gmt>2010-06-29 20:17:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am getting an Error	"The type or namespace name 'DataVisualization' does not exist in the namespace 'System.Web.UI' How do I add an assembly reference? I am new to ASP.NET MVC and VS2010 so I am trying to find out what I am missing or does someone know of a good charting tool to use with MVC in VS2010?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1151</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>72.37.132.116</wp:comment_author_IP>
			<wp:comment_date>2010-07-07 07:51:38</wp:comment_date>
			<wp:comment_date_gmt>2010-07-07 12:51:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For the benefit of others reading this, I chatted with Nick over email ... I sent him a sample VS project that implements the steps described above and he was able to resolve the issue in his code :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1159</wp:comment_id>
			<wp:comment_author><![CDATA[Carlos Hernandez]]></wp:comment_author>
			<wp:comment_author_email>carlosenrique102@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>200.122.142.4</wp:comment_author_IP>
			<wp:comment_date>2010-08-18 11:30:27</wp:comment_date>
			<wp:comment_date_gmt>2010-08-18 16:30:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you send me the sample too? I´m sure I´m gonna run into Nick´s problem as well.

Another question: does this code work for MVC2?

Thx.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1161</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>166.137.137.47</wp:comment_author_IP>
			<wp:comment_date>2010-08-19 20:28:58</wp:comment_date>
			<wp:comment_date_gmt>2010-08-20 01:28:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes it works for mvc 2. I literally just copied the code from the article into a new project and it worked. Let me know if you have a specific problem :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1159</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1163</wp:comment_id>
			<wp:comment_author><![CDATA[@5&amp;33p]]></wp:comment_author>
			<wp:comment_author_email>sandeepnaga2000@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.200.2.124</wp:comment_author_IP>
			<wp:comment_date>2010-08-20 14:19:29</wp:comment_date>
			<wp:comment_date_gmt>2010-08-20 19:19:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sir,
Can I embed this image into a Master page..?
And, Can we create a HTML helper for this Chart..?? Can u guide me in this regard.!

As I am novice to MVC kindly spare wid my doubts, if they are very small ones...!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1164</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>166.137.137.82</wp:comment_author_IP>
			<wp:comment_date>2010-08-20 16:12:04</wp:comment_date>
			<wp:comment_date_gmt>2010-08-20 21:12:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, since the image src is simply set to the URL of the chart action method, you can easily include it in a master page. As far as an HTML helper goes, you could if you wanted to. Would just have to add a new extension method. Let me know if you have any other questions :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1163</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1460</wp:comment_id>
			<wp:comment_author><![CDATA[Marc]]></wp:comment_author>
			<wp:comment_author_email>marcqg105@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.12.51.51</wp:comment_author_IP>
			<wp:comment_date>2012-02-28 07:46:47</wp:comment_date>
			<wp:comment_date_gmt>2012-02-28 12:46:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I want to change de ChartType to Line, How can I do it??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330433207.7494";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Moving to New York!</title>
		<link>http://codecube.net/2010/06/moving-to-new-york/</link>
		<pubDate>Tue, 15 Jun 2010 14:26:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=361</guid>
		<description></description>
		<contentencoded><![CDATA[<img class="alignright size-thumbnail  wp-image-362" title="i-love-new-york" src="http://codecube.net/wp-content/uploads/2010/06/i-love-new-york-150x150.gif" alt="" width="150" height="150" />So, it's official ... in a few months, I will be moving up to NY. I'm pretty excited about the prospect, and the family is on board. We are going to visit for a week in the near future to start checking some schools and neighborhoods ... any suggestions or tips would be greatly appreciated :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>361</wp:post_id>
		<wp:post_date>2010-06-15 09:26:57</wp:post_date>
		<wp:post_date_gmt>2010-06-15 14:26:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>moving-to-new-york</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="new-york"><![CDATA[New York]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1144</wp:comment_id>
			<wp:comment_author><![CDATA[David B.]]></wp:comment_author>
			<wp:comment_author_email>sevedd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.DavidRBrown.com</wp:comment_author_url>
			<wp:comment_author_IP>72.37.132.116</wp:comment_author_IP>
			<wp:comment_date>2010-06-15 11:56:41</wp:comment_date>
			<wp:comment_date_gmt>2010-06-15 16:56:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Take your time and you will know its the right place when you get that feeling. Congrats!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1152</wp:comment_id>
			<wp:comment_author><![CDATA[Drew B.]]></wp:comment_author>
			<wp:comment_author_email>flerith@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.202.119.45</wp:comment_author_IP>
			<wp:comment_date>2010-07-11 13:25:20</wp:comment_date>
			<wp:comment_date_gmt>2010-07-11 18:25:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[New York City...
Sandy dreams of going back up thereto live.
You and the family shoud have an awesome time up there.
Congrats, and good luck dood!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1162</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>166.137.137.47</wp:comment_author_IP>
			<wp:comment_date>2010-08-19 20:30:18</wp:comment_date>
			<wp:comment_date_gmt>2010-08-20 01:30:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let me know if you're ever in the area :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1152</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Back in the Saddle</title>
		<link>http://codecube.net/2010/08/back-in-the-saddle/</link>
		<pubDate>Sat, 14 Aug 2010 14:14:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=368</guid>
		<description></description>
		<contentencoded><![CDATA[<div id="_mcePaste">It's been a heck of a whirlwind over the last month or so. I've moved to New Jersey, began working in MidTown Manhattan, and have so far managed to *not* drop dead.</div>
<div></div>
<div id="_mcePaste">Now that I'm starting to get into a daily groove, I'm finally able to start focusing on other interests and projects. Brought my laptop on the train (40 minute train ride in the mornings) and just started to clean house of old files and programs that I don't really use any more. I'm a bit flabbergasted at how many applications use "My Documents" as a dumping ground. As it stands, I have the following folders that I did not create myself</div>
<div id="_mcePaste">
<ul>
	<li>Battlefield Heroes</li>
	<li>Digsby Logs</li>
	<li>Fiddler2</li>
	<li>Integration Services Script Component</li>
	<li>Integration Services Script Task</li>
	<li>My Meetings</li>
	<li>My Stationery</li>
	<li>OneNote Notebooks</li>
	<li>SQL Server Management Studio</li>
	<li>Visual Studio 2008</li>
	<li>Visual Studio 2010</li>
</ul>
</div>
<div>What ever happened to using the AppData directory to store application level data? I mean, I guess I can maybe understand the OneNote Notebooks as it just stores notebooks that I create myself. But some of the others, like Digsby logs, or Visual Studio 2008 simply should not be there. It's braindead simple too to get the path to the application data folder:</div>
<div></div>
<blockquote>
<div><span style="font-family: 'Courier New'; line-height: normal; color: #333333;"><span style="color: #2b91af;">Environment</span>.GetFolderPath(<span style="color: #2b91af;">Environment</span>.<span style="color: #2b91af;">SpecialFolder</span>.ApplicationData))</span></div></blockquote>
<div></div>
<div>Although I know many (all?) of these apps aren't written in .net, I know the APIs are available.</div>
<div id="_mcePaste"><em>P.S. As I sit on the njtransit train writing this, I'm overhearing some lady who is *utterly appalled* and complaining at length to some colleagues about women who wear *flats* in a professional environment. Wow, the level of pomp and over-entitlement in this lady is just insane.</em></div>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2010-08-14 09:14:34</wp:post_date>
		<wp:post_date_gmt>2010-08-14 14:14:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>back-in-the-saddle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1157</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>dbrown@davidrbrown.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.37.132.116</wp:comment_author_IP>
			<wp:comment_date>2010-08-16 12:14:15</wp:comment_date>
			<wp:comment_date_gmt>2010-08-16 17:14:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes the first thing came to mind was not ever program is written in .NET, but since you are a C# developer I can understand.  Glad to see you settled in and I am looking forward to your next project.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Windows Phone 7 WebHelper</title>
		<link>http://codecube.net/2010/09/windows-phone-7-webhelper/</link>
		<pubDate>Fri, 10 Sep 2010 01:14:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=372</guid>
		<description></description>
		<contentencoded><![CDATA[Just a quick post, this is a nice little helper class I wrote to simplify doing HTTP get requests in windows phone 7 applications. Not that it's very difficult, but this hides some of the unnecessary details involved in setting up the asynchronous web request and gives you a super simple API that is easy to understand.

<blockquote>
<pre>public static class WebHelper
{
    public static void Get(string url, Action&lt;string&gt; action)
    {
        Get(new Uri(url), action);
    }

    public static void Get(Uri uri, Action&lt;string&gt; action)
    {
        var request = WebRequest.CreateHttp(uri);

        request.BeginGetResponse(i =&gt;
        {
            var response = request.EndGetResponse(i);
            var sreader = new StreamReader(response.GetResponseStream());
            var result = sreader.ReadToEnd();
            action(result);
        }, null);
    }
}</pre>
</blockquote>
Using this class could not be easier:

<blockquote><pre>string u = @"http://bing.com";
WebHelper.Get(u, html =&gt;
    {
        Debug.WriteLine(html);
    });</pre></blockquote>

This class can (and will) be expanded for things like posting form values ... I'll update this post if I do any of those updates :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>372</wp:post_id>
		<wp:post_date>2010-09-09 20:14:09</wp:post_date>
		<wp:post_date_gmt>2010-09-10 01:14:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows-phone-7-webhelper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="wp7dev"><![CDATA[wp7dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XNA for the EveryDay Developer</title>
		<link>http://codecube.net/2010/08/xna-for-the-everyday-developer/</link>
		<pubDate>Sat, 21 Aug 2010 13:36:30 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=373</guid>
		<description></description>
		<contentencoded><![CDATA[I attended my first NYC Dot Net User Group last night. <a href="http://xnamentor.com/blogs/shapeshifter/">Nick Landry</a> of <a href="http://www.infusion.com/">Infusion development</a> gave an intro talk on XNA with windows phone.

<img class="aligncenter" title="Nick Landry" src="http://c0013464.cdn1.cloudfiles.rackspacecloud.com/x2_2635a16" alt="" width="360" height="270" />

It was quite amusing to listen to the organizers talk about attendee behavior because it reminded me very much of the experiences I had running the <a href="http://onetug.org">Orlando .NET user group</a>. I guess people don't really change, regardless of geographic location :-)

Even though I've been living and breathing XNA for the last few years ... I was reminded last night of how alien a concept game development is to many very competent developers. The concepts which seemed to need the most explaining were the mathematical aspects, and state management.

>In a world of pre-packaged controls, and silverlight behaviors for animation, it seemed that a lot of people had trouble grasping the concept of storing the state, which occurs separately from update, which occurs separately from the drawing. So I started thinking about how one might explain these concepts to your average day to day business application or systems developer.

MVC!

Yep, I said it ... I think Model View Controller is a valid analogy that can be used to explain the way a real time game application works. Think about it:

<ul>
	<li>Model: In XNA demos, the "model" data usually goes into private class level fields of the Game class. This data is usually textures, 3d models, effects, audio, and position data (Matrices, Vectors). The next step that most game developers take is to abstract all that stuff out into sprite, actor, or entity classes.</li>
	<li>Controller: The Update method acts as the controller. It takes user input, or in-game "events" such as collision and facilitates the calculation of the new state based on that information. This is classic "controller" responsibility.</li>
	<li>View: The Draw method is clearly a "view" upon the current state of the model. In a well factored game, there are no calculations in the view. If you're drawing 2d, you iterate over your models, request their texture and position information, and draw it with the SpriteBatch. If 3d, iterate over the models (in the MVC sense), ask them for their Models and draw that.</li>
</ul>

Although the exact expression of "MVC" is not often used in the games industry, in the strictest sense, it is still a variation on the pattern. The concept could be very helpful to speakers and trainers who are teaching XNA to the uninitiated. If they can get the crowd over that initial impedance mismatch, then they can move on to more advanced topics faster, which would surely please the group.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date>2010-08-21 08:36:30</wp:post_date>
		<wp:post_date_gmt>2010-08-21 13:36:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>xna-for-the-everyday-developer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Determining &quot;place&quot; Location by Averaging User Data</title>
		<link>http://codecube.net/2010/12/determining-place-location-by-averaging-user-data/</link>
		<pubDate>Tue, 28 Dec 2010 17:00:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=382</guid>
		<description></description>
		<contentencoded><![CDATA[Location based services like foursquare, gowalla, and the recently minted 'facebook places' let users check in from wherever they are at to inform their friends of their whereabouts. By this point, most places have already been defined in those services, so all you usually have to do is pick from a list of nearby locations. And if it's not on the list, you can just define a new place.

Despite the social weight of these already existing services ... there is still a lush breeding grounds for innovation in location services. If you were building such a service, let's talk about the process of defining a "new place" as a user. What happens if the first user of your app to create a place is actually just around the corner, or if the place is large enough, on the east side rather than the west side. In a naively designed system, your place would be incorrectly defined from that point forward and would offer incorrect position data for the life of your service.

This post proposes a simple system that lets the place's location in the world adjust itself over time. The more checkins you receive, the more accurate the location.

The concept is quite simple actually, by <a href="http://en.wikipedia.org/wiki/Centroid#Of_a_finite_set_of_points">computing the centroid</a> from all known checkins, you find the true 'center' of you place. Doing this calculation could not be any simpler, centroid is just a fancy term for the average vector from a set (ie. Lat/Lon)

<img class="alignnone" title="formula" src="http://upload.wikimedia.org/math/9/1/6/916178b5822b7f7ae920bad7e871d1db.png" alt="" width="199" height="39" />

I made a useful extension method that you can apply to a collection of vectors which can be invoked as such.
<blockquote>
<pre>Vector2 centroid = locations.Centroid();

public static class VectorExtensions
{
    public static Vector2 Centroid(this List&lt;Vector2&gt; points)
    {
        int pointCount = points.Count;
        Vector2 total = Vector2.Zero;
        Vector2 centroid = Vector2.Zero;

        if (pointCount &gt; 0)
        {
            for (int i = 0; i &lt; pointCount; i++)
            {
                var point = points[i];
                total.X += point.X;
                total.Y += point.Y;
            }
            centroid = new Vector2(
                total.X / (float)pointCount,
                total.Y / (float)pointCount);
        }
        return centroid;
    }
}</pre>
</blockquote>
So given a set of points, this would easily give you the logical center of them. Even if there's a random checkin from outside the area, the average will not let the centroid vary by much.

<img class="aligncenter size-full wp-image-387" title="centroid" src="http://codecube.net/wp-content/uploads/2010/08/centroid.png" alt="" width="374" height="240" />

But there is still an issue with this approach. How can this techique be applied to a real world system, you can't expect me to keep a copy of every checkin ever done for a given location ... I mean you can, but for most purposes it's overkill.

Luckily, there is a way to reduce the problem domain to limit the amount of data needed to recalculate the centroid every time there is a new point to consider. By doing a weighted average, your data structure is greatly simplified because all you have to keep in the database for any given location is:
<ul>
	<li>latitude</li>
	<li>longitude</li>
	<li>numberOfCheckins</li>
</ul>
With that, you can find your list of closest places to let the user see if their location is already in the db.

If the user selects an existing place to check in to, you can calc the centroid as follows:
<blockquote>
<pre>public static Vector2 WeightedCentroid(
                                                this Vector2 newPoint,
                                                Vector2 oldCentroid,
                                                int numOfCheckins)
{
    return new Vector2(
        (oldCentroid.X * (float)numOfCheckins + newPoint.X) / ((float)numOfCheckins + 1),
        (oldCentroid.Y * (float)numOfCheckins + newPoint.Y) / ((float)numOfCheckins + 1)
        );
};</pre>
</blockquote>
With that, you can save the value of the new average, along with the latest number of checkins. And that's it!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>382</wp:post_id>
		<wp:post_date>2010-12-28 12:00:06</wp:post_date>
		<wp:post_date_gmt>2010-12-28 17:00:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>determining-place-location-by-averaging-user-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading LendingClub Data in C#</title>
		<link>http://codecube.net/2010/09/reading-lendingclub-data-in-c/</link>
		<pubDate>Mon, 27 Sep 2010 02:11:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=390</guid>
		<description></description>
		<contentencoded><![CDATA[The micro-finance website <a href="http://www.lendingclub.com">LendingClub.com</a> lets you download a snapshot of their loan data for the purposes of analysis ... which is really cool, and not really a thing that financial companies are prone to do. If this is the kind of thing that interests you, I just wanted to show just how easy it was to read and parse this file
<blockquote>
<pre>string filepath = @"c:\users\joel\downloads\loanstats.xml";

XDocument xml = XDocument.Load(filepath);
var loansElements = xml.XPathSelectElements("//loan");
var loans = loansElements.Select(x =&gt; new
    {
        Id = x.Attribute("id").Value,
        AmountRequested = x.Attribute("amount-requested").Value,
        InterestRate = x.Attribute("interest-rate").Value
        // and so on
    });

foreach (var loan in loans)
{
    Console.WriteLine("{0} - {1} @ {2}", loan.Id, loan.AmountRequested, loan.InterestRate);
}</pre>
</blockquote>

They also have each data file available as a CSV if you prefer to do things that way. ]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2010-09-26 21:11:46</wp:post_date>
		<wp:post_date_gmt>2010-09-27 02:11:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>reading-lendingclub-data-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="finance"><![CDATA[finance]]></category>
		<category domain="post_tag" nicename="lendingclub"><![CDATA[lendingclub]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1178</wp:comment_id>
			<wp:comment_author><![CDATA[Makoto]]></wp:comment_author>
			<wp:comment_author_email>makotosan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.173.163.222</wp:comment_author_IP>
			<wp:comment_date>2010-09-28 22:12:26</wp:comment_date>
			<wp:comment_date_gmt>2010-09-29 03:12:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You could also create an XSD schema and create a strongly typed dataset.

LendingClub is indeed pretty cool stuff!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1179</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>67.83.128.108</wp:comment_author_IP>
			<wp:comment_date>2010-09-28 22:43:52</wp:comment_date>
			<wp:comment_date_gmt>2010-09-29 03:43:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yeah, i actually tried that first ... it just generates horrible code. much easier (and actually better performing) to use linq to xml ... since it parses each individual item only as it comes to that tag. The iterator keeps the file stream open and only advances when you're done processing one item. The strongly typed xsd deal would need to load the whole thing to deserialize]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1178</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Khan Academy for Windows Phone 7 is Live!</title>
		<link>http://codecube.net/2010/11/khan-academy-for-windows-phone-7-is-live/</link>
		<pubDate>Tue, 16 Nov 2010 13:02:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=393</guid>
		<description></description>
		<contentencoded><![CDATA[After reviewing the <a href="http://msdn.microsoft.com/en-us/library/aa511258.aspx">UI design guidelines</a>, re-theming the application, and submitting on Sunday, the application was approved about 24 hours later. It's now live on the marketplace!

You can download it by <a title="Download the App via Zune Marketplace" href="http://goo.gl/2mwrO">clicking here</a> if you have the Zune software installed, or just navigating to <strong>Marketplace &gt; Books &amp;  Reference &gt; Reference</strong>, or of course, just searching the marketplace for "Khan Academy".

This has been a great learning experience, and I hope to continue working with the Khan Academy to iterate and improve on the application based on user feedback. If you do have feedback, please don't hesitate to leave a comment, email me, or create a discussion on the <a href="http://khanviewer.codeplex.com/">codeplex site</a>. And of course, <strong>Rate and Review</strong> the application after you download it :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date>2010-11-16 08:02:25</wp:post_date>
		<wp:post_date_gmt>2010-11-16 13:02:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>khan-academy-for-windows-phone-7-is-live</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="wp7dev"><![CDATA[wp7dev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introducing Khan Academy for Windows Phone 7</title>
		<link>http://codecube.net/2010/11/introducing-khan-academy-for-windows-phone-7/</link>
		<pubDate>Sat, 06 Nov 2010 15:16:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=400</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://codecube.net/wp-content/uploads/2010/11/ApplicationIcon.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; float: left; padding-top: 0px; border: 0px;" title="ApplicationIcon" src="http://codecube.net/wp-content/uploads/2010/11/ApplicationIcon_thumb.png" alt="ApplicationIcon" width="66" height="66" align="left" border="0" /></a>Very proud to introduce a project I’ve been working on for the past few weeks. A Windows Phone 7 app to browse and watch the <a href="http://khanacademy.org">Khan Academy</a> videos.

I’ve been extremely impressed with the quality and value of the videos since I discovered the site a few years ago. And it was no surprise when Bill Gates called Sal Khan his <a href="http://money.cnn.com/2010/08/23/technology/sal_khan_academy.fortune/index.htm">favorite teacher</a>.

<a href="http://codecube.net/wp-content/uploads/2010/11/screenshot_1.png"><img class="aligncenter size-medium wp-image-403" title="Khan Academy Screenshot" src="http://codecube.net/wp-content/uploads/2010/11/screenshot_1-180x300.png" alt="" width="180" height="300" /></a>
I wanted a way to contribute to the cause, and with Microsoft’s new platform just launching, and the fact that I wanted a project to focus on for the Windows Phone it seemed a natural fit.

In keeping with the spirit of the Khan Academy’s <a href="http://sites.google.com/a/khanacademy.org/forge/for-developers/getting-started-with-the-code">open source development ethos</a>, I am making this project open source as well on GitHub:
<a href="https://github.com/joelmartinez/Khan-Academy-for-Windows-Phone">https://github.com/joelmartinez/Khan-Academy-for-Windows-Phone</a>

I plan on maturing the app over time with better styling, and more features, especially as I learn more about the silverlight/phone platform. The project is almost ready to submit to the marketplace, just need to complete a bit more testing … so keep an eye on this space for more info about when that happens.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>400</wp:post_id>
		<wp:post_date>2010-11-06 10:16:40</wp:post_date>
		<wp:post_date_gmt>2010-11-06 15:16:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>introducing-khan-academy-for-windows-phone-7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<category domain="post_tag" nicename="wp7"><![CDATA[wp7]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1208</wp:comment_id>
			<wp:comment_author><![CDATA[David Brown]]></wp:comment_author>
			<wp:comment_author_email>sevedd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.41.217.102</wp:comment_author_IP>
			<wp:comment_date>2010-11-15 13:13:45</wp:comment_date>
			<wp:comment_date_gmt>2010-11-15 18:13:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice!!! WoW! Impressed indeed, but not surprised.  You are showing your true potential. Congrats!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1207</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>67.83.128.108</wp:comment_author_IP>
			<wp:comment_date>2010-11-14 19:16:31</wp:comment_date>
			<wp:comment_date_gmt>2010-11-15 00:16:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks ... I just submitted it today, assuming it passes certification it should be on the marketplace in a few days :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1206</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1205</wp:comment_id>
			<wp:comment_author><![CDATA[Makoto]]></wp:comment_author>
			<wp:comment_author_email>makotosan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.makotosan.com</wp:comment_author_url>
			<wp:comment_author_IP>66.192.28.194</wp:comment_author_IP>
			<wp:comment_date>2010-11-12 15:47:52</wp:comment_date>
			<wp:comment_date_gmt>2010-11-12 20:47:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great job!  Did you end up getting a Windows Phone 7 phone?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1206</wp:comment_id>
			<wp:comment_author><![CDATA[Slobo]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kulaid.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>24.110.108.14</wp:comment_author_IP>
			<wp:comment_date>2010-11-14 19:02:53</wp:comment_date>
			<wp:comment_date_gmt>2010-11-15 00:02:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congrats on your first WP7 app. I will install it asap. Keep up the good work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5100</wp:comment_id>
			<wp:comment_author><![CDATA[vishal ghotge]]></wp:comment_author>
			<wp:comment_author_email>vvghotge@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.235.47.158</wp:comment_author_IP>
			<wp:comment_date>2013-03-12 08:32:02</wp:comment_date>
			<wp:comment_date_gmt>2013-03-12 13:32:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Joel - I am a big fan of khan academy, so thank you very much for the windows and the windows phone apps. Do you have any plans in to update the windows phone app in the near future? If not I was planning on writing a version of the app - adding some more features that I miss. (mostly as a hobby project). If you could respond that would be awesome! Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363095122.2593939304351806640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>P2P Lending Data</title>
		<link>http://codecube.net/2011/02/p2p-lending-data/</link>
		<pubDate>Wed, 02 Feb 2011 03:57:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=406</guid>
		<description></description>
		<contentencoded><![CDATA[Just wanted to point you to a recent project of mine which is now ready for consumption: <a href="http://p2plendingdata.com">http://p2plendingdata.com</a>
<p style="text-align: center;"><a href="http://p2plendingdata.com"><img class="aligncenter" title="P2P Lending Data" src="http://p2plendingdata.com/content/logo.png" alt="" width="274" height="29" /></a></p>
From the site description:
<blockquote>So what's this all about? we take data from <a href="http://www.lendingclub.com/">LendingClub</a>, mash it up in our database, and try to extract some insight for Peer to Peer investors to use in their search for new notes to invest in.</blockquote>
Since Lending Club so generously let's anyone<a href="https://www.lendingclub.com/info/download-data.action"> download a daily dump of their Loan database</a>, it was fairly easy to import it into a database and make some reports. Astute readers will note that I've been toying with this idea <a href="http://codecube.net/2010/09/reading-lendingclub-data-in-c/">for a few months</a>, but it was only the recent launch of <a href="http://appharbor.com/">AppHarbor</a> that pushed me to polish it up and get it out there.

It's obviously relatively simple at this time, but I do have plans to add additional features. Namely:
<ul>
	<li>oData endpoint so users can use something like <a href="http://www.powerpivot.com/">PowerPivot</a> to slice and dice the data to their heart's content.</li>
	<li>Statistical ratings of individual notes.</li>
	<li>More reports!</li>
</ul>
If you are a lending club investor and find this useful, please let me know in the comments, via email, or on <a href="http://twitter.com/#!/joelmartinez">twitter</a>.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date>2011-02-01 22:57:48</wp:post_date>
		<wp:post_date_gmt>2011-02-02 03:57:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>p2p-lending-data</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<category domain="post_tag" nicename="lendingclub"><![CDATA[lendingclub]]></category>
		<category domain="post_tag" nicename="p2p-lending"><![CDATA[p2p lending]]></category>
		<category domain="post_tag" nicename="peer-to-peer-lending"><![CDATA[Peer to Peer Lending]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Game Hack Day</title>
		<link>http://codecube.net/2011/02/game-hack-day/</link>
		<pubDate>Fri, 25 Feb 2011 05:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=419</guid>
		<description></description>
		<contentencoded><![CDATA[If you're a game developer or artist in or near NYC, sign up for Game Hack Day: <a href="http://gamehackday.org/71fdk">http://gamehackday.org/71fdk</a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>419</wp:post_id>
		<wp:post_date>2011-02-25 00:11:00</wp:post_date>
		<wp:post_date_gmt>2011-02-25 05:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>game-hack-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="gamedev"><![CDATA[GameDev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lmnd.st for wp7?</title>
		<link>http://codecube.net/2011/03/lmnd-st-for-wp7/</link>
		<pubDate>Fri, 11 Mar 2011 18:09:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=421</guid>
		<description></description>
		<contentencoded><![CDATA[<p style="text-align: center;">In honor of the NY <a href="http://startupbus.com/">Startupbus</a> at SXSW ... a wp7 app for lmnd.st :-)</p>
<p style="text-align: center;"><a href="http://lmnd.st/"><img class="aligncenter size-medium wp-image-422" title="Lemonade Stand for WP7" src="http://codecube.net/wp-content/uploads/2011/03/lmndst_wp7-167x300.png" alt="" width="167" height="300" /></a></p>
<p style="text-align: center;">Yes, it's pointing to the live API ... though only the display of the current listings is built right now. Total time spent thus far:</p>

<ul>
	<li>50 minutes on the train this morning</li>
	<li>1 hour during lunch</li>
</ul>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date>2011-03-11 13:09:37</wp:post_date>
		<wp:post_date_gmt>2011-03-11 18:09:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>lmnd-st-for-wp7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Udder Chaos for XBox Live Indie Games in PlayTest</title>
		<link>http://codecube.net/2011/03/udder-chaos-for-xbox-live-indie-games-in-playtest/</link>
		<pubDate>Wed, 30 Mar 2011 04:51:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=427</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://codecube.net/wp-content/uploads/2011/03/ucicon.png"><img class="alignleft size-full wp-image-445" style="padding: 0 5 5 0;" title="Udder Chaos for XBox" src="http://codecube.net/wp-content/uploads/2011/03/ucicon.png" alt="" width="64" height="64" /></a>Big milestone for the <a href="http://flatredball.com">FlatRedBall team</a>, Udder Chaos has been submitted for play test on XBox Live Indie Games! :-)

AppHub members can download the game for play test <a href="http://catalog.create.msdn.com/en-US/GameDetails.aspx?catalogEntryId=468b2219-f768-48f6-bc01-845bbfa8542d&amp;type=1">here</a>, and give us feedback on the game's forum thread <a href="http://forums.create.msdn.com/forums/t/79323.aspx">here</a>.

<object width="480" height="390"><param name="movie" value="http://www.youtube.com/v/DcjaG7YgCj4?fs=1&amp;hl=en_US" /><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><embed type="application/x-shockwave-flash" width="480" height="390" src="http://www.youtube.com/v/DcjaG7YgCj4?fs=1&amp;hl=en_US" allowscriptaccess="always" allowfullscreen="true"></embed></object>

I came onto this project rather recently, the game was mostly done.  So I've been working for the last few weeks on the leaderboards implementation and other polish tasks and bugs along with a great team: Vic, Dave, Pablo, and Taylor (not to mention the other guys on the credits that worked on the game before I got involved).

One interesting part of this project has been the cross platform development. It's a topic that I'd like to go into more detail another day, but the game builds and runs simultaneously on windows, xbox, and windows phone. There are some definite challenges to this kind of development, especially when you have to consider different input mechanisms and screen/menu layouts on the different platforms. It's been a great experience so far, and it's fueling some thoughts about how to structure code to facilitate cross-platform dev.

We plan on getting the windows phone build out after the xbox version ships. Can't wait to see the feedback we get in playtest, and hopefully we'll ship it soon.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date>2011-03-29 23:51:29</wp:post_date>
		<wp:post_date_gmt>2011-03-30 04:51:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>udder-chaos-for-xbox-live-indie-games-in-playtest</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Khan Academy for WP7 Review</title>
		<link>http://codecube.net/2011/03/khan-academy-for-wp7-review/</link>
		<pubDate>Wed, 16 Mar 2011 03:32:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=428</guid>
		<description></description>
		<contentencoded><![CDATA[This was a nice little surprise :-) My (unofficial) Khan Academy app for windows phone 7 got reviewed on an episode of<a href="http://channel9.msdn.com/Shows/Hot-Apps/Hot-Apps-Butterfly-Deluxe-Moon-Pipes-Khan-Academy-MyComic"> <em>Hot Apps</em> By Laura Foy</a> - check the video below.

<object width="512" height="288" type="application/x-silverlight-2" data="data:application/x-silverlight-2,"><param name="minRuntimeVersion" value="4.0.50401.0" /><param name="source" value="http://channel9.msdn.com/scripts/Channel9.xap?v=1.5" /><param name="initParams" value="mediaurl=http://files.ch9.ms/ch9/075e/3b800fac-ea5d-422c-aaf5-9e930033075e/HAButterfly.ism/manifest,thumbnail=http://media.ch9.ms/ch9/075e/3b800fac-ea5d-422c-aaf5-9e930033075e/HAButterfly_512_ch9.jpg,deliverymethod=adaptivestreaming,autoplay=false,entryid=3b800facea5d422caaf59e930033075e" /></object>

Only reason I noticed was because I checked the download stats and saw a sustained spike in traffic a few weeks ago. Thanks Laura!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date>2011-03-15 22:32:59</wp:post_date>
		<wp:post_date_gmt>2011-03-16 03:32:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>khan-academy-for-wp7-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="Apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lemonade Stand for WP7</title>
		<link>http://codecube.net/2011/03/lemonade-stand-for-wp7/</link>
		<pubDate>Thu, 17 Mar 2011 11:14:32 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=431</guid>
		<description></description>
		<contentencoded><![CDATA[Fresh on the Marketplace, Lemonade Stand for Windows Phone 7 now <del>available for download</del>! <em><strong>Please note:</strong> <a href="http://lmnd.st">LMND.st</a> is down until further notice, the app has been removed from the marketplace until that time.</em>
<p style="text-align: center;"><a href="http://social.zune.net/redirect?type=phoneApp&amp;id=de95fd87-704c-e011-854c-00237de2db9e"><img class="aligncenter size-full wp-image-435" title="Download Lemonade Stand for Windows Phone 7" src="http://codecube.net/wp-content/uploads/2011/03/download_tile.png" alt="" width="208" height="50" /></a></p>

<blockquote>Welcome to Lemonade Stand, a new and easy way to buy and sell locally. Lemonade Stand is a neighborly commerce platform that enables people to buy and sell goods within a community. Artists, craftspeople and entrepreneurs can share their wares with their neighbors while members of the community can find and buy close to home. An easy way to shop while supporting your local economy and the talent within it- what could be more wholesome?</blockquote>
This application had somewhat of an interesting birth. Right before this year's <a href="http://sxsw.com/interactive">SXSW</a> began, I came across the <a href="http://startupbus.com">StartupBus</a> project. A group of entrepreneurs (or rather, busrepeneurs) would join forces on the bus to sxsw, and over the course of the road trip, produce and launch a startup.

<a href="http://startupbus.com/teams/54-lemonade-stand">One of the teams</a> took an interesting approach by publishing a <a href="http://lmnd.st/api.html">RESTful API</a> as the first step to creating an Android and IPhone app for their startup. A WP7 app was regrettably not on the roadmap, so as I went to bed on Thursday night I wondered what it would take to gin up a version for wp7 based on their public API. When I woke up, I guess my subconscious was thinking about it all night, because I shot out of bed and saved a few pages of the <a href="http://lmnd.st">lmnd.st</a> site, including some of the art assets to my laptop. When I got on the train, I started by writing the rest calls and models, and experimenting with some of the different layouts. Of course I didn't finish as my train ride (or at least the first train I take towards NYC) is only about 50 minutes. So I decided to hit up the closest Starbucks for lunch to leach off their WiFi. Now that I had network access, I started testing the rest calls and tweaking some of the layout/design to match the mockups they had put up on their site (of course with the <a href="http://en.wikipedia.org/wiki/Metro_Design_Language">Metro</a> design language as inspiration).

Before my lunch hour was over, I had a working prototype. So I banged out a quick <a href="http://codecube.net/2011/03/lmnd-st-for-wp7/">blog post</a> and celebratory <a href="http://twitter.com/#!/joelmartinez/status/46272270661976065">tweet</a> before heading back to the office. Within a few hours, I got a twitter DM from one of the <a title="Christopher Kennedy" href="http://twitter.com/#!/kennedysgarage">lmndst team members</a> asking me to call them. <a href="http://twitter.com/#!/jonmarkgo">Jon</a> was super nice and thanked me for the effort. Then a bit later he called me back and asked if I could send him the app so they could show it off at sxsw. I asked him if he had a wp7 device and he said there may have been one on the startup bus from the sponsors, but sounded unsure. That's when I remembered that a member of the wp7 team (Ben Lower) was in sxsw <a href="http://twitter.com/#!/benlower/status/46335744742137857">handing out phones</a> in exchange for pitches. So I <a href="http://twitter.com/#!/joelmartinez/status/46318396530360321">introduced them</a> (and got some <a href="http://hashable.com">hash cred</a> while I was at it ;) ) and they <a href="http://twitter.com/#!/benlower/status/46400901329588225">got a phone to show off the app</a>. Then I went home and polished up the app a tiny bit before sending it off to the lmnd.st team and submitting it to the wp7 marketplace.

The rest of the weekend was pretty calm, I followed along on twitter as the team set up a real lemonade stand to cool down parched festival goers. Those guys put forth a pretty big effort as is evident by their many mentions in follow up articles to sxsw. I was even indirectly mentioned in <a href="http://washingtonexaminer.com/blogs/opinion-zone/2011/03/chris-jeane-busepreneur">one of the articles</a> As an "unknown Supporter" :P
<blockquote>The team created the Android and iPhone applications, but they were greeted with an exceptional surprised when they woke up in Austin on Friday: A Window's mobile version of their app.  <strong>A supporter unknown to any on the project team</strong> who had been following their progress on the New York Observer  blog took their API and created the Windows version.</blockquote>
Now that sxsw is over, the team says they will continue development of lmndst. I too plan on more iterations to at least reach feature parity with the iOS and Android apps.

One parting note, on the Saturday after I first published the app, I briefly skimmed over the premise of lemonade stand with my wife at dinner. I was surprised when, on Sunday as I was talking about needing a new laptop, my seven year old son said, "you can sell your old one on Lemonade Stand". So maybe there is something to this idea ;)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2011-03-17 06:14:32</wp:post_date>
		<wp:post_date_gmt>2011-03-17 11:14:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>lemonade-stand-for-wp7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1250</wp:comment_id>
			<wp:comment_author><![CDATA[slobo80]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kulaid.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>24.110.108.14</wp:comment_author_IP>
			<wp:comment_date>2011-03-22 20:23:00</wp:comment_date>
			<wp:comment_date_gmt>2011-03-23 01:23:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good job! The app looks nice. I will definitely use it more once it gets the ability to add new item.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1300843380.8662";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>WebHelper for Desktop CLR</title>
		<link>http://codecube.net/2011/04/webhelper-for-desktop-clr/</link>
		<pubDate>Mon, 04 Apr 2011 16:53:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=451</guid>
		<description></description>
		<contentencoded><![CDATA[I recently posted a nice little <a href="http://codecube.net/2010/09/windows-phone-7-webhelper/">helper class</a> that I had been using on windows phone 7. This version works on the desktop CLR (there's a minor difference in how you create a web request) ... and also adds a new method that lets you get direct access to the response stream. So I figured I'd post it as it is a generally useful class.
<pre>public static class WebHelper
{
    public static WaitHandle Get(string url, Action&lt;WebResponse&gt; action)
    {
        return Get(new Uri(url), action);
    }

    public static WaitHandle Get(Uri uri, Action&lt;WebResponse&gt; action)
    {
        var request = WebRequest.CreateDefault(uri);
        ManualResetEvent handle = new ManualResetEvent(false);
        request.BeginGetResponse(i =&gt;
        {
            var response = request.EndGetResponse(i);
            action(response);
            handle.Set();
        }, null);

        return handle;
    }

    public static WaitHandle Get(string url, Action&lt;string&gt; action)
    {
        return Get(new Uri(url), action);
    }

    public static WaitHandle Get(Uri uri, Action&lt;string&gt; action)
    {
        return Get(uri, response =&gt;
        {
            var sreader = new StreamReader(response.GetResponseStream());
            var result = sreader.ReadToEnd();
            action(result);
        });
    }
}</pre>
For some example usage, you can easily proxy a download through an ASP.NET MVC web app:
<pre>        public ActionResult Get(string q)
        {
            Stream res = new MemoryStream();
            string contentType = "text/html";

            bool timedOut = !WebHelper
                .Get(q, html =&gt; 
                    {
                        res = html.GetResponseStream();
                        contentType = html.ContentType;
                    })
                .WaitOne(30000); // wait 30 seconds to get a response

            if (timedOut)
            {
                StreamWriter writer = new StreamWriter(res);
                writer.WriteLine("The request timed out, sorry!");
                res.Seek(0, SeekOrigin.Begin);
            }

            return File(res, contentType);
        }</pre>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2011-04-04 11:53:31</wp:post_date>
		<wp:post_date_gmt>2011-04-04 16:53:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>webhelper-for-desktop-clr</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lego/Snap-Circuits Mashup</title>
		<link>http://codecube.net/2011/04/legosnap-circuits-mashup/</link>
		<pubDate>Sun, 10 Apr 2011 15:59:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=454</guid>
		<description></description>
		<contentencoded><![CDATA[My daughter Layla mentioned a few days ago that they are teaching her how to program simple <a href="http://mindstorms.lego.com">Mindstorms</a> robots at school. As a software developer, I was of course super excited when she started explaining the logic she was "writing" in the visual programming language to make her little mindstorms robot move around and turn. So then today my son Ashton goes upstairs and grabs all his legos, and the <a href="http://codecube.net/2009/12/snap-circuits-review/">Snap Circuits</a> I bought him a few years ago, and asked me to help him build a robot. The options were pretty limited because the snap circuits kit only had one motor, and the legos he has don't have any gears or anything.

<a href="http://codecube.net/wp-content/uploads/2011/04/WP_000465.jpg"><img class="size-medium wp-image-458 alignnone" style="margin: 10px;" title="Ashton and Layla's robot" src="http://codecube.net/wp-content/uploads/2011/04/WP_000465-300x225.jpg" alt="" width="300" height="225" /></a>

It was a blast helping the kids with it :-) The biggest challenge was figuring out how to transfer the power from the snap circuits motor to the lego pieces. We ended up cobbling together a rudimentary axle, and used a rubber band to transfer the torque from the motor to the axle.

<a href="http://codecube.net/wp-content/uploads/2011/04/WP_000471.jpg"><img class="alignnone size-medium wp-image-460" style="margin: 10px;" title="the &quot;transmission&quot;" src="http://codecube.net/wp-content/uploads/2011/04/WP_000471-300x225.jpg" alt="" width="300" height="225" /></a>

And it totally works!

<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/4bduoIpeWjE?hl=en&amp;fs=1" /><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><embed type="application/x-shockwave-flash" width="425" height="344" src="http://www.youtube.com/v/4bduoIpeWjE?hl=en&amp;fs=1" allowscriptaccess="always" allowfullscreen="true"></embed></object>

well, mostly ... the motor was too weak to actually move the car without first getting a push ... but as you can see above, they got it to actually turn the wheels :-) Of course it wasn't done all on their own ... I gave them help along the way, but I'm happy that they worked through the process of figuring out something like. And most importantly, it was because they wanted to ... I can't wait to see what this generation does with all the technology they are growing up with.

<a href="http://codecube.net/wp-content/uploads/2011/04/WP_000476.jpg"><img class="alignnone size-thumbnail wp-image-464" title="WP_000476" src="http://codecube.net/wp-content/uploads/2011/04/WP_000476-150x150.jpg" alt="" width="150" height="150" /></a><a href="http://codecube.net/wp-content/uploads/2011/04/WP_000475.jpg"><img class="alignnone size-thumbnail wp-image-465" title="WP_000475" src="http://codecube.net/wp-content/uploads/2011/04/WP_000475-150x150.jpg" alt="" width="150" height="150" /></a><a href="http://codecube.net/wp-content/uploads/2011/04/WP_000467.jpg"><img class="alignnone size-thumbnail wp-image-466" title="WP_000467" src="http://codecube.net/wp-content/uploads/2011/04/WP_000467-150x150.jpg" alt="" width="150" height="150" /></a><a href="http://codecube.net/wp-content/uploads/2011/04/WP_000468.jpg"><img class="alignnone size-thumbnail wp-image-468" title="WP_000468" src="http://codecube.net/wp-content/uploads/2011/04/WP_000468-150x150.jpg" alt="" width="150" height="150" /></a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2011-04-10 10:59:22</wp:post_date>
		<wp:post_date_gmt>2011-04-10 15:59:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>legosnap-circuits-mashup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Udder Chaos in Peer Review</title>
		<link>http://codecube.net/2011/04/udder-chaos-in-peer-review/</link>
		<pubDate>Mon, 11 Apr 2011 13:36:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=457</guid>
		<description></description>
		<contentencoded><![CDATA[Udder Chaos for 360 has been published to peer review!

<a href="http://forums.create.msdn.com/forums/t/80247.aspx">http://forums.create.msdn.com/forums/t/80247.aspx</a>

If you've got an AppHub account, please take a moment and give us a review.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2011-04-11 08:36:31</wp:post_date>
		<wp:post_date_gmt>2011-04-11 13:36:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>udder-chaos-in-peer-review</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="xna"><![CDATA[XNA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Minor PowerShell Prompt Customization</title>
		<link>http://codecube.net/2011/07/minor-powershell-prompt-customization/</link>
		<pubDate>Thu, 14 Jul 2011 10:30:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=472</guid>
		<description></description>
		<contentencoded><![CDATA[Having recently started using PowerShell a lot more, I wanted to share a minor customization I made to my powershell prompt.
<pre>function prompt
{
    $loc = $(get-location).ToString()
    $usr = ($env:userprofile).ToString()
    if ($loc.StartsWith($usr, $true,[System.Globalization.CultureInfo].CurrentCulture)) {
	$loc = "~"+$loc.SubString($usr.Length, $loc.Length - $usr.Length)
    }
    Write-Host ("PS " + $loc +"&gt;") -nonewline -foregroundcolor Yellow
    return " "
}</pre>
all it does is that when I'm in my user profile directory, it shortens the prompt to something like: <strong>PS ~&gt;</strong>. Since you can use the '~' character as a shortcut for your user directory, may as well shorten the path to give you more space. Also, it makes the prompt yellow so that it can be more easily distinguished from the rest of the output.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2011-07-14 05:30:31</wp:post_date>
		<wp:post_date_gmt>2011-07-14 10:30:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>minor-powershell-prompt-customization</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MS Tech-Ed 2011/Udder Chaos on XBLIG</title>
		<link>http://codecube.net/2011/05/ms-tech-ed-2011/</link>
		<pubDate>Tue, 24 May 2011 16:36:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2011/05/ms-tech-ed-2011/</guid>
		<description></description>
		<contentencoded><![CDATA[What a whirlwind of a few weeks … first order of business, I can’t believe that I hadn’t even posted a link to this, but Udder Chaos was released on XBox Live Indie Games several weeks ago.

<a href="http://goo.gl/g0DfL"><img style="margin: 0px 10px 0px 0px; display: inline; float: left;" title="Udder Chaos" src="http://download.xbox.com/content/xna/assets/5855082D_World/webboxart.jpg" alt="Udder Chaos" align="left" /></a>

It’s <a href="http://www.dealspwn.com/xbligotw-ultraviolet-udder-chaos-delta-energy-ii-57221">received</a> favorable reviews (or <a href="http://www.gamemarx.com/video/trials/65/udder-chaos.aspx?amp&amp;amp">mildly tepid</a> at worst), and was even featured on Kotaku’s favorites list for a bit. All in all, I had a great time helping the team get that game to market, and is a testament to <a href="http://flatredball.com">FlatRedBall</a>. Though we’re all working on other projects right now, a <a title="Udder Chaos for Windows Phone" href="http://codecube.net/2011/07/udder-chaos-for-windows-phone/">windows phone 7 version</a> isn’t far away <img class="wlEmoticon wlEmoticon-smile" style="border-style: none;" src="http://codecube.net/wp-content/uploads/2011/05/wlEmoticon-smile.png" alt="Smile" />
<blockquote>“Udder Chaos plays like one of the classic lightgun games of yesteryear, evoking nostalgic memories of the likes of Point Blank and Duck Hunt.” – <a href="http://www.dealspwn.com/xbligotw-ultraviolet-udder-chaos-delta-energy-ii-57221">Jonathan Lester of DealSpwn</a></blockquote>
But on to the fun, last week I had the pleasure of attending Tech-Ed 2011 … wow, what a blast that was. This is just a brief offload of my notes of a few of the cool things I saw. Definitely need to follow up on some of these
<ul>
	<li>F# – interesting as always, did a hands on lab, but am still trying to find a compelling reason to really look at it in detail.</li>
	<li>Task Parallel Library/Asynchrony
<ul>
	<li>Async Actions – I had seen this on the feature lists before, but hadn’t had a chance to actually use them before. Very cool! if your app is IO bound (i.e. database access), you should absolutely be using this.</li>
	<li>By far, one of the coolest pieces of tech, SingalR uses some of the async request infrastructure mentioned above to provide some really sweet push notification functionality in a scalable way.  This is one to watch</li>
</ul>
</li>
	<li>Windows Server AppFabric Cache – saw some cool sessions on this, glad to see that they’ve finally gone to market after seeing the first version back in PDC 2008.
<ul>
	<li>My takeaway here is that you will want to do a lot of capacity planning to understand read/write frequency, and max # of projected objects. This will drive memory/server requirements.</li>
	<li>Also, the primary use case is not specifically to increase response times, although that will often be a side-effect … but actually to lighten the load on the database (or other external data source). Because the db is often the bottleneck, this gives you an easily scalable layer between your application and the database.</li>
</ul>
</li>
	<li>Lots of cool HTML5 and client topics, in no particular order:
<ul>
	<li>Modernizr is cool</li>
	<li>jQuery Visualize plugin is cool</li>
	<li>jQuery.Unobtrusive is cool</li>
	<li>must look into KnockoutJS</li>
</ul>
</li>
	<li>And finally, NuGet represent! am really amped up for how easy NuGet makes dependency management and lib deployment.</li>
</ul>
Anyways, that was just a braindump of some of my notes … I still have a mountain of stuff to catch up and follow up on. Overall, very impressed with the conference, although one can make the argument that it was almost <em>too big</em>.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>476</wp:post_id>
		<wp:post_date>2011-05-24 11:36:36</wp:post_date>
		<wp:post_date_gmt>2011-05-24 16:36:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ms-tech-ed-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Exec-Sql PowerShell Function</title>
		<link>http://codecube.net/2011/07/exec-sql-powershell-function/</link>
		<pubDate>Fri, 15 Jul 2011 13:00:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=481</guid>
		<description></description>
		<contentencoded><![CDATA[And the hits just keep on coming ... here's a simple little function which executes a query against a database and pipelines the results as PSObjects.
<blockquote>
<pre>.SYNOPSIS
Executes SQL against the supplied connection string.
.DESCRIPTION
Executes SQL against the supplied connection string. The result set is then pipelined as a PSObject which can subsequently be formatted and filtered any way you choose.
.PARAMETER query
The query to execute
.PARAMETER connstring
The connection string to use
.EXAMPLE
PS C:\&gt; Exec-Sql -q "select top 1 * from common.country" -conn ""
.EXAMPLE
PS C:\&gt; Exec-Sql -q "select * from common.country (nolock)" -conn "" | where {$_.Code -eq "AX" } | select code, name
#&gt;
function global:Exec-Sql
{
param ([Alias("q")]$query, [Alias("conn")]$connstring)

[system.reflection.assembly]::LoadWithPartialName("System.Data")
$connection = New-Object -TypeName System.Data.SqlClient.SqlConnection

$connection.ConnectionString = $connstring
$connection.Open()

$command = New-Object -TypeName System.Data.SqlClient.SqlCommand

$command.Connection = $connection
$command.CommandText = $query
$reader = $command.ExecuteReader()

$fieldcount = $reader.FieldCount

while ($reader.Read())
{
$o = new-object psobject

for ($i=0;$i -lt $fieldcount;$i++)
{
$o | add-member -membertype noteproperty $reader.GetName($i) $reader[$reader.GetName($i)].ToString()

}

write-output -inputobject $o
}

$connection.Close()

}</pre>
</blockquote>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2011-07-15 08:00:15</wp:post_date>
		<wp:post_date_gmt>2011-07-15 13:00:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>exec-sql-powershell-function</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Udder Chaos for Windows Phone</title>
		<link>http://codecube.net/2011/07/udder-chaos-for-windows-phone/</link>
		<pubDate>Thu, 21 Jul 2011 13:42:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=486</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://goo.gl/yw0Ii"><img title="Udder Chaos for WP7" src="http://www.windowsphoneapplist.com/marketplace/images/udder_chaos27179.png" alt="" width="200" height="200" /></a>

Now available on the Windows Phone marketplace, <a href="http://goo.gl/yw0Ii">Udder Chaos</a>!
<blockquote>"Protect your cows from Alien hordes as they try to abduct your precious livestock. Alien hordes too hard? Upgrade your weapons and gain smart bombs to blow them out of the sky.

Includes global leaderboards, endless mode, easier kid-mode, and option to remove ads."</blockquote>
The trial is completely fully featured and ad-supported ... and if you purchase the game, all ads are removed.

<a href="zune://navigate?phoneAppID=1d15dc55-2ca0-e011-986b-78e7d1fa76f8"><img class="alignnone" title="Download Udder Chaos for your Windows Phone" src="http://www.windowsphoneapplist.com/forum/styles/monsmntheme/theme/images/download.png" alt="" width="160" height="50" /></a>

<em>If you've got an XBox 360, you can also <a href="http://goo.gl/g0DfL">download Udder Chaos on the XBox Live Indie Games</a> channel!</em>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2011-07-21 08:42:07</wp:post_date>
		<wp:post_date_gmt>2011-07-21 13:42:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>udder-chaos-for-windows-phone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1346</wp:comment_id>
			<wp:comment_author><![CDATA[slobo]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.88.47.127</wp:comment_author_IP>
			<wp:comment_date>2011-07-23 12:53:38</wp:comment_date>
			<wp:comment_date_gmt>2011-07-23 17:53:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congrats! The game seems to have already climbed to 2007 spot on Marketplace. Great job!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1311443618.201";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1341</wp:comment_id>
			<wp:comment_author><![CDATA[slobo]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.179.188.5</wp:comment_author_IP>
			<wp:comment_date>2011-07-22 11:59:13</wp:comment_date>
			<wp:comment_date_gmt>2011-07-22 16:59:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Did you work on this game?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311353953.3151";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1345</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>67.83.128.108</wp:comment_author_IP>
			<wp:comment_date>2011-07-23 11:00:27</wp:comment_date>
			<wp:comment_date_gmt>2011-07-23 16:00:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, along with a few other guys at FlatRedBall]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1341</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311436827.1188";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SequentialActionQueue in C#</title>
		<link>http://codecube.net/2011/07/sequentialactionqueue-in-c/</link>
		<pubDate>Fri, 15 Jul 2011 20:13:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=488</guid>
		<description></description>
		<contentencoded><![CDATA[A while ago, I created a <a href="http://code.google.com/r/joelmartinez-stateless/">clone</a> on Google Code of the <a href="http://code.google.com/p/stateless/">Stateless library</a> because I wanted to use it in a .NET 4.0 project, and the current distribution was using VS 2008. After I did that, I started playing around with the library. Specifically, I wanted a way to have multiple state machines, and be able to process triggers and state changes in parallel. The problem of course is that although you can usually easily process state changes from different state machines in parallel, you can only process multiple triggers for a <strong>single</strong> state machine sequentially.

So I added a <em>ParallelExample</em> project to the solution and started experimenting. The end result is an easy to use class called <a href="http://code.google.com/r/joelmartinez-stateless/source/browse/Stateless/SequentialActionQueue.cs">SequentialActionQueue</a>. Usually when you need to synchronize access to a resource, you end up putting a lock section around your code so that only one thread may access it at a time. However things get more complex if you need to synchronize multiple sections of the code (ex. multiple methods in a class where only one may run at a time). This is classic thread-safety issues, and the dragons that lie in those waters. However, With the SequentialActionQueue, you can simply instantiate the class and proxy all actions through it and be guaranteed that everything will run safely one after the other.
<blockquote>
<pre>private SequentialActionQueue queue = new SequentialActionQueue();
private int counter =0;

public void Add(int i)
{
    queue.Enqueue(() =&gt; counter += i);
}

public void Subtract(int i)
{
    queue.Enqueue(() =&gt; counter -= i);
}</pre>
</blockquote>
The above is a simplified example which emulates the ability to use <a href="http://msdn.microsoft.com/en-us/library/system.threading.interlocked.aspx">Interlocked</a> to safely increment/decrement a number. I'd love to get some thoughts on the class ... I wrote a few tests in the sample project, but that's not to say there won't be bugs in it, would love to hear your feedback :-)
&nbsp;]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>488</wp:post_id>
		<wp:post_date>2011-07-15 15:13:56</wp:post_date>
		<wp:post_date_gmt>2011-07-15 20:13:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sequentialactionqueue-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Conway&#039;s Game of Life in C#</title>
		<link>http://codecube.net/2011/09/conways-game-of-life-in-c/</link>
		<pubDate>Mon, 05 Sep 2011 03:41:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=491</guid>
		<description></description>
		<contentencoded><![CDATA[I wrote this for fun on the train a while ago, and just came across it again recently. So I figured I may as well post it. The code implements a simple <a href="http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" title="Conway's Game of Life in C# on GitHub">game of life</a> simulation, but the interesting bit is that it parallelizes the process using the TPL. I uploaded it to github as a gist, so please feel free to check it out, and see if you can do anything interesting with it :-)

[gist id=1194013]

The included sample program that uses the 'LifeSimulation' class initializes the a simple blinker, and then generates and outputs 3 generations.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2011-09-04 22:41:25</wp:post_date>
		<wp:post_date_gmt>2011-09-05 03:41:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>conways-game-of-life-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1387</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>ryan@ryanware.com</wp:comment_author_email>
			<wp:comment_author_url>http://ryanmartinsen.com</wp:comment_author_url>
			<wp:comment_author_IP>67.247.4.81</wp:comment_author_IP>
			<wp:comment_date>2011-09-24 00:47:45</wp:comment_date>
			<wp:comment_date_gmt>2011-09-24 05:47:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice!

Was reading this today: http://blog.fogus.me/2011/08/14/perlis-languages/ and the Game of Life implemented in APL blew my mind.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1317906533.0616";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1316843265.8912";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SteamBirds for Windows Phone</title>
		<link>http://codecube.net/2011/08/steambirds-for-windows-phone/</link>
		<pubDate>Thu, 18 Aug 2011 17:00:21 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2011/08/steambirds-for-windows-phone/</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://goo.gl/mf6Dh"><img src="http://image.catalog.zune.net/v3.2/image/83605e47-88f6-4009-b755-d4d2692e15dd?width=200&amp;height=200" alt="" /></a>

Now Available for the Windows Phone Marketplace, <a href="http://goo.gl/mf6Dh">SteamBirds</a>:
<blockquote>The turn-based aerial combat game that over twelve million people have played!

<em>"...Steambirds lies in wait to rob you of your Monday morning."</em> --Penny Arcade

Use bombs, missiles and poison gas to defeat enemy planes in this unique turn-based game! This version features improved graphics, new music, and local multiplayer mode.</blockquote>
<a href="http://goo.gl/mf6Dh"><img title="Download Udder Chaos for your Windows Phone" src="http://www.windowsphoneapplist.com/forum/styles/monsmntheme/theme/images/download.png" alt="" width="160" height="50" /></a>

There’s already a few reviews in the marketplace, my favorite is:
<blockquote>OMG!!!!!!! THE Steambirds is out!!! I've <a href="http://steambirds.com/">played this game in flash</a>,now it's out for wp7. A must have game for RTS lovers. Runs perfect &amp; smooth [… snip …] 10 out of 5 stars!!!</blockquote>
As with <a href="http://codecube.net/2011/07/udder-chaos-for-windows-phone/">Udder Chaos</a>, this game was built with <a href="http://www.flatredball.com">FlatRedBall</a>. Many thanks to Vic and the rest of the team involved for the opportunity to work on this game. Lots of exciting things on the horizon <img class="wlEmoticon wlEmoticon-smile" style="border-style: none;" src="http://codecube.net/wp-content/uploads/2011/08/wlEmoticon-smile.png" alt="Smile" />]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>497</wp:post_id>
		<wp:post_date>2011-08-18 12:00:21</wp:post_date>
		<wp:post_date_gmt>2011-08-18 17:00:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>steambirds-for-windows-phone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Droids I&#8217;m Looking For</title>
		<link>http://codecube.net/2011/08/the-droids-im-looking-for/</link>
		<pubDate>Mon, 22 Aug 2011 03:50:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/2011/08/the-droids-im-looking-for/</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="https://market.android.com/details?id=com.about.CalorieCount&amp;feature=search_result"><img style="margin: 0px 8px 0px 0px; display: inline; float: left;" src="https://www.gstatic.com/android/market/com.about.CalorieCount/hi-78-2" alt="Calorie Counter &amp; Diet Tracker" align="left" /></a>I’m quite excited to reveal that, after 4+ years at my current employer, I’ve decided to accept a new position.

The new position is with <a href="http://about.com">About.com</a>, working in their <a href="http://caloriecount.about.com/">Calorie Count</a> business unit on their <a href="https://market.android.com/details?id=com.about.CalorieCount&amp;feature=search_result">Android app</a>. The app was recently <a href="http://techcrunch.com/2011/08/16/about-coms-calorie-count-ios-app-adds-voice-recognition-food-logging-and-more/">featured on TechCrunch</a>, covering a new feature which came to the iOS version. I will be working to bring that feature and others to the Android version.

This is of course a bit of a departure for me, professionally speaking. Having lived most of my professional life working with Microsoft technologies; I see it as a huge opportunity to broaden my horizons, and experience a different perspective. So far, Java hasn't been that tough to pick up, and the Android SDK is easy enough to work with.

The team I will be working with has a radically different culture than I’ve seen in many places. For example; Although it’s part of a larger organization, the business unit is run somewhat as a startup. They even meet at <a href="http://nwc.co/">NewWorkCity</a> on Wednesdays just to change things up. This appeals to me a great deal, and I look forward to operating in an environment that eschews traditional corporate processes in favor of getting results.

<a href="http://caloriecount.about.com/"><img src="http://ccakamai.about.com/images/elements/logo_cc.png" alt="Calorie Count" /></a>

I’ve learned a great deal in the last 5 years. And I’ve come away from the experience with some of the best friends and most trusted colleagues. Also, just because I’ll be doing some Android programming now, I still love XNA, and I still love my Windows Phone … I will probably just have a few extra gadgets on my persons from now on <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-style: none;" src="http://codecube.net/wp-content/uploads/2011/08/wlEmoticon-winkingsmile.png" alt="Winking smile" />]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date>2011-08-21 22:50:42</wp:post_date>
		<wp:post_date_gmt>2011-08-22 03:50:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-droids-im-looking-for</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1365</wp:comment_id>
			<wp:comment_author><![CDATA[slobo]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.179.188.5</wp:comment_author_IP>
			<wp:comment_date>2011-08-22 12:51:10</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 17:51:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to hear it worked out for you. Good luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314035470.5579";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Calorie Count @ NYTM</title>
		<link>http://codecube.net/2011/09/calorie-count-nytm/</link>
		<pubDate>Fri, 23 Sep 2011 13:40:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=503</guid>
		<description></description>
		<contentencoded><![CDATA[This is already a few weeks old, but someone finally uploaded a good video of the presentation that I was a part of at the September New York Tech Meetup.

<iframe width="560" height="315" src="https://www.youtube.com/embed/u09hLxTPJxw?si=IuUTEpC07u2Ufk1f" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Igor showed off the awesome new voice logging feature that we recently added to the iPhone version of the app (coming soon to the Android version). Then I manned the keyboard to show off a little hack that we put together that same day. We provisioned a <a href="http://twilio.com">Twilio</a> phone number, and let the user record a little 10 second clip of what they want to log (ie. "one banana, two cups of coffee"). We then took that clip and sent it to <a href="http://www.ispeech.org/">iSpeech</a> who transcribed it. And finally we ran the transcribed text through our own API to log it.

Igor asked the crowd to call in the phone number, which they did, and it worked! It was a great experience, and a fun day. Many thanks to Hal Rotholz as well as he was instrumental in getting this hack up and running, in addition to monitoring the server while we were up there :-P]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2011-09-23 08:40:22</wp:post_date>
		<wp:post_date_gmt>2011-09-23 13:40:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>calorie-count-nytm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>R.I.P. Steve Jobs</title>
		<link>http://codecube.net/2011/10/r-i-p-steve-jobs/</link>
		<pubDate>Thu, 06 Oct 2011 13:09:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=514</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://apple.com"><img class="size-thumbnail wp-image-515 aligncenter" title="apple" src="http://codecube.net/wp-content/uploads/2011/10/apple-150x150.jpg" alt="" width="150" height="150" /></a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>514</wp:post_id>
		<wp:post_date>2011-10-06 08:09:50</wp:post_date>
		<wp:post_date_gmt>2011-10-06 13:09:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>r-i-p-steve-jobs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript Engine for Windows Phone</title>
		<link>http://codecube.net/2011/10/javascript-engine-for-windows-phone/</link>
		<pubDate>Thu, 13 Oct 2011 03:43:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=517</guid>
		<description></description>
		<contentencoded><![CDATA[<em>Edit: This is now available on GitHub: <a href="https://github.com/joelmartinez/Jint.Phone">https://github.com/joelmartinez/Jint.Phone</a></em>

Did a fun bit of hacking, ported the <a href="http://jint.codeplex.com/">Jint JavaScript interpereter</a> to Windows Phone 7.5 ... the result is seen below:

[gist id=1283275]

And when we run that code in a silverlight application:
<p style="text-align: center;"><img class="size-full wp-image-524 aligncenter" title="mapped alert method" src="http://codecube.net/wp-content/uploads/2011/10/wp7helloworld.png" alt="mapped alert method" width="473" height="350" /></p>
<p style="text-align: left;">This would also work in XNA games for wp7, so one can imagine scripting scenarios if that's your cup of tea. Though it would take more work for this to be supported on the xbox since DynamicMethod is not supported there.</p>
<p style="text-align: left;">I was really happy to see that Windows Phone 7.1 (Mango) brings in support for the DynamicMethod and some of the other Reflection.Emit features. One of my previous projects (<em><a title="New LateBinder" href="http://codecube.net/2008/12/new-latebinder/">New LateBinder</a></em>) showed significant perf benefits to using this over regular old reflection.</p>
<p style="text-align: left;">I had to overcome some quirks due to the slight differences in the compact framework, but after some time I got it all working ... so far all my tests have been successful (though it's not to say it's all fully working). Many props to the team of developers that did this over at codeplex.</p>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>517</wp:post_id>
		<wp:post_date>2011-10-12 22:43:03</wp:post_date>
		<wp:post_date_gmt>2011-10-13 03:43:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>javascript-engine-for-windows-phone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1442</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>24.228.129.202</wp:comment_author_IP>
			<wp:comment_date>2012-02-02 23:11:17</wp:comment_date>
			<wp:comment_date_gmt>2012-02-03 04:11:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is now available on github: https://github.com/joelmartinez/Jint.Phone]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1411</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1328242277.2081";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1471</wp:comment_id>
			<wp:comment_author><![CDATA[Janak]]></wp:comment_author>
			<wp:comment_author_email>janaknm@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.88.142.30</wp:comment_author_IP>
			<wp:comment_date>2012-03-14 07:26:28</wp:comment_date>
			<wp:comment_date_gmt>2012-03-14 12:26:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's really great. It is working fine in most of the cases. 

But when I try to execute following script it is giving InvalidProgramException. Please do needful to me:

string scriptData = @"function ShowMessage(){ var a = new SayHelloClass();
a.SayHello(); // This is giving invalidprogramexception.
}

C# code is:

public class SayHelloClass()
{
   public SayHelloClass()
   {
   }
   public SayHello()
   {
      MessageBox.Show("Hello!");
   }
}

I've registered global settings as follow:
JintEngine engine = new JintEngine();
 JsConstructor ctor = engine.Global.Marshaller.MarshalType(typeof(HelperClass));
((JsObject)engine.Global)["HelperClass"] = ctor;

and calling the ShowMessage API as follow:
engine.Run("ShowMessage()");

I've tried to debug and it is giving exception from NativeMethod.cs class:
 visitor.Return( m_impl(visitor.Global, that, parameters) );

What Am I missing here? Does it due to reflection limitations? How can I overcome to this problem?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1331727989.0225";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1413</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>166.197.87.69</wp:comment_author_IP>
			<wp:comment_date>2011-11-15 18:49:13</wp:comment_date>
			<wp:comment_date_gmt>2011-11-15 23:49:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yes, I'm absolutely going to share this. Just need to find the time as its actually two things, antlr and jint that I had to port.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1411</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321400953.4046";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1409</wp:comment_id>
			<wp:comment_author><![CDATA[krishnakant]]></wp:comment_author>
			<wp:comment_author_email>mykk09@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.88.142.30</wp:comment_author_IP>
			<wp:comment_date>2011-11-09 01:31:08</wp:comment_date>
			<wp:comment_date_gmt>2011-11-09 06:31:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i am also trying for the same...
can you please share how did you manage to do this...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320820268.7729";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1411</wp:comment_id>
			<wp:comment_author><![CDATA[Saar]]></wp:comment_author>
			<wp:comment_author_email>syahalom@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.90.216.244</wp:comment_author_IP>
			<wp:comment_date>2011-11-14 17:47:06</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 22:47:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sounds very interesting do you mind sharing what you got so far on GitHub?

Thank You,
-saar]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321310826.7239";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1418</wp:comment_id>
			<wp:comment_author><![CDATA[Domenic Datti]]></wp:comment_author>
			<wp:comment_author_email>ddatti@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.geekpowers.com</wp:comment_author_url>
			<wp:comment_author_IP>64.141.193.21</wp:comment_author_IP>
			<wp:comment_date>2011-11-22 09:35:15</wp:comment_date>
			<wp:comment_date_gmt>2011-11-22 14:35:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Holy crap this has huge potential...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321972515.1483";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5103</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin]]></wp:comment_author>
			<wp:comment_author_email>qhyou518@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>180.173.118.191</wp:comment_author_IP>
			<wp:comment_date>2013-04-16 00:18:15</wp:comment_date>
			<wp:comment_date_gmt>2013-04-16 05:18:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, but  does it work in WinCE6.0?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366089495.44264507293701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>AI and Machine Learning</title>
		<link>http://codecube.net/2011/10/ai-and-machine-learning/</link>
		<pubDate>Tue, 11 Oct 2011 09:27:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=518</guid>
		<description></description>
		<contentencoded><![CDATA[Machine Learning and Artificial Intelligence have long been interests of mine.
<ul>
	<li><a title="Socially Aware XBox Live Games" href="http://codecube.net/2008/06/socially-aware-xbox-live-games/">Socially Aware XBox Live Games</a></li>
	<li><a title="Finite State Machine" href="http://codecube.net/2008/11/finite-state-machine/">Finite State Machine</a></li>
	<li><a title="Bayesian Filtering with C#" href="http://codecube.net/2009/05/bayesian-filtering-with-c/">nBayes</a></li>
</ul>
Most recently, I've enrolled for the <a href="http://www.ai-class.com">AI</a> and <a href="http://www.ml-class.org">Machine learning</a> classes being offered by Stanford. I truly feel as if advanced engineering practices such as machine learning and AI are going to be what separates the good companies from the truly great companies over the course of the next decade. So far, these classes have great introductions if you've never been exposed to the fields, and promise to go much deeper.

I'm very glad that this online education movement, which was legitimized by <a href="http://www.khanacademy.org/">Khan Academy</a> IMO, is gaining momentum. Soon, the whole world will have easy access to even the most advanced topics ... the future will be ours to create, if only we step up to the challenge.

In the meantime, if you're interested you should get started by watching the intro lectures, and (at least in the case of the ML Class) installing Octave: <a href="http://www.gnu.org/software/octave/">http://www.gnu.org/software/octave/</a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>518</wp:post_id>
		<wp:post_date>2011-10-11 04:27:27</wp:post_date>
		<wp:post_date_gmt>2011-10-11 09:27:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ai-and-machine-learning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GoogleAnalyticsTracker for Windows Phone</title>
		<link>http://codecube.net/2012/02/googleanalyticstracker-for-windows-phone/</link>
		<pubDate>Thu, 16 Feb 2012 04:18:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=536</guid>
		<description></description>
		<contentencoded><![CDATA[I've been wanting to add google analytics tracking to the Khan Academy app, but have been putting it off for a while since it looked like the only option was to use the <a href="http://msaf.codeplex.com/">Silverlight Analytics Framework</a>. There's so many things wrong with that distribution:
<ul>
	<li>Overly complex to support <em>N</em> number of different trackers ... enterprise software at it's "best"</li>
	<li>Binary distribution is only via <a href="http://msaf.codeplex.com/releases/view/80753">MSI installer</a>! seriously, in this day and age, either give me a NuGet package, or at worst just give me the .dlls.</li>
	<li>Even though it's open source, <a href="http://msaf.codeplex.com/SourceControl/changeset/view/85494">looking through the code</a> is an exercise in futility (see point 1). I considered going in and extracting just the code for GA, but it's not even obvious where that is in the codebase ... admittedly, I only browsed around through the online codeplex browser.</li>
</ul>
Thankfully, <a href="http://syndicatex.com/">Justin</a> asked me yesterday about adding GA to his MonoDroid project. I hesitantly pointed him to the MSAF library, but kept searching when I finally came across <a href="http://blog.maartenballiauw.be/">Maarten Balliauw</a>'s sweet implementation of a <a href="https://github.com/maartenba/GoogleAnalyticsTracker">GoogleAnalyticsTracker for asp.net mvc</a>. He was able to quickly adapt the code for his monodroid project; and because GitHub is awesome, I also forked it and added a new project that lets you build the solution for Windows Phone. You can find it here: <a href="https://github.com/maartenba/GoogleAnalyticsTracker">https://github.com/joelmartinez/GoogleAnalyticsTracker</a>

And then sent back a <a href="https://github.com/maartenba/GoogleAnalyticsTracker/pull/3">pull request</a> for the changes :-) That's the great thing about open source, done GitHub style. I'm free to make (and share) the changes I need ... and if they are good enough, they can easily make their way back into the original/main project. Awesome.

<em>Edit: Maarten quickly accepted my pull request, and even adjusted the NuGet package to include the windows 7 build. With that, I deleted my fork as I wasn't planning on making any additional changes in the immediate future. So you can find the latest here: <a href="https://github.com/maartenba/GoogleAnalyticsTracker">https://github.com/maartenba/GoogleAnalyticsTracker</a>
</em>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date>2012-02-15 23:18:04</wp:post_date>
		<wp:post_date_gmt>2012-02-16 04:18:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>googleanalyticstracker-for-windows-phone</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1455</wp:comment_id>
			<wp:comment_author><![CDATA[slobo]]></wp:comment_author>
			<wp:comment_author_email>slobo80@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.189.227.178</wp:comment_author_IP>
			<wp:comment_date>2012-02-18 13:00:36</wp:comment_date>
			<wp:comment_date_gmt>2012-02-18 18:00:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Joel, clicking on https://github.com/joelmartinez/GoogleAnalyticsTracker gives me 404 error. Did you move it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1329688269.1537";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1329588036.3398";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1461</wp:comment_id>
			<wp:comment_author><![CDATA[Rob de BEir]]></wp:comment_author>
			<wp:comment_author_email>rob.de.beir@uxadditives.com</wp:comment_author_email>
			<wp:comment_author_url>http://uxadditives.com</wp:comment_author_url>
			<wp:comment_author_IP>82.161.64.150</wp:comment_author_IP>
			<wp:comment_date>2012-02-29 09:18:21</wp:comment_date>
			<wp:comment_date_gmt>2012-02-29 14:18:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot!! Without your post would not have found this code. Just installed it by using the Github source code.

Impatiently waiting for tomorrow to see the first analysis on GooggleAnalytics]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330525101.7852";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1468</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>216.223.13.192</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 15:16:12</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 20:16:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eventually, Maarten will update the Nuget package to include the wp7 build, so you can add it to your project with that. But for now, you can easily clone the source code to your machine, compile it, and add a reference to the .dll from your project.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1467</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330978572.6842";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1467</wp:comment_id>
			<wp:comment_author><![CDATA[Naravin K.]]></wp:comment_author>
			<wp:comment_author_email>Naravin.Kim@Live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.79.9.26</wp:comment_author_IP>
			<wp:comment_date>2012-03-05 14:48:05</wp:comment_date>
			<wp:comment_date_gmt>2012-03-05 19:48:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ho can I incorporate your GoogleAnalyticsTracker and GoogleAnalyticsTracker.WindowsPhone project in my windows phone 7.1 project.  Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1330976885.3637";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1456</wp:comment_id>
			<wp:comment_author><![CDATA[Joel Martinez]]></wp:comment_author>
			<wp:comment_author_email>joelmartinez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codecube.net</wp:comment_author_url>
			<wp:comment_author_IP>24.228.129.202</wp:comment_author_IP>
			<wp:comment_date>2012-02-19 16:53:59</wp:comment_date>
			<wp:comment_date_gmt>2012-02-19 21:53:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ahh, good call ... I forgot to update the blog post. Since Maarten accepted my pull request, I deleted my fork since I didn't want it to get out of sync with the main project. So you can find the code at the original github link, and in the nuget package now.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1455</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1329688439.7758";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Parse an iOS plist on Android</title>
		<link>http://codecube.net/2012/05/parse-an-ios-plist-on-android/</link>
		<pubDate>Wed, 16 May 2012 04:16:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=547</guid>
		<description></description>
		<contentencoded><![CDATA[I was implementing a feature in the <a href="http://caloriecount.about.com/">CalorieCount</a> <a href="https://market.android.com/details?id=com.about.CalorieCount">Android App</a> the other day that was previously implemented in the <a href="http://itunes.apple.com/us/app/calorie-counter-by-caloriecount/id367018196?mt=8">iOS version</a> of that same app. Just needed to show a list of timezones based on what country was selected. Not rocket science at all, but the iOS implementation was storing the data in a plist file, with a &lt;dict&gt; element inside. So rather than take that data and try to translate it to something more 'android specific' ... I decided to just use the file as is. The biggest benefit was that in the future if we ever had to update the file, I could update it in place, and simply copy it over to the other platform.

So I copied the file into my xml folder, and wrote this simple parser that reads the file in, and parses it into a HashMap

[gist id=2655811]

The way I look at it, may as well reuse what we've got, and spend less time yak shaving (ie. translating between platforms) ... git 'er done!]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>547</wp:post_id>
		<wp:post_date>2012-05-15 23:16:40</wp:post_date>
		<wp:post_date_gmt>2012-05-16 04:16:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>parse-an-ios-plist-on-android</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twilio-CSharp for MonoTouch and Android</title>
		<link>http://codecube.net/2012/05/twilio-csharp-for-monotouch-and-android/</link>
		<pubDate>Fri, 18 May 2012 02:28:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=550</guid>
		<description></description>
		<contentencoded><![CDATA[I noticed that <a href="http://twilio.com">Twilio</a>'s official <a href="https://github.com/twilio/twilio-csharp">C# client</a> didn't have a version that you could use from <a href="http://xamarin.com/monotouch">MonoTouch</a> and <a href="http://xamarin.com/monoforandroid">Mono for Android</a>. So I took a few minutes, <a href="https://github.com/joelmartinez/twilio-csharp">forked the project</a>, and added some <a href="http://monodevelop.com/">MonoDevelop</a> projects so that you can compile for each of those two platforms.

The mono versions are using the silverlight version of the API, which uses async style methods where you pass in callbacks. There are two dependencies: <a href="https://github.com/restsharp/RestSharp">RestSharp</a>, and<a href="http://json.codeplex.com/"> json.net</a>. Though it looks like RestSharp has shed their dependency on json.net, there are still some references in the twilio code. The json.net project maintain mono specific versions ... they depend on a portable library for that cross platform support. Unfortunately that means that you can't compile it if you're on a mac and only using monodevelop. Thankfully I found <a href="https://github.com/ayoung/Newtonsoft.Json">this helpful fork</a> that did this work for me.

At the risk of  <a href="http://john-sheehan.com/post/17964678895/dont-push-your-pull-requests">'pushing' my pull request</a> onto them, I submitted <a href="https://github.com/twilio/twilio-csharp/pull/28">a pull request</a>; But I made sure to word it such that I'm ok if they want to push back and ask for any changes ... or maybe they don't want to maintain a Mono version at all, in which case I'm happy to keep it in my fork. So we'll see what happens. Please let me know if you have any feedback on this change.

As an aside, I also noticed while I was looking around github that many projects that have mono versions tend to use *.MonoTouch and *.MonoDroid for their project/solution names. It's a subtle thing, but  Xamarin is careful not to refer to their product as MonoDroid, but Mono For Android. I wonder if this has to do with the trademarks that are <a href="http://www.businessinsider.com/verizon-drops-droid-brand-for-newest-android-phone-2010-2">owned by Lucasarts</a>, if so I'd hate to wake up to a nice C&amp;D in the mailbox ;)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2012-05-17 21:28:13</wp:post_date>
		<wp:post_date_gmt>2012-05-18 02:28:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>twilio-csharp-for-monotouch-and-android</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Problem with C# 5&#039;s async/await Pattern</title>
		<link>http://codecube.net/2012/05/the-problem-with-c-5s-asyncawait-pattern/</link>
		<pubDate>Mon, 21 May 2012 13:44:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=556</guid>
		<description></description>
		<contentencoded><![CDATA[C# 5 brings a fantastic new feature … <a href="http://msdn.microsoft.com/en-us/library/hh191443%28v=vs.110%29.aspx">built-in asynchrony</a> (not to be <a href="http://stackoverflow.com/a/4056583/5416">confused with concurrency</a>). The compiler has added two new keywords, async and await, which allows your code to transparently change execution contexts. For example, instead of writing:
<blockquote>
<pre>Task
  .StartNew(() =&gt; MakeSomeDecisionSlowly())
  .ContinueWith(result =&gt; ProcessResult(result));</pre>
</blockquote>
You can simply say:
<blockquote>
<pre>bool result = await MakeSomeDecisionSlowly();
ProcessResult(result);</pre>
</blockquote>
While the two pieces of code are exactly equivalent, the second code is so much simpler to understand. Because you don't really have to think about the fact that there is an asynchronous context switch going on, you are free to focus on your program's logic, rather than worrying about manually orchestrating what tasks are doing what.

However, after using these features for several days while porting my <a href="https://github.com/joelmartinez/Khan-Academy-for-Windows-Phone">KhanAcademy windows phone app to windows 8</a>, I've come to approach them with a bit of caution. While they are great for low level IO-bound tasks, in my opinion they don't scale well to higher level API design. A few things to watch out for:

If you use await somewhere in your code, then the containing method needs to be marked with the async keyword, and there are specific rules about return types. Namely, the method must either be void, or return Task&lt;T&gt;. For example, the example above would have to be in a method
<blockquote>
<pre>public async void DoThatThing() { … }</pre>
</blockquote>
Or, if you wanted to return the result of 'MakeSomeDecisionSlowly' back to the caller, it would have to look like this:
<blockquote>
<pre>public async Task&lt;bool&gt; DoThatThing() { … }</pre>
</blockquote>
Which is great, and all, but then it means that the calling method must be decorated with 'async' as well. If you are refactoring an existing codebase, this can have the effect of rippling up the inheritance chain with numerous (albeit small) changes … depending on the situation.

Ok, fine, maybe that's not a huge deal; it's kind of annoying but I can definitely deal with that kind of refactoring. The big problem I have with async/await is that outside of relatively trivial pieces of code, it can tend to wipe away many benefits of proper abstractions.

Let's say you are implementing a remote API call, and you have several requirements:
<ul>
	<li>Process the results if
<ul>
	<li>You have a network connection (common mobile requirement)</li>
	<li>The server is reachable (what if you're connected at starbucks, but haven't accepted the wifi's terms of use?)</li>
	<li>The server returns a code 200 (bugs happen)</li>
	<li>The server indicates that your credentials are ok (what if the user's password expired, or was changed by the user on your website?)</li>
	<li>The server's json response indicates a successful request</li>
</ul>
</li>
	<li>If any of the above conditions are false, notify the user of the problem (with specific text for the situation).</li>
</ul>
This is a very common scenario in any occasionally connected mobile application, and you can see that there are no less than five distinct decisions that need to be made during the course of an API call. If you use async/await blindly, you have two problems:

First, you are deferring these decisions to the caller … you'll do a nice asynchronous call, and return a Task&lt;string&gt; with the json results; or if you're sophisticated, a Task&lt;T&gt; with the results already parsed and converted to a strongly typed object. However, it's up to the caller to handle exceptions, check for network connections, deal with individual response scenarios (logged out, invalid request, etc.). So you may end up with every call site looking like this:
<blockquote>
<pre>if (HasConnection())
{
  try
  {
    MyObject result = await MakeRemoteAPICall();
    ProcessSuccessfulResult(result);
  }
  catch(Exception e)
  {
    ProcessError(e.Message);
  }
}
else
{
  ProcessError("No Connection");
}</pre>
</blockquote>
Second, providing further abstractions is difficult because you are limited to a single return type. So if you want to handle all of the stated requirements for the caller, you will have to wrap up the result in a special return value that can provide some details to the user, such as 'was it successful', the error message if it wasn't, and the parsed return value if it was. While the pros and cons of using error codes for return values have been <a href="https://www.google.com/search?q=error+codes+vs+exception&amp;ie=utf-8&amp;oe=utf-8&amp;aq=t&amp;rls=org.mozilla:en-US:official&amp;client=firefox-a">debated for ages</a>; I tend to prefer simpler return values for local APIs, since a complex return value adds an additional burden on the caller to know how to interpret the results. At best, every call site would look something like this:
<blockquote>
<pre>Result&lt;MyObject&gt; value = await MakeRemoteAPICall();
if (value.WasSuccessful)
{
  ProcessSuccessfulResult(value.Result);
}
else
{
  ProcessError(value.ErrorMessage);
}</pre>
</blockquote>
That's a bit better than before, but still rather verbose for my taste.

I propose that the callback style of API design still has a place for situations like this. Consider the following sample:
<blockquote>
<pre>MakeRemoteAPICall(
  result =&gt; ProcessSucessfulResult(result),
  error =&gt; ProcessError(error));</pre>
</blockquote>
For the local consumer of this API, this is logically the same: if the call was successful do this, otherwise do that. But the caller doesn't have to worry about all the nuances of deciding whether a call was successful or not. They can focus on how to process the results, rather than dealing with all of this ceremony. And after all, isn't that what we're all aiming to do, simplify our code?

I would love to hear thoughts about how this kind of code can be made even simpler. Would love to hear any opinions, for or against. Thanks!

<em>edit: lively debate over on Reddit :) <a href="http://www.reddit.com/r/programming/comments/txhfq/the_problem_with_c_5s_asyncawait_pattern/">http://www.reddit.com/r/programming/comments/txhfq/the_problem_with_c_5s_asyncawait_pattern/</a></em>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>556</wp:post_id>
		<wp:post_date>2012-05-21 08:44:45</wp:post_date>
		<wp:post_date_gmt>2012-05-21 13:44:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>the-problem-with-c-5s-asyncawait-pattern</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1494</wp:comment_id>
			<wp:comment_author><![CDATA[Duarte Nunes]]></wp:comment_author>
			<wp:comment_author_email>duarte.m.nunes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.13.144.37</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 10:40:00</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 15:40:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The beauty of the TAP (Task-based Asynchronous Pattern) is that it is easily composable. You can easily chain sequences of tasks with ContinueWith, giving you flexibility to abstract complex workflows. The caller can do: var t = MakeRemoveAPICall(); t.ContinueWith(t =&gt; ProcessSuccessfulResult(t.Result), TaskContinuationOptions.OnlyOnRanToCompletion); t.ContinueWith(t =&gt; ProcessError(t.Exception), TaskContinuationOptions.OnlyOnFaulted). When you have an object or value representing a computation (doesn't really matter if it's asynchronous), you can always use it for composition, which is better than nested callbacks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337614800.8174";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1499</wp:comment_id>
			<wp:comment_author><![CDATA[Birchof]]></wp:comment_author>
			<wp:comment_author_email>birchoff@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>96.231.131.184</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 22:05:37</wp:comment_date>
			<wp:comment_date_gmt>2012-05-22 03:05:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had to delete and restart this comment a few times. but in the end my disagreement with this article comes down to the title. There is no problem with async\await if you use it for what it is intended to be used for, which you partially allude to as low level logic.

From my perspective, the only value of this article is to highlight the fact that like all things the new language features of C# 5 are not a silver bullet. And developers will need to consider when and where they are used. As a result the title really should be. Something along the lines of "When NOT to use async\await in C# 5".]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337655937.6589";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1493</wp:comment_id>
			<wp:comment_author><![CDATA[Scott Brickey]]></wp:comment_author>
			<wp:comment_author_email>me@sbrickey.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.sbrickey.com</wp:comment_author_url>
			<wp:comment_author_IP>207.250.204.185</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 10:24:04</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 15:24:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why wouldn't your method return a typed object with an Error property? this is the same thing that Web Service calls have done for a while... on the return, just check whether an error occurred... if no error, use resulting data... if error, do something else (for an occasionally connected system, queue the request to some internal buffer so that the request can be resubmitted when connected).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337613844.2368";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1495</wp:comment_id>
			<wp:comment_author><![CDATA[Joel P]]></wp:comment_author>
			<wp:comment_author_email>joel@zeptosoft.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.120.125.60</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 10:56:37</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 15:56:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good thinking on this. I do like the idea of moving the "did it succeed?" question into the actual code that calls the service and out of the caller (or callers). Separates concerns much better.

Having done mostly REST apps the past few years, I've had great success distinguishing responses broadly between Success, Rejection, and Failure. These map to 2xx, 4xx, and 5xx HTTP response codes, but this three-bucket classification system works for non-HTTP services and subsystems as well.

A Failure indicates the request could not be processed all the way through. There's no network, the other system is down, an exception was thrown somewhere along the way, etc. Retrying is appropriate, as once the problem is resolved the request should (hopefully) succeed.

A Rejection on the other hand indicates that no technical issues occurred. The app understood your request, performed any desired processing, and has confirmed that this request can not succeed. Retrying a million times would not change anything.

So I'd tweak MakeRemoteAPICall to take three continuations - ProcessSuccessfulResult(result), ProcessFailure(error), ProcessRejection(error). It's abstract enough to not be tied to how any particular service works, and it keeps the caller's knowledge of the workings of that service to a minimum, but it provides enough info and context for that caller to intelligently handle the three broad classes of outcomes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337615797.3326";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1496</wp:comment_id>
			<wp:comment_author><![CDATA[Hoop Somuah]]></wp:comment_author>
			<wp:comment_author_email>hoop@somuah.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.107.0.118</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 11:00:25</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 16:00:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[First off I'll make two statements in the interest of full disclosure:

1. I work for Microsoft. No where near the developer tools side of the company but I find that it's important to point that out
2. Everything I say here is my opinion and in no way reflects Microsoft's position on anything.

I like your 2 main points:
 * simplicity is key, I like the effort being made to make asynchronous code more readable.
 * There are performance tradeoffs whenever you use things like this. In the Task world I could call ContinueWith and pass it an option to ExecuteSynchronously which would execute the continuation without scheduling it. I'm unclear how the C# compiler deals with this in the async/await world and not knowing that is mildly frustrating.


One thing that puzzles me is didn't you have the response handling issue before with the Task pattern as well? I know I always have. In the TPL world you have to use a ContinueWith and you have access to the success or failure of the Task but you still need the complex code patterns to handle the result of the operation.

I think this is a general challenge with C#, one that F# doesn't have (in my opinion) because they have discriminated unions and when you use those in a "match" expression, it makes it really easy to write easy to read code that handles all the possible results of an operation. The F# compiler will even tell you if you miss a case. I've wished for a long time that C# had both discriminated Unions and match expressions to simplify things. When using F#'s asynchronous workflows, there is a notion of let! and do! which when used in an async block, are very similar to the async/await pattern in C#. I've found the code to be very readable.

Thanks for the post!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337616025.3046";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1497</wp:comment_id>
			<wp:comment_author><![CDATA[FMM]]></wp:comment_author>
			<wp:comment_author_email>floyd.may@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>205.162.239.70</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 11:02:18</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 16:02:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think a lot of this has to do with how much detail you need in the exceptional cases.  If you just care about the "happy path", and any deviation from it means bail out and throw up an error message, then your API design will be much different than if you had a different logic path to follow (say, wait and retry for no connection, but bail out on a 500 return code) depending on which deviation from the happy path occurred.

This is one of the reasons for case classes and pattern matching in languages like Scala (http://www.scala-lang.org/node/107).  Your logic can be very clearly and concisely structured if your results from an async operation could be declared as a case class.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337621442.3666";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1337616138.57";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1503</wp:comment_id>
			<wp:comment_author><![CDATA[Damien]]></wp:comment_author>
			<wp:comment_author_email>Davidk@cccs.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.159.128.21</wp:comment_author_IP>
			<wp:comment_date>2012-05-23 05:03:02</wp:comment_date>
			<wp:comment_date_gmt>2012-05-23 10:03:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't get either of your points.

&gt; First, you are deferring these decisions to the caller … you’ll do a nice asynchronous call, and return a Task with the json results; or if you’re sophisticated, a Task with the results already parsed and converted to a strongly typed object. However, it’s up to the caller to handle exceptions, check for network connections, deal with individual response scenarios

If you hadn't used async/await, and you were returning string or T, you'd be in exactly the same position.

&gt; Second, providing further abstractions is difficult because you are limited to a single return type.

Similarly, if you weren't using async/await, every method in .NET is already limited to a single return type.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1337767383.0249";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1540</wp:comment_id>
			<wp:comment_author><![CDATA[Stephen Cleary]]></wp:comment_author>
			<wp:comment_author_email>ccn.ourteddybear@xoxy.net</wp:comment_author_email>
			<wp:comment_author_url>http://nitoprograms.com</wp:comment_author_url>
			<wp:comment_author_IP>97.83.115.226</wp:comment_author_IP>
			<wp:comment_date>2012-07-18 14:27:14</wp:comment_date>
			<wp:comment_date_gmt>2012-07-18 19:27:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Side note: Your first two code samples are not equivalent. The first one starts a task on a background thread, while the second one executes the task asynchronously on the current thread. This is a common beginner mistake for async.

It's true that async grows through the code base. This is true even if you're doing asynchronous code without async/await (which I have done a lot of). It's a fundamental property of asynchronous code in general, not async/await in particular.

It's true that async/await error handling is based on exceptions rather than error return values. This is a natural side result of async/await being more functional in nature.

There *are* pain points when mixing async and synchronous code. But those same pain points exist today when mixing asynchronous and synchronous code.

Bottom line: for people who need asynchronous code (like me), async/await is a huge, huge step forward. It's a tremendously well-thought-out pattern.

Check out my blog for an intro to async - and how to think in async. I've also got an AsyncEx library on CodePlex that helps with managing a partially-async code base, though there is no perfect solution (and there cannot be one).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1342639638.5975";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1542</wp:comment_id>
			<wp:comment_author><![CDATA[Ed Rowland]]></wp:comment_author>
			<wp:comment_author_email>rerdavies@rogers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.253.149.33</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 23:37:12</wp:comment_date>
			<wp:comment_date_gmt>2012-07-25 04:37:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure I see the problem. async/await supports exceptions across async/await boundaries. This looks very natural to me:

async Task ExecuteJSonRequest(...)
{
       WebReponse  response t = await MakeWebRequest();
       if (response.ReturnCode != 200)
       {
             throw new Exception("Request failed.");
       }
       JSonPacket   packet = await ParseInbackground(response);
       await packet.ProcessInBackground(); 
       ...
      etc.
}

 And then the caller handles exceptions as 

public async void DoSomeUserAction(...)
{
     try {
          await ExecuteJSonRequest(); //MUST await to get potential exceptions.
     } catch (Exception e)
     {
           ErrorDialog(e);
     }
}

This catches both synchronous and asynchronous exceptions. await will rethrow any exceptions that occur in the async methods.

The absolute unequivocal rule: all error messages originate in an exception, and are caught at the highest level in the calling code as is practically possible.

I highly recommend using inner exceptions as well to preserve complete error context. Error dialogs build message text by walking the chain of inner exception messages. As the exception moves up the calling chain, exceptions are wrapped with outer exceptions that provide progressively more user-friendly messages. 

e.g.:

       Error

       Unable to retrieve user preferences from 'xyyzzg.com'. (top-level)

       Unexpected error occurred while fetching   
       http://xyyzzg.com/login.asp'.
       (an inner exception).
       
       HTTP Error 303: Proxy authentication failed. (the raw error from HttpGet in an inner-inner exception).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343222452.1255";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343191032.4557";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>DarkSky API Wrapper for C#</title>
		<link>http://codecube.net/2012/05/darksky-api-wrapper-for-c/</link>
		<pubDate>Wed, 30 May 2012 03:58:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=563</guid>
		<description></description>
		<contentencoded><![CDATA[When I saw that the guys from <a href="http://darkskyapp.com">Dark Sky</a> were <a href="http://journal.darkskyapp.com/2012/dark-sky-for-developers/">releasing an API</a>, I knew I wanted to work with it. So I whipped up a quick C# API Wrapper for the <a href="https://developer.darkskyapp.com/">DarkSky API</a>.

You can find the project here on GitHub: <a href="https://github.com/joelmartinez/darksky-csharp">https://github.com/joelmartinez/darksky-csharp</a>

Currently supported platforms are: Windows Phone, iOS, and Android via MonoTouch/Mono for Android.

Usage is very simple:
<blockquote>
<pre>using DarkSky;

...

var darksky = new DarkSky.Api(YOUR_API_KEY);
var orlando  = new Position { Latitude=28.5381f, Longitude=-81.3794f };
Task&lt;FullForecast&gt; response = darksky.Forecast(orlando);

response.ContinueWith(forecast =&gt; DisplayText(forecast.Result.HourSummary));
// displays something like "Rain starting in 3 Min, Stopping 30 Min Later"</pre>
</blockquote>
Please let me know if you have any feedback either by opening <a href="https://github.com/joelmartinez/darksky-csharp/issues">an issue</a>, <a href="mailto:joelmartinez@gmail.com">emailing me</a>, <a href="http://codecube.net">commenting on my blog</a>, or forking the project and submitting a pull request.]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>563</wp:post_id>
		<wp:post_date>2012-05-29 22:58:52</wp:post_date>
		<wp:post_date_gmt>2012-05-30 03:58:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>darksky-api-wrapper-for-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Multi-Armed Bandit in C#</title>
		<link>http://codecube.net/2012/05/multi-armed-bandit-in-c/</link>
		<pubDate>Fri, 01 Jun 2012 03:31:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=571</guid>
		<description></description>
		<contentencoded><![CDATA[After reading this fantastic blog post about how to do better than A/B testing (<a href="http://stevehanov.ca/blog/index.php?id=132"><em>http://stevehanov.ca/blog/index.php?id=132</em></a>), I decided to create an implementation of the algorithm in C#. As I already had a library dealing with statistical decision making on GitHub, I've added this functionality the nBayes library, which you can find here:

<a href="https://github.com/joelmartinez/nBayes">https://github.com/joelmartinez/nBayes</a> - specifically, in the <a href="https://github.com/joelmartinez/nBayes/tree/master/nBayes/Optimization">Optimization namespace</a>.

I won't reiterate the pros/cons, and explanation of this algorithm, as Steve does a fantastic job over on his blog ... so I'll just present the sample program I wrote to go along with it. This program uses the API to create three options (the same used in the blog post), and then proceeds to simulate users who prefer to act on one option, then partway (35%) through the exercise changing preference. And you can see how the algorithm correctly begins to primarily show the new choice about halfway through.
<blockquote>
<pre>/// &lt;summary&gt;This sample program has 3 options, and will use the the optimizer
/// to run a test scenario. Two options are picked, and we will simulate user interest in one,
/// then user sentiment changing to favor the second option.&lt;/summary&gt;
private static void TestOptimizer()
{
  var optimizer = new Optimizer();

  // define the available options
  Option[] options = new Option[] {
    Option.Named("Orange"),
    Option.Named("Green"),
    Option.Named("White")
  };
  optimizer.Add(options[0]);
  optimizer.Add(options[1]);
  optimizer.Add(options[2]);

  // pick two options, and define when user interest will change
  var firstWinner = options[2]; // white
  var secondWinner = options[1]; // green
  var switchRatio = .35f; // 35% of the way through the test set
  int tries = 100; // the test set

  for (int i = 0; i &lt; tries; i++) {
    Option selected = optimizer.Choose().Result; // don't care about asyncrony in this particular example
    Console.WriteLine("Choosing: {0}", selected);

    // decide which chosen option 'the users' will prefer
    bool isFirstBatch = (float)tries * switchRatio &gt; i;
    if (isFirstBatch &amp;&amp; selected == firstWinner)
      firstWinner.IncrementSuccesses();
    else if (!isFirstBatch &amp;&amp; selected == secondWinner)
      secondWinner.IncrementSuccesses();
  }

  Console.WriteLine("\nResults! We expect that ({0}) will have the highest success rate, and ({1}) will be in second place", secondWinner, firstWinner);
  Console.WriteLine("\nThis is the final result after {0} tries\n{1}", tries, optimizer);
}</pre>
</blockquote>
There are multiple strategies to solve the '<a href="http://en.wikipedia.org/wiki/Multi-armed_bandit">multi-armed bandit</a>' problem. This particular implementation is using 'Epsilon-Greedy'. It's still early, and I have other ideas on how to structure the code in order to facilitate multiple strategies ... but for now, let me know if you've got any thoughts or feedback on this bit of code. Thanks! :-)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>571</wp:post_id>
		<wp:post_date>2012-05-31 22:31:46</wp:post_date>
		<wp:post_date_gmt>2012-06-01 03:31:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>multi-armed-bandit-in-c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twilio Request Parameters in ASP.NET MVC</title>
		<link>http://codecube.net/2012/07/twilio-request-parameters-in-asp-net-mvc/</link>
		<pubDate>Tue, 10 Jul 2012 00:20:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=582</guid>
		<description></description>
		<contentencoded><![CDATA[Integrating Twilio into your ASP.NET MVC applications is now just a tiny bit easier ... The latest <a href="https://github.com/twilio/twilio-csharp">twilio-csharp</a> project contains a few new classes which can be used as the parameter of your SMS, Voice, and Status endpoints:
<ul>
	<li><a href="https://github.com/twilio/twilio-csharp/blob/master/src/Twilio.Mvc/VoiceRequest.cs">VoiceRequest</a></li>
	<li><a href="https://github.com/twilio/twilio-csharp/blob/master/src/Twilio.Mvc/SmsRequest.cs">SmsRequest</a></li>
	<li><a href="https://github.com/twilio/twilio-csharp/blob/master/src/Twilio.Mvc/StatusCallbackRequest.cs">StatusCallbackRequest</a></li>
</ul>
This makes it so that the MVC framework will automatically map the incoming parameters into a strongly typed object:
<blockquote>
<pre>public ActionResult sms(SmsRequest request)
{
    var response = new TwilioResponse();
    response.Sms(string.Format("You said '{0}'", request.Body));

    return TwiML(response);
}</pre>
</blockquote>
These changes were merged in with <a href="http://codecube.net/2012/05/twilio-csharp-for-monotouch-and-android/">the pull request</a>, which was originally meant to only include the MonoTouch and Mono For Android projects. But I had made these additional changes in preparation for the talk I'll be giving at <a href="http://onetug.org">ONETUG on using Twilio</a>. So those changes snuck right in to the main lib :)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>582</wp:post_id>
		<wp:post_date>2012-07-09 19:20:00</wp:post_date>
		<wp:post_date_gmt>2012-07-10 00:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>twilio-request-parameters-in-asp-net-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back in Orlando</title>
		<link>http://codecube.net/2012/07/back-in-orlando/</link>
		<pubDate>Fri, 27 Jul 2012 02:04:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=586</guid>
		<description></description>
		<contentencoded><![CDATA[Well that was fun :) It was only two years ago that I <a href="http://codecube.net/2010/06/moving-to-new-york/">moved to NYC</a>. In that time, I made a ton of new friends, had great conversations, and expanded my horizons by changing my focus to mobile development. It was an amazing experience, and I'm glad I had it. That being said, I am glad to be back in Orlando amongst family and friends. Working from home will be an interesting experience. I've done it before, but always under slightly different circumstances. I plan on visiting several <a href="http://urbanrethink.com/">co-working</a> <a href="http://orlando.colabusa.com/">spaces</a> from time to time ... there's been lots of <a href="http://www.floridatechnologyjournal.com/latest-video?slg=ftj-live-orlandos-tech-boom&amp;orderby=latest">exciting activity</a> going on in Orlando, so I'm looking forward to getting to know more of the tech community here.

But, as they say, time stands still for no man; so I've already got a few events coming up that you should totally come to and participate in!
<ul>
	<li>I will be a judge for an upcoming contest being run by the <a href="http://owpug.tattoocoder.com/">Orlando Windows Phone user group</a>. The contest is to build a windows phone or windows 8 app using the <a href="https://developer.darkskyapp.com/">Dark Sky API</a>, for which I wrote an <a href="https://github.com/joelmartinez/darksky-csharp">API wrapper</a>:
<a href="http://blog.tattoocoder.com/2012/07/orlando-windows-phone-metro-user-group.html">http://blog.tattoocoder.com/2012/07/orlando-windows-phone-metro-user-group.html</a></li>
	<li>August 23rd, I will be speaking at the <a href="http://onetug.org">Orlando .NET User Group</a> on writing <a href="http://twilio.com">Twilio</a> apps:
<a href="http://www.onetug.org/Events/12-07-13/August_23rd_-_Joel_Martinez_presents_Twilio_is_the_Dealio.aspx">http://www.onetug.org/Events/12-07-13/August_23rd_-_Joel_Martinez_presents_Twilio_is_the_Dealio.aspx</a></li>
</ul>
There's a few other things in the works ... it's an amazing time to be a developer :)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>586</wp:post_id>
		<wp:post_date>2012-07-26 21:04:14</wp:post_date>
		<wp:post_date_gmt>2012-07-27 02:04:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>back-in-orlando</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[General]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Universal Subtitles C# API Wrapper</title>
		<link>http://codecube.net/2012/08/universal-subtitles-c-api-wrapper/</link>
		<pubDate>Fri, 03 Aug 2012 03:44:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=597</guid>
		<description></description>
		<contentencoded><![CDATA[<em>This is available on GitHub here: <a href="https://github.com/joelmartinez/universalsubtitles-csharp">https://github.com/joelmartinez/universalsubtitles-csharp</a></em>

C# 5.0 API Wrapper for the <a href="http://www.universalsubtitles.org">Universal Subtitles</a> service, which is what the <a href="http://khanacademy.org">Khan Academy</a> uses as their provider. I'm building this to add subtitles to the <a href="https://github.com/joelmartinez/Khan-Academy-for-WinRT">Khan Academy for Windows RT</a> app.

Usage is simple:
<blockquote>
<pre>using UniversalSubtitles;
...
var api = new UniversalSubtitles.v1.Api();

string video_url = "http://www.youtube.com/watch?v=W0VWO4asgmk&amp;feature=youtube_gdata_player";

SubtitleLine[] subtitles = await api.SubtitlesAsync(video_url);
// returns the subtitles in the video's spoken language</pre>
</blockquote>
You can also give the user a list of available languages that are available for this video
<blockquote>
<pre>Language[] languages = await api.LanguagesAsync(video_url);
// display the list of available languages

SubtitleLine[] subtitles = await api.SubtitlesAsync(video_url, "it"); 
// or you can pass an instance of Language</pre>
</blockquote>
Hope it's useful for someone out there :)]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>597</wp:post_id>
		<wp:post_date>2012-08-02 22:44:22</wp:post_date>
		<wp:post_date_gmt>2012-08-03 03:44:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>universal-subtitles-c-api-wrapper</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Introducing Viewer for Khan Academy (Windows 8)</title>
		<link>http://codecube.net/2012/09/introducing-viewer-for-khan-academy-windows-8/</link>
		<pubDate>Thu, 27 Sep 2012 00:32:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=605</guid>
		<description></description>
		<contentencoded><![CDATA[<a href="http://apps.microsoft.com/webpdp/en-US/app/viewer-for-khan-academy/f9c07088-9f3e-4312-ad5b-0f3b4aeb9b37"><img class="aligncenter" title="Viewer for Khan Academy" src="https://raw.github.com/joelmartinez/Khan-Academy-for-WinRT/master/SubmissionAssets/414x180.png" alt="Viewer for Khan Academy" width="414" height="180" /></a>

After much hard work, I'm happy to announce the release of a project I've been working on, <a href="http://apps.microsoft.com/webpdp/en-US/app/viewer-for-khan-academy/f9c07088-9f3e-4312-ad5b-0f3b4aeb9b37">Viewer for Khan Academy on the Windows Store</a> (windows 8). The source code can be <a href="https://github.com/joelmartinez/Khan-Academy-for-WinRT">found on GitHub</a>.

I really respect and appreciate what they're doing over at the <a href="http://khanacademy.org">Khan Academy</a>. With two small children of my own, anything that I can do to bring awareness to their great content and help enrich tomorrow's generation (and even today's) is time well spent in my book.

Huge shoutout to the folks over at Channel 9, who have produced a <a href="http://channel9.msdn.com/Series/Migrating-apps-from-Windows-Phone-to-Windows-8">great set of tutorials</a> and videos on the development of v1 of the app. The tutorials are written from the perspective of porting the <a href="https://github.com/joelmartinez/Khan-Academy-for-Windows-Phone">Windows Phone 7</a> version of the app to Windows 8. Many thanks and props to <a href="https://twitter.com/rickbarraza">Rick</a>, <a href="https://twitter.com/BrianPeek">Brian</a>, <a href="https://twitter.com/ClintRutkas">Clint</a>, and <a href="https://twitter.com/danielfe">Dan</a>. And of course, all of this wouldn't be possible without the effort put forth by the <a href="http://www.khanacademy.org/about/the-team">Khan Academy Team</a>.

Thanks!

<a href="http://codecube.net/wp-content/uploads/2012/09/screen1.png"><img class="alignnone size-thumbnail wp-image-610" title="" src="http://codecube.net/wp-content/uploads/2012/09/screen1-150x150.png" alt="" width="150" height="150" /></a> <a href="http://codecube.net/wp-content/uploads/2012/09/screen2.png"><img class="alignnone size-thumbnail wp-image-611" title="" src="http://codecube.net/wp-content/uploads/2012/09/screen2-150x150.png" alt="" width="150" height="150" /></a> <a href="http://codecube.net/wp-content/uploads/2012/09/screen3.png"><img class="alignnone size-thumbnail wp-image-612" title="" src="http://codecube.net/wp-content/uploads/2012/09/screen3-150x150.png" alt="" width="150" height="150" /></a> <a href="http://codecube.net/wp-content/uploads/2012/09/screen4.png"><img class="alignnone size-thumbnail wp-image-613" title="" src="http://codecube.net/wp-content/uploads/2012/09/screen4-150x150.png" alt="" width="150" height="150" /></a>]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>605</wp:post_id>
		<wp:post_date>2012-09-26 19:32:02</wp:post_date>
		<wp:post_date_gmt>2012-09-27 00:32:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>introducing-viewer-for-khan-academy-windows-8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="apps"><![CDATA[Apps]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5094</wp:comment_id>
			<wp:comment_author><![CDATA[Eli]]></wp:comment_author>
			<wp:comment_author_email>eli@techsoupglobal.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.netsquared.org/challenge/windows-8-apps-social-good-contest</wp:comment_author_url>
			<wp:comment_author_IP>69.172.158.66</wp:comment_author_IP>
			<wp:comment_date>2013-01-25 16:42:29</wp:comment_date>
			<wp:comment_date_gmt>2013-01-25 21:42:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Joel, I wanted to personally invite you to submit Khan Academy into our contest for Windows 8/RT and Windows Phone 8 apps for social good. The contest is open to new or previously-developed apps and has $40,000 in prizes with $15,000 for the top entries in each category.

Entering the contest is easy – just add add your Windows 8 app to our project gallery and submit it to the contest. Any app that fits our definition of social good is eligible.

The contest deadline is February 28, so please enter soon. Let me know if you have any questions.

Learn more and enter your Windows 8 app into the contest at http://bit.ly/TY05Cu

Eligibility
	•	You must be a legal US resident
	•	your application must not have won another contest or prize


See see the complete rules.

====
Microsoft has teamed up with NetSquared to support you in generating apps for nonprofits and activists on the Windows 8 and Windows Phone 8 Marketplaces. The Contest is about YOUR great ideas and projects, and we’re here with tools, resources, and incentive prizes to get (and keep) you going.

Learn more and enter your Windows 8 app into the contest at http://bit.ly/TY05Cu

What is an app for “social good”?
An app (or other good or service) that is designed to benefit to the general public and doesn’t solely exist to provide the maximum possible return to shareholders. Some classic examples of social good are: clean water, literacy, food security, healthy and safe environment and digital inclusion, among many others. For the purposes of this contest, we’re accepting apps on any topic within TechSoup’s Hacker Helper Wiki.

What are the prizes?
There are 3 categories of prizes:
	•	Best Overall Windows 8 App wins $15,000
	•	Best Overall Windows 8 Phone App wins $15,000
	•	People’s Choice App wins $10,000


Ready to get started? Here’s how to proceed:
1. Add your project to the NetSquared site’s project gallery. Include your Windows Store app URL.
2. Enter your project into the contest

Important Dates
	•	Project submissions: November 5 – February 28
	•	Public voting: March 1 – March 15
	•	Winners announced: March 25

You can find more information, including participant criteria and other “fine print” details here.

Show the world how a great idea, a few lines of code, and Windows 8 can change lives for the better.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1359150149.2493789196014404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374573499.429502010345458984375;s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C# 5 First Look</title>
		<link>http://codecube.net/2012/12/c-5-first-look/</link>
		<pubDate>Thu, 13 Dec 2012 14:57:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=625</guid>
		<description></description>
		<contentencoded><![CDATA[<p style="text-align: center;"><a href="http://www.packtpub.com/csharp-5-first-look/book"><img class="size-full wp-image-626 aligncenter" title="C# 5 First Look" alt="C# 5 First Look" src="http://codecube.net/wp-content/uploads/2012/12/6761EN_mockupcover_normal.png" width="175" height="213" /></a></p>
My book is finally <a href="http://www.packtpub.com/csharp-5-first-look/book">available for pre-order</a>! From the overview:
<blockquote>
<ul>
	<li>Learn about all the latest features of C#, including the asynchronous programming capabilities that promise to make apps ultra-responsive</li>
	<li>Examine how C# evolved over the years to be more expressive, easier to write, and how those early design decisions enabled future innovations</li>
	<li>Explore the language’s bright future building applications for other platforms using the Mono Framework</li>
</ul>
</blockquote>
In the later chapters of the book, you learn to build 3 different applications, the first is a Flickr viewer for Windows RT

<a href="http://codecube.net/wp-content/uploads/2012/12/6761_04_03.png"><img class="aligncenter size-medium wp-image-627" alt="Flickr Viewer" src="http://codecube.net/wp-content/uploads/2012/12/6761_04_03-300x168.png" width="300" height="168" /></a>

&nbsp;

The second is an HTML5 Mobile app using ASP.NET MVC that uses the geolocation APIs and <a href="http://signalr.net/">SignalR</a> to build a "SoLoMo" experience.

<a href="http://codecube.net/wp-content/uploads/2012/12/6761_05_05.png"><img class="aligncenter size-medium wp-image-628" alt="Join Up" src="http://codecube.net/wp-content/uploads/2012/12/6761_05_05-300x225.png" width="300" height="225" /></a>

&nbsp;

And finally, using <a href="http://www.mono-project.com/MonoMac">MonoMac</a> to build a Mac App using C# 5 (though, irony of ironies, Xamarin <a href="http://xamarin.com/mac">announces Xamarin.Mac</a> <strong>yesterday</strong>).

<a href="http://codecube.net/wp-content/uploads/2012/12/6761_06_06.png"><img class="aligncenter size-medium wp-image-629" alt="Mac App" src="http://codecube.net/wp-content/uploads/2012/12/6761_06_06-300x190.png" width="300" height="190" /></a>

It was a pleasure working with everyone from Packt on this title. Special thanks to <a href="https://twitter.com/asherdevuyst">Asher DeVuyst</a> for reviewing the book and giving me great feedback :P]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>625</wp:post_id>
		<wp:post_date>2012-12-13 09:57:29</wp:post_date>
		<wp:post_date_gmt>2012-12-13 14:57:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>c-5-first-look</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5082</wp:comment_id>
			<wp:comment_author><![CDATA[pth]]></wp:comment_author>
			<wp:comment_author_email>petrhlavac1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.112.61.57</wp:comment_author_IP>
			<wp:comment_date>2012-12-13 13:38:16</wp:comment_date>
			<wp:comment_date_gmt>2012-12-13 18:38:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A very interesting abstract! It seems as the must-read book for any startup C# programmer]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1355423896.9657390117645263671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Latest Open Source Projects</title>
		<link>http://codecube.net/2013/06/latest-open-source-projects/</link>
		<pubDate>Sat, 29 Jun 2013 14:51:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://codecube.net/?p=634</guid>
		<description></description>
		<contentencoded><![CDATA[Just wanted to post a little information about some projects that I've open sourced recently:
<h3>TattooDB-Android - <a href="https://github.com/joelmartinez/TattooDB-Android">https://github.com/joelmartinez/TattooDB-Android</a></h3>
TattooDB is a simple document-oriented database for Android. It uses plain old java objects, and manages it's persistence behind the scenes using SQLite. I wrote it as a response to the ever increasing complexity of ORMs which, ironically, are supposed to make our interactions with a database easier.

I'd like to eventually write versions of this for C# and Objective-C
<h3>FlatRedBall.js - <a href="https://github.com/joelmartinez/flatredball-js">https://github.com/joelmartinez/flatredball-js</a></h3>
I love making games, and I love working on the web. frb.js is an HTML5/JavaScript 2D game engine that lets you make games for the web. Rather than some of these other efforts (which are impressive in their own way) to compile x86 code to things like asm.js, I wanted a "native" way of writing games that did not try to hide the fact that you are writing the game in JavaScript and embedding it on an HTML page. Right now, the engine uses canvas to render itself. The canvas APIs are simple enough (quite similar to things like Processing), but rather than the immediate mode API that canvas gives you, frb.js exposes a nice retained mode API that makes it really easy to work with and animate sprites. The engine is based on the C# game engine, <a href="http://flatredball.com">FlatRedBall</a>.

I have built some samples (<a href="http://joelmartinez.github.io/flatredball-js/#emitter">emitters</a>, <a href="http://joelmartinez.github.io/flatredball-js/#rain">rain</a>, <a href="http://joelmartinez.github.io/flatredball-js/#tiles">tiles</a>) to show some of the sample code, in addition to some <a href="https://github.com/joelmartinez/flatredball-js/wiki">documentation</a>. Eventually, the engine will be refactored to support multiple renderers in addition to canvas, such as WebGL.
<h3>Foresta.js - <a href="http://joelmartinez.github.io/foresta-js/">http://joelmartinez.github.io/foresta-js/</a></h3>
Foresta is a selector-style query engine for JavaScript Abstract Syntax Trees. It was written to support the sample framework for frb.js, which lets you update the code in an editor, and have it hot-swapped in real-time without resetting the simulation. It can (and eventually will) be used to do things like analysis of the user's written code to give them hints and check for accuracy given a task to complete.

&nbsp;]]></contentencoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>634</wp:post_id>
		<wp:post_date>2013-06-29 09:51:34</wp:post_date>
		<wp:post_date_gmt>2013-06-29 14:51:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>latest-open-source-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>

  <item>
    <title>Static Site Generator</title>
    <link>http://codecube.net/2013/07/static-site-generator/</link>
    <pubDate>Wed, 31 Jul 2013 14:51:34 +0000</pubDate>
    <dc:creator>admin</dc:creator>
    <contentencoded>
      <![CDATA[This site is now being generated by a CLI tool to generate a static site from a Wordpress export file. Uses RazorEngine as the templating engine, and a Wordpress post export file as the input. You can find it here on github:<br />
      <a href="https://github.com/joelmartinez/Static-Site-Generator">https://github.com/joelmartinez/Static-Site-Generator</a>

This is, at least initially, being written primarily to support the move of my blog (http://codecube.net) off of Wordpress. However this tool could be generalized into a more broadly useful tool given time and attention :)

In the meantime, it can be easily customized.
<ul>
<li>The content model is driven by a WordPress export file (content.xml)</li>
<li>Program.GetContent loads the file and uses linq-to-xml to build a list of post objects that serve as the model.</li>
<li>Program.BuildSite drives the creation of files. In the current iteration of this app, it's just an index page, and a list of posts.</li>
<li>The content templates use Razor syntax and are stored in /Templates folder.</li>
<li>Any non-template content such as images and css can be put in the /out folder. Just make sure you set the file properties to "copy if newer".</li>
</ul>
The static site will be output into the output location's 'out' folder (ie. /bin/debug/out).]]>
    </contentencoded>
    <wp:post_date>2013-07-31 09:51:34</wp:post_date>
    <wp:post_date_gmt>2013-07-31 14:51:34</wp:post_date_gmt>
    <wp:post_name>static-site-generator</wp:post_name>
    <wp:status>publish</wp:status>
    <category domain="category" nicename="programming"><![CDATA[Programming]]></category>
  </item>


  <item>
    <title>Apps for Your Data</title>
    <link>http://codecube.net/2013/08/apps-for-your-data/</link>
    <pubDate>Thu, 1 Aug 2013 14:51:34 +0000</pubDate>
    <dc:creator>admin</dc:creator>
    <contentencoded>
      <![CDATA[At the combined <a href="http://www.meetup.com/Orlando-iOS-Developer-Group/">iOS</a>/<a href="http://www.meetup.com/Central-Florida-Android-Developers-Group/">Android</a> meetup last night, <a href="http://demian.is/" rel="acquaintance met">Demian Seiler</a> did a short presentation on <a href="http://pressgr.am/">PressGram</a>. It is an app that purports to replace instagram, and does so by posting your pictures to your own Wordpress blog. But here's the interesting part, the app augments that post with its own social network and associated meta-data.

This is brilliant! All of the actual content, the valuable stuff, is entirely yours. Even if PressGram goes out of business, your pictures remain on your blog, yours to do whatever you wish with. But the meta-data and social network, which is a really hard problem to solve in a distributed fashion, is centralized in the pressgram service. I love this idea, especially considering all the recent press that services such as <a href="http://instagram.com">intagram</a> and <a href="http://medium.com">medium</a> have gotten recently about their terms of use.

I would really love to see more apps be tools to let you author your own content, while still maintaining ownership and control over how it is published.]]>
    </contentencoded>
    <wp:post_date>2013-08-1 09:51:34</wp:post_date>
    <wp:post_date_gmt>2013-08-1 14:51:34</wp:post_date_gmt>
    <wp:post_name>apps-for-your-data</wp:post_name>
    <wp:status>publish</wp:status>
    <category domain="category" nicename="programming"><![CDATA[Apps]]></category>
  </item>
  <item>
    <title>Exceptionally Simple Writing Tips</title>
    <link>http://codecube.net/2013/08/exceptionally-simple-writing-tips/</link>
    <pubDate>Fri, 16 Aug 2013 14:51:34 +0000</pubDate>
    <dc:creator>admin</dc:creator>
    <contentencoded>
      <![CDATA[<p>Pretty awesome Reddit thread where people give tips on writing. Some of my favorite tidbits:</p>
<blockquote>
<p>From someone who taught me a good deal about effective writing. Eliminate "very" from your vocabulary; it's a lazy way to say something, and it means nothing.</p>
<p>Very smart? You mean brilliant. Very pretty? You mean stunning. Very stupid? You mean moronic.</p>
</blockquote>
<p>And also this great one about <a href="http://www.reddit.com/r/AskReddit/comments/1jltqn/writers_of_reddit_what_are_exceptionally_simple/cbg1zxy">how you structure your sentences</a>:</p>
<blockquote>
<p>My favorite has always been the Gary Provost lesson on varying sentence length to create rhythm and flow</p>
<p>This sentence has five words. Here are five more words. Five-word sentences are fine. But several together become monotonous. Listen to what is happening. The writing is getting boring. The sound of it drones. It&rsquo;s like a stuck record. The ear demands some variety. Now listen. I vary the sentence length, and I create music. Music. The writing sings. It has a pleasant rhythm, a lilt, a harmony. I use short sentences. And I use sentences of medium length. And sometimes, when I am certain the reader is rested, I will engage him with a sentence of considerable length, a sentence that burns with energy and builds with all the impetus of a crescendo, the roll of the drums, the crash of the cymbals&ndash;sounds that say listen to this, it is important.</p>
</blockquote>
<p>And probably <a href="http://www.reddit.com/r/AskReddit/comments/1jltqn/writers_of_reddit_what_are_exceptionally_simple/cbfyn4u">my favorite tip</a>:</p>
<blockquote>
<p>&ldquo;In six seconds, you&rsquo;ll hate me. But in six months, you&rsquo;ll be a better writer.</p>
<p>From this point forward&mdash;at least for the next half year&mdash;you may not use &ldquo;thought&rdquo; verbs. These include: Thinks, Knows, Understands, Realizes, Believes, Wants, Remembers, Imagines, Desires, and a hundred others you love to use.</p>
<p>The list should also include: Loves and Hates. And it should include: Is and Has, but we&rsquo;ll get to those later.</p>
</blockquote>
<p>Some of the comments in that thread are hilarious too ... they'll usually take the tip given by the top level comment, and respond in the style suggested by the tip.&nbsp;</p>]]>
    </contentencoded>
    <wp:post_date>2013-08-16 09:51:34</wp:post_date>
    <wp:post_date_gmt>2013-08-16 14:51:34</wp:post_date_gmt>
    <wp:post_name>exceptionally-simple-writing-tips</wp:post_name>
    <wp:status>publish</wp:status>
    <category domain="category" nicename="writing"><![CDATA[Writing]]></category>
  </item>

  <item>
    <title>Xamarin</title>
    <link>http://codecube.net/2013/08/xamarin/</link>
    <pubDate>Mon, 19 Aug 2013 14:51:34 +0000</pubDate>
    <dc:creator>admin</dc:creator>
    <contentencoded>
      <![CDATA[<a href="http://xamarin.com" style="display:block;width:300px;margin-left:auto;margin-right:auto"><img src="http://codecube.net/design/images/Xamarin-Logo.png" title="Xamarin, inc." /></a>

I'm incredibly excited to announce that I've joined Xamarin! When I <a href="http://codecube.net/2012/12/c-5-first-look/" title="C# 5 First Look">wrote my book</a>, I remarked to a few friends at the time that it was basically a love letter to C#; a language that is powerful, expressive, and concise all at the same time. Working with the folks who are responsible for bringing C# to <a href="http://www.mono-project.com/Supported_Platforms">just about every platform</a> makes me happy, as does the fact that Xamarin's focus has been primarily to make cross-platform mobile development a reality.
      ]]>
    </contentencoded>
    <wp:post_date>2013-08-19 09:51:34</wp:post_date>
    <wp:post_date_gmt>2013-08-19 14:51:34</wp:post_date_gmt>
    <wp:post_name>xamarin</wp:post_name>
    <wp:status>publish</wp:status>
    <category domain="category" nicename="xamarin"><![CDATA[Xamarin]]></category>
  </item>

  <item>
    <title>How Work is Changing</title>
    <link>http://codecube.net/2013/09/how-work-is-changing/</link>
    <pubDate>Tuesday, 10 September 2013 14:51:34 +0000</pubDate>
    <dc:creator>admin</dc:creator>
    <contentencoded>
      <![CDATA[<p>As a Software Engineer/Programmer/Developer/NinjaPirateWhateverHipstersAreCallingThemselvesTheseDays, it&rsquo;s hard not to see the slowly changing tide of work culture in our particular industry. It is becoming easier and easier to survive (and in fact, thrive) as an independent worker. For the purposes of this discussion, I will constrain the definition of an independent worker to include both remote employees, and (truly) independent contractors. The important bits are the ability to work with the hardware and software that the independent worker chooses (even if that means using their own license), and being able to work while physically separated from the rest of the group.</p>
<p>Of course, you will be able to find people on either end of the spectrum; those who have been living and working this way for years, and those who are still &ldquo;shackled&rdquo; to a cube and have to go in to work every day. But suffice to say that the idea is not without its supporters. There are some that say that the future will be a &ldquo;swarm economy&rdquo; (<a href="http://falkvinge.net/2013/08/31/more-thoughts-on-the-coming-swarm-economy/" target="_blank">http://falkvinge.net/2013/08/31/more-thoughts-on-the-coming-swarm-economy/</a>&nbsp;)</p>
<blockquote>
<div>&ldquo;We are already seeing how people have pet projects on the side of their (one) employment, and projects weave in and out of somebody&rsquo;s life from time to time while they also change jobs and life situations. With increasing connectivity, this trend can be expected to accelerate toward a point where most people have some five to ten ongoing projects, some of which are paid and some are not, rather than having one &lsquo;day job&rsquo;. &ldquo;</div>
</blockquote>
<p>For me personally, I have definitely felt this change happening. Not only have my jobs been getting &ldquo;more free&rdquo; over the last several years, but so too has the drive and opportunity for &ldquo;side projects&rdquo;. Having gone from working in very restrictive corporate environments, to working remotely from my home (and periodically, from co-working spaces) has been extremely gratifying. Between tools like GitHub, IRC, IM, and Trello &hellip; it has become very easy to work effectively with a distributed team. Those that are talking about the swarm economy point to these advancements, and then others that allow non-tech members of the economy to monetize their skills (VoiceBunny, Etsy) knowledge (Mechanical Turk), or assets (AirBnB, Lyft).</p>
<p>The problem with many of these discussions is that they are centered around the idea that just because it&rsquo;s happening for us programmers (or high tech entrepreneurs in general), that it is happening for the rest of society.There is a lot of evidence that many in the economy are either being left behind, or even being taken advantage of by this massive advancement in productivity (&nbsp;<a href="http://techcrunch.com/2013/09/09/the-data-factory/" rel="nofollow" target="_blank">http://techcrunch.com/2013/09/09/the-data-factory/</a>&nbsp;).</p>
<blockquote>
<div>&ldquo;It&rsquo;s tough if you&rsquo;re poor, it&rsquo;s tough if you&rsquo;re middle class. It means you have to have the right education to work at [the tech giants]. If you&rsquo;re not like us, it&rsquo;s tough&rdquo;</div>
</blockquote>
<p>I&rsquo;m glad that the conversation is happening. The truth of course lies somewhere in the middle; that there are many changes happening in the economy, and many opportunities for those who have the knowledge and the drive to take advantage of it. However there will surely be casualties. Those members of society that will not have the entrepreneurial spirit; who would have in generations past been content with working a low skilled factory job for their entire life until they can retire on their pension. I&rsquo;m not sure what is in store for that generation (or two) that has to survive during this cultural shift &hellip; but we will probably have to figure it out at some point in the near future.</p>
<p>Time will tell how we do.</p>]]>
    </contentencoded>
    <wp:post_date>2013-09-10 09:51:34</wp:post_date>
    <wp:post_date_gmt>2013-09-10 14:51:34</wp:post_date_gmt>
    <wp:post_name>how-work-is-changing</wp:post_name>
    <wp:status>publish</wp:status>
    <category domain="category" nicename="software"><![CDATA[Software]]></category>
  </item>
</channel>
</rss>
